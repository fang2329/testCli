// Code generated by protoc-gen-go. DO NOT EDIT.
// source: baccarat_logic_msg.proto

package net

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 游戏状态
type MsgBaccaratGameInfoFreeRep struct {
	TimeLeave        *uint32 `protobuf:"varint,1,opt,name=time_leave" json:"time_leave,omitempty"`
	BankerId         *uint32 `protobuf:"varint,2,opt,name=banker_id" json:"banker_id,omitempty"`
	BankerTime       *uint32 `protobuf:"varint,3,opt,name=banker_time" json:"banker_time,omitempty"`
	BankerWinScore   *int64  `protobuf:"varint,4,opt,name=banker_win_score" json:"banker_win_score,omitempty"`
	BankerScore      *int64  `protobuf:"varint,5,opt,name=banker_score" json:"banker_score,omitempty"`
	BankerBuyinScore *int64  `protobuf:"varint,6,opt,name=banker_buyin_score" json:"banker_buyin_score,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgBaccaratGameInfoFreeRep) Reset()                    { *m = MsgBaccaratGameInfoFreeRep{} }
func (m *MsgBaccaratGameInfoFreeRep) String() string            { return proto.CompactTextString(m) }
func (*MsgBaccaratGameInfoFreeRep) ProtoMessage()               {}
func (*MsgBaccaratGameInfoFreeRep) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *MsgBaccaratGameInfoFreeRep) GetTimeLeave() uint32 {
	if m != nil && m.TimeLeave != nil {
		return *m.TimeLeave
	}
	return 0
}

func (m *MsgBaccaratGameInfoFreeRep) GetBankerId() uint32 {
	if m != nil && m.BankerId != nil {
		return *m.BankerId
	}
	return 0
}

func (m *MsgBaccaratGameInfoFreeRep) GetBankerTime() uint32 {
	if m != nil && m.BankerTime != nil {
		return *m.BankerTime
	}
	return 0
}

func (m *MsgBaccaratGameInfoFreeRep) GetBankerWinScore() int64 {
	if m != nil && m.BankerWinScore != nil {
		return *m.BankerWinScore
	}
	return 0
}

func (m *MsgBaccaratGameInfoFreeRep) GetBankerScore() int64 {
	if m != nil && m.BankerScore != nil {
		return *m.BankerScore
	}
	return 0
}

func (m *MsgBaccaratGameInfoFreeRep) GetBankerBuyinScore() int64 {
	if m != nil && m.BankerBuyinScore != nil {
		return *m.BankerBuyinScore
	}
	return 0
}

type MsgBaccaratGameInfoPlayRep struct {
	AllJettonScore   []int64     `protobuf:"varint,1,rep,name=all_jetton_score" json:"all_jetton_score,omitempty"`
	TableCards       []*MsgCards `protobuf:"bytes,2,rep,name=table_cards" json:"table_cards,omitempty"`
	BankerId         *uint32     `protobuf:"varint,3,opt,name=banker_id" json:"banker_id,omitempty"`
	BankerTime       *uint32     `protobuf:"varint,4,opt,name=banker_time" json:"banker_time,omitempty"`
	BankerWinScore   *int64      `protobuf:"varint,5,opt,name=banker_win_score" json:"banker_win_score,omitempty"`
	BankerScore      *int64      `protobuf:"varint,6,opt,name=banker_score" json:"banker_score,omitempty"`
	TimeLeave        *uint32     `protobuf:"varint,7,opt,name=time_leave" json:"time_leave,omitempty"`
	GameStatus       *uint32     `protobuf:"varint,8,opt,name=game_status" json:"game_status,omitempty"`
	SelfJettonScore  []int64     `protobuf:"varint,9,rep,name=self_jetton_score" json:"self_jetton_score,omitempty"`
	BankerBuyinScore *int64      `protobuf:"varint,10,opt,name=banker_buyin_score" json:"banker_buyin_score,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *MsgBaccaratGameInfoPlayRep) Reset()                    { *m = MsgBaccaratGameInfoPlayRep{} }
func (m *MsgBaccaratGameInfoPlayRep) String() string            { return proto.CompactTextString(m) }
func (*MsgBaccaratGameInfoPlayRep) ProtoMessage()               {}
func (*MsgBaccaratGameInfoPlayRep) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *MsgBaccaratGameInfoPlayRep) GetAllJettonScore() []int64 {
	if m != nil {
		return m.AllJettonScore
	}
	return nil
}

func (m *MsgBaccaratGameInfoPlayRep) GetTableCards() []*MsgCards {
	if m != nil {
		return m.TableCards
	}
	return nil
}

func (m *MsgBaccaratGameInfoPlayRep) GetBankerId() uint32 {
	if m != nil && m.BankerId != nil {
		return *m.BankerId
	}
	return 0
}

func (m *MsgBaccaratGameInfoPlayRep) GetBankerTime() uint32 {
	if m != nil && m.BankerTime != nil {
		return *m.BankerTime
	}
	return 0
}

func (m *MsgBaccaratGameInfoPlayRep) GetBankerWinScore() int64 {
	if m != nil && m.BankerWinScore != nil {
		return *m.BankerWinScore
	}
	return 0
}

func (m *MsgBaccaratGameInfoPlayRep) GetBankerScore() int64 {
	if m != nil && m.BankerScore != nil {
		return *m.BankerScore
	}
	return 0
}

func (m *MsgBaccaratGameInfoPlayRep) GetTimeLeave() uint32 {
	if m != nil && m.TimeLeave != nil {
		return *m.TimeLeave
	}
	return 0
}

func (m *MsgBaccaratGameInfoPlayRep) GetGameStatus() uint32 {
	if m != nil && m.GameStatus != nil {
		return *m.GameStatus
	}
	return 0
}

func (m *MsgBaccaratGameInfoPlayRep) GetSelfJettonScore() []int64 {
	if m != nil {
		return m.SelfJettonScore
	}
	return nil
}

func (m *MsgBaccaratGameInfoPlayRep) GetBankerBuyinScore() int64 {
	if m != nil && m.BankerBuyinScore != nil {
		return *m.BankerBuyinScore
	}
	return 0
}

// 游戏开始
type MsgBaccaratStartRep struct {
	BankerId         *uint32 `protobuf:"varint,1,opt,name=banker_id" json:"banker_id,omitempty"`
	BankerScore      *int64  `protobuf:"varint,2,opt,name=banker_score" json:"banker_score,omitempty"`
	TimeLeave        *uint32 `protobuf:"varint,3,opt,name=time_leave" json:"time_leave,omitempty"`
	BankerBuyinScore *int64  `protobuf:"varint,4,opt,name=banker_buyin_score" json:"banker_buyin_score,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgBaccaratStartRep) Reset()                    { *m = MsgBaccaratStartRep{} }
func (m *MsgBaccaratStartRep) String() string            { return proto.CompactTextString(m) }
func (*MsgBaccaratStartRep) ProtoMessage()               {}
func (*MsgBaccaratStartRep) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *MsgBaccaratStartRep) GetBankerId() uint32 {
	if m != nil && m.BankerId != nil {
		return *m.BankerId
	}
	return 0
}

func (m *MsgBaccaratStartRep) GetBankerScore() int64 {
	if m != nil && m.BankerScore != nil {
		return *m.BankerScore
	}
	return 0
}

func (m *MsgBaccaratStartRep) GetTimeLeave() uint32 {
	if m != nil && m.TimeLeave != nil {
		return *m.TimeLeave
	}
	return 0
}

func (m *MsgBaccaratStartRep) GetBankerBuyinScore() int64 {
	if m != nil && m.BankerBuyinScore != nil {
		return *m.BankerBuyinScore
	}
	return 0
}

// 用户下注
type MsgBaccaratPlaceJettonReq struct {
	JettonArea       *uint32 `protobuf:"varint,1,opt,name=jetton_area" json:"jetton_area,omitempty"`
	JettonScore      *int64  `protobuf:"varint,2,opt,name=jetton_score" json:"jetton_score,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgBaccaratPlaceJettonReq) Reset()                    { *m = MsgBaccaratPlaceJettonReq{} }
func (m *MsgBaccaratPlaceJettonReq) String() string            { return proto.CompactTextString(m) }
func (*MsgBaccaratPlaceJettonReq) ProtoMessage()               {}
func (*MsgBaccaratPlaceJettonReq) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *MsgBaccaratPlaceJettonReq) GetJettonArea() uint32 {
	if m != nil && m.JettonArea != nil {
		return *m.JettonArea
	}
	return 0
}

func (m *MsgBaccaratPlaceJettonReq) GetJettonScore() int64 {
	if m != nil && m.JettonScore != nil {
		return *m.JettonScore
	}
	return 0
}

type MsgBaccaratPlaceJettonRep struct {
	JettonArea       *uint32 `protobuf:"varint,1,opt,name=jetton_area" json:"jetton_area,omitempty"`
	JettonScore      *int64  `protobuf:"varint,2,opt,name=jetton_score" json:"jetton_score,omitempty"`
	Result           *uint32 `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgBaccaratPlaceJettonRep) Reset()                    { *m = MsgBaccaratPlaceJettonRep{} }
func (m *MsgBaccaratPlaceJettonRep) String() string            { return proto.CompactTextString(m) }
func (*MsgBaccaratPlaceJettonRep) ProtoMessage()               {}
func (*MsgBaccaratPlaceJettonRep) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *MsgBaccaratPlaceJettonRep) GetJettonArea() uint32 {
	if m != nil && m.JettonArea != nil {
		return *m.JettonArea
	}
	return 0
}

func (m *MsgBaccaratPlaceJettonRep) GetJettonScore() int64 {
	if m != nil && m.JettonScore != nil {
		return *m.JettonScore
	}
	return 0
}

func (m *MsgBaccaratPlaceJettonRep) GetResult() uint32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

type MsgBaccaratPlaceJettonBroadcast struct {
	Uid              *uint32 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	JettonArea       *uint32 `protobuf:"varint,2,opt,name=jetton_area" json:"jetton_area,omitempty"`
	JettonScore      *int64  `protobuf:"varint,3,opt,name=jetton_score" json:"jetton_score,omitempty"`
	TotalJettonScore *int64  `protobuf:"varint,4,opt,name=total_jetton_score" json:"total_jetton_score,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgBaccaratPlaceJettonBroadcast) Reset()                    { *m = MsgBaccaratPlaceJettonBroadcast{} }
func (m *MsgBaccaratPlaceJettonBroadcast) String() string            { return proto.CompactTextString(m) }
func (*MsgBaccaratPlaceJettonBroadcast) ProtoMessage()               {}
func (*MsgBaccaratPlaceJettonBroadcast) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *MsgBaccaratPlaceJettonBroadcast) GetUid() uint32 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *MsgBaccaratPlaceJettonBroadcast) GetJettonArea() uint32 {
	if m != nil && m.JettonArea != nil {
		return *m.JettonArea
	}
	return 0
}

func (m *MsgBaccaratPlaceJettonBroadcast) GetJettonScore() int64 {
	if m != nil && m.JettonScore != nil {
		return *m.JettonScore
	}
	return 0
}

func (m *MsgBaccaratPlaceJettonBroadcast) GetTotalJettonScore() int64 {
	if m != nil && m.TotalJettonScore != nil {
		return *m.TotalJettonScore
	}
	return 0
}

// 游戏结束
type MsgBaccaratGameEnd struct {
	TimeLeave        *uint32     `protobuf:"varint,1,opt,name=time_leave" json:"time_leave,omitempty"`
	TableCards       []*MsgCards `protobuf:"bytes,2,rep,name=table_cards" json:"table_cards,omitempty"`
	CardTypes        []uint32    `protobuf:"varint,3,rep,name=card_types" json:"card_types,omitempty"`
	BankerWinScore   *int64      `protobuf:"varint,4,opt,name=banker_win_score" json:"banker_win_score,omitempty"`
	BankerTotalScore *int64      `protobuf:"varint,5,opt,name=banker_total_score" json:"banker_total_score,omitempty"`
	BankerTime       *uint32     `protobuf:"varint,6,opt,name=banker_time" json:"banker_time,omitempty"`
	UserScore        *int64      `protobuf:"varint,7,opt,name=user_score" json:"user_score,omitempty"`
	PlayerScore      []int64     `protobuf:"varint,8,rep,name=player_score" json:"player_score,omitempty"`
	WinTypes         []uint32    `protobuf:"varint,9,rep,name=win_types" json:"win_types,omitempty"`
	RemainCard       *uint32     `protobuf:"varint,10,opt,name=remain_card" json:"remain_card,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *MsgBaccaratGameEnd) Reset()                    { *m = MsgBaccaratGameEnd{} }
func (m *MsgBaccaratGameEnd) String() string            { return proto.CompactTextString(m) }
func (*MsgBaccaratGameEnd) ProtoMessage()               {}
func (*MsgBaccaratGameEnd) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

func (m *MsgBaccaratGameEnd) GetTimeLeave() uint32 {
	if m != nil && m.TimeLeave != nil {
		return *m.TimeLeave
	}
	return 0
}

func (m *MsgBaccaratGameEnd) GetTableCards() []*MsgCards {
	if m != nil {
		return m.TableCards
	}
	return nil
}

func (m *MsgBaccaratGameEnd) GetCardTypes() []uint32 {
	if m != nil {
		return m.CardTypes
	}
	return nil
}

func (m *MsgBaccaratGameEnd) GetBankerWinScore() int64 {
	if m != nil && m.BankerWinScore != nil {
		return *m.BankerWinScore
	}
	return 0
}

func (m *MsgBaccaratGameEnd) GetBankerTotalScore() int64 {
	if m != nil && m.BankerTotalScore != nil {
		return *m.BankerTotalScore
	}
	return 0
}

func (m *MsgBaccaratGameEnd) GetBankerTime() uint32 {
	if m != nil && m.BankerTime != nil {
		return *m.BankerTime
	}
	return 0
}

func (m *MsgBaccaratGameEnd) GetUserScore() int64 {
	if m != nil && m.UserScore != nil {
		return *m.UserScore
	}
	return 0
}

func (m *MsgBaccaratGameEnd) GetPlayerScore() []int64 {
	if m != nil {
		return m.PlayerScore
	}
	return nil
}

func (m *MsgBaccaratGameEnd) GetWinTypes() []uint32 {
	if m != nil {
		return m.WinTypes
	}
	return nil
}

func (m *MsgBaccaratGameEnd) GetRemainCard() uint32 {
	if m != nil && m.RemainCard != nil {
		return *m.RemainCard
	}
	return 0
}

// 申请庄家
type MsgBaccaratApplyBanker struct {
	ApplyOper        *uint32 `protobuf:"varint,1,opt,name=apply_oper" json:"apply_oper,omitempty"`
	ApplyScore       *int64  `protobuf:"varint,2,opt,name=apply_score" json:"apply_score,omitempty"`
	AutoAddscore     *uint32 `protobuf:"varint,3,opt,name=auto_addscore" json:"auto_addscore,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgBaccaratApplyBanker) Reset()                    { *m = MsgBaccaratApplyBanker{} }
func (m *MsgBaccaratApplyBanker) String() string            { return proto.CompactTextString(m) }
func (*MsgBaccaratApplyBanker) ProtoMessage()               {}
func (*MsgBaccaratApplyBanker) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{7} }

func (m *MsgBaccaratApplyBanker) GetApplyOper() uint32 {
	if m != nil && m.ApplyOper != nil {
		return *m.ApplyOper
	}
	return 0
}

func (m *MsgBaccaratApplyBanker) GetApplyScore() int64 {
	if m != nil && m.ApplyScore != nil {
		return *m.ApplyScore
	}
	return 0
}

func (m *MsgBaccaratApplyBanker) GetAutoAddscore() uint32 {
	if m != nil && m.AutoAddscore != nil {
		return *m.AutoAddscore
	}
	return 0
}

type MsgBaccaratApplyBankerRep struct {
	ApplyOper        *uint32 `protobuf:"varint,1,opt,name=apply_oper" json:"apply_oper,omitempty"`
	Result           *uint32 `protobuf:"varint,2,opt,name=result" json:"result,omitempty"`
	BuyinScore       *int64  `protobuf:"varint,3,opt,name=buyin_score" json:"buyin_score,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgBaccaratApplyBankerRep) Reset()                    { *m = MsgBaccaratApplyBankerRep{} }
func (m *MsgBaccaratApplyBankerRep) String() string            { return proto.CompactTextString(m) }
func (*MsgBaccaratApplyBankerRep) ProtoMessage()               {}
func (*MsgBaccaratApplyBankerRep) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{8} }

func (m *MsgBaccaratApplyBankerRep) GetApplyOper() uint32 {
	if m != nil && m.ApplyOper != nil {
		return *m.ApplyOper
	}
	return 0
}

func (m *MsgBaccaratApplyBankerRep) GetResult() uint32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *MsgBaccaratApplyBankerRep) GetBuyinScore() int64 {
	if m != nil && m.BuyinScore != nil {
		return *m.BuyinScore
	}
	return 0
}

// 切换庄家
type MsgBaccaratChangeBanker struct {
	BankerUser       *uint32 `protobuf:"varint,1,opt,name=banker_user" json:"banker_user,omitempty"`
	BankerScore      *int64  `protobuf:"varint,2,opt,name=banker_score" json:"banker_score,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgBaccaratChangeBanker) Reset()                    { *m = MsgBaccaratChangeBanker{} }
func (m *MsgBaccaratChangeBanker) String() string            { return proto.CompactTextString(m) }
func (*MsgBaccaratChangeBanker) ProtoMessage()               {}
func (*MsgBaccaratChangeBanker) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{9} }

func (m *MsgBaccaratChangeBanker) GetBankerUser() uint32 {
	if m != nil && m.BankerUser != nil {
		return *m.BankerUser
	}
	return 0
}

func (m *MsgBaccaratChangeBanker) GetBankerScore() int64 {
	if m != nil && m.BankerScore != nil {
		return *m.BankerScore
	}
	return 0
}

// 更新积分
type MsgBaccaratChangeUserScore struct {
	ChairId          *uint32 `protobuf:"varint,1,opt,name=chair_id" json:"chair_id,omitempty"`
	Score            *int64  `protobuf:"varint,2,opt,name=score" json:"score,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgBaccaratChangeUserScore) Reset()                    { *m = MsgBaccaratChangeUserScore{} }
func (m *MsgBaccaratChangeUserScore) String() string            { return proto.CompactTextString(m) }
func (*MsgBaccaratChangeUserScore) ProtoMessage()               {}
func (*MsgBaccaratChangeUserScore) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{10} }

func (m *MsgBaccaratChangeUserScore) GetChairId() uint32 {
	if m != nil && m.ChairId != nil {
		return *m.ChairId
	}
	return 0
}

func (m *MsgBaccaratChangeUserScore) GetScore() int64 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

// 申请庄家列表
type MsgBaccaratApplyList struct {
	PlayerIds        []uint32 `protobuf:"varint,1,rep,name=player_ids" json:"player_ids,omitempty"`
	ApplyScore       []int64  `protobuf:"varint,2,rep,name=apply_score" json:"apply_score,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *MsgBaccaratApplyList) Reset()                    { *m = MsgBaccaratApplyList{} }
func (m *MsgBaccaratApplyList) String() string            { return proto.CompactTextString(m) }
func (*MsgBaccaratApplyList) ProtoMessage()               {}
func (*MsgBaccaratApplyList) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{11} }

func (m *MsgBaccaratApplyList) GetPlayerIds() []uint32 {
	if m != nil {
		return m.PlayerIds
	}
	return nil
}

func (m *MsgBaccaratApplyList) GetApplyScore() []int64 {
	if m != nil {
		return m.ApplyScore
	}
	return nil
}

// 插队
type MsgBaccaratJumpApplyQueueReq struct {
	JumpPos          *uint32 `protobuf:"varint,1,opt,name=jump_pos" json:"jump_pos,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgBaccaratJumpApplyQueueReq) Reset()                    { *m = MsgBaccaratJumpApplyQueueReq{} }
func (m *MsgBaccaratJumpApplyQueueReq) String() string            { return proto.CompactTextString(m) }
func (*MsgBaccaratJumpApplyQueueReq) ProtoMessage()               {}
func (*MsgBaccaratJumpApplyQueueReq) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{12} }

func (m *MsgBaccaratJumpApplyQueueReq) GetJumpPos() uint32 {
	if m != nil && m.JumpPos != nil {
		return *m.JumpPos
	}
	return 0
}

type MsgBaccaratJumpApplyQueueRep struct {
	Result           *uint32 `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgBaccaratJumpApplyQueueRep) Reset()                    { *m = MsgBaccaratJumpApplyQueueRep{} }
func (m *MsgBaccaratJumpApplyQueueRep) String() string            { return proto.CompactTextString(m) }
func (*MsgBaccaratJumpApplyQueueRep) ProtoMessage()               {}
func (*MsgBaccaratJumpApplyQueueRep) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{13} }

func (m *MsgBaccaratJumpApplyQueueRep) GetResult() uint32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

// 	庄家结算
type MsgBaccaratBankerCalcRep struct {
	BankerTime       *uint32 `protobuf:"varint,1,opt,name=banker_time" json:"banker_time,omitempty"`
	WinCount         *uint32 `protobuf:"varint,2,opt,name=win_count" json:"win_count,omitempty"`
	BuyinScore       *int64  `protobuf:"varint,3,opt,name=buyin_score" json:"buyin_score,omitempty"`
	WinScore         *int64  `protobuf:"varint,4,opt,name=win_score" json:"win_score,omitempty"`
	WinMax           *int64  `protobuf:"varint,5,opt,name=win_max" json:"win_max,omitempty"`
	WinMin           *int64  `protobuf:"varint,6,opt,name=win_min" json:"win_min,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgBaccaratBankerCalcRep) Reset()                    { *m = MsgBaccaratBankerCalcRep{} }
func (m *MsgBaccaratBankerCalcRep) String() string            { return proto.CompactTextString(m) }
func (*MsgBaccaratBankerCalcRep) ProtoMessage()               {}
func (*MsgBaccaratBankerCalcRep) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{14} }

func (m *MsgBaccaratBankerCalcRep) GetBankerTime() uint32 {
	if m != nil && m.BankerTime != nil {
		return *m.BankerTime
	}
	return 0
}

func (m *MsgBaccaratBankerCalcRep) GetWinCount() uint32 {
	if m != nil && m.WinCount != nil {
		return *m.WinCount
	}
	return 0
}

func (m *MsgBaccaratBankerCalcRep) GetBuyinScore() int64 {
	if m != nil && m.BuyinScore != nil {
		return *m.BuyinScore
	}
	return 0
}

func (m *MsgBaccaratBankerCalcRep) GetWinScore() int64 {
	if m != nil && m.WinScore != nil {
		return *m.WinScore
	}
	return 0
}

func (m *MsgBaccaratBankerCalcRep) GetWinMax() int64 {
	if m != nil && m.WinMax != nil {
		return *m.WinMax
	}
	return 0
}

func (m *MsgBaccaratBankerCalcRep) GetWinMin() int64 {
	if m != nil && m.WinMin != nil {
		return *m.WinMin
	}
	return 0
}

//  庄家补币
type MsgBaccaratAddBankerscoreRep struct {
	BuyinScore       *int64 `protobuf:"varint,1,opt,name=buyin_score" json:"buyin_score,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *MsgBaccaratAddBankerscoreRep) Reset()                    { *m = MsgBaccaratAddBankerscoreRep{} }
func (m *MsgBaccaratAddBankerscoreRep) String() string            { return proto.CompactTextString(m) }
func (*MsgBaccaratAddBankerscoreRep) ProtoMessage()               {}
func (*MsgBaccaratAddBankerscoreRep) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{15} }

func (m *MsgBaccaratAddBankerscoreRep) GetBuyinScore() int64 {
	if m != nil && m.BuyinScore != nil {
		return *m.BuyinScore
	}
	return 0
}

//  游戏记录
type BaccaratPlayLog struct {
	PlayerPair       *uint32 `protobuf:"varint,1,opt,name=player_pair" json:"player_pair,omitempty"`
	BankerPair       *uint32 `protobuf:"varint,2,opt,name=banker_pair" json:"banker_pair,omitempty"`
	PlayerCount      *uint32 `protobuf:"varint,3,opt,name=player_count" json:"player_count,omitempty"`
	BankerCount      *uint32 `protobuf:"varint,4,opt,name=banker_count" json:"banker_count,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BaccaratPlayLog) Reset()                    { *m = BaccaratPlayLog{} }
func (m *BaccaratPlayLog) String() string            { return proto.CompactTextString(m) }
func (*BaccaratPlayLog) ProtoMessage()               {}
func (*BaccaratPlayLog) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{16} }

func (m *BaccaratPlayLog) GetPlayerPair() uint32 {
	if m != nil && m.PlayerPair != nil {
		return *m.PlayerPair
	}
	return 0
}

func (m *BaccaratPlayLog) GetBankerPair() uint32 {
	if m != nil && m.BankerPair != nil {
		return *m.BankerPair
	}
	return 0
}

func (m *BaccaratPlayLog) GetPlayerCount() uint32 {
	if m != nil && m.PlayerCount != nil {
		return *m.PlayerCount
	}
	return 0
}

func (m *BaccaratPlayLog) GetBankerCount() uint32 {
	if m != nil && m.BankerCount != nil {
		return *m.BankerCount
	}
	return 0
}

type MsgBaccaratPlayLogRep struct {
	Logs             []*BaccaratPlayLog `protobuf:"bytes,1,rep,name=logs" json:"logs,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *MsgBaccaratPlayLogRep) Reset()                    { *m = MsgBaccaratPlayLogRep{} }
func (m *MsgBaccaratPlayLogRep) String() string            { return proto.CompactTextString(m) }
func (*MsgBaccaratPlayLogRep) ProtoMessage()               {}
func (*MsgBaccaratPlayLogRep) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{17} }

func (m *MsgBaccaratPlayLogRep) GetLogs() []*BaccaratPlayLog {
	if m != nil {
		return m.Logs
	}
	return nil
}

func init() {
	proto.RegisterType((*MsgBaccaratGameInfoFreeRep)(nil), "net.msg_baccarat_game_info_free_rep")
	proto.RegisterType((*MsgBaccaratGameInfoPlayRep)(nil), "net.msg_baccarat_game_info_play_rep")
	proto.RegisterType((*MsgBaccaratStartRep)(nil), "net.msg_baccarat_start_rep")
	proto.RegisterType((*MsgBaccaratPlaceJettonReq)(nil), "net.msg_baccarat_place_jetton_req")
	proto.RegisterType((*MsgBaccaratPlaceJettonRep)(nil), "net.msg_baccarat_place_jetton_rep")
	proto.RegisterType((*MsgBaccaratPlaceJettonBroadcast)(nil), "net.msg_baccarat_place_jetton_broadcast")
	proto.RegisterType((*MsgBaccaratGameEnd)(nil), "net.msg_baccarat_game_end")
	proto.RegisterType((*MsgBaccaratApplyBanker)(nil), "net.msg_baccarat_apply_banker")
	proto.RegisterType((*MsgBaccaratApplyBankerRep)(nil), "net.msg_baccarat_apply_banker_rep")
	proto.RegisterType((*MsgBaccaratChangeBanker)(nil), "net.msg_baccarat_change_banker")
	proto.RegisterType((*MsgBaccaratChangeUserScore)(nil), "net.msg_baccarat_change_user_score")
	proto.RegisterType((*MsgBaccaratApplyList)(nil), "net.msg_baccarat_apply_list")
	proto.RegisterType((*MsgBaccaratJumpApplyQueueReq)(nil), "net.msg_baccarat_jump_apply_queue_req")
	proto.RegisterType((*MsgBaccaratJumpApplyQueueRep)(nil), "net.msg_baccarat_jump_apply_queue_rep")
	proto.RegisterType((*MsgBaccaratBankerCalcRep)(nil), "net.msg_baccarat_banker_calc_rep")
	proto.RegisterType((*MsgBaccaratAddBankerscoreRep)(nil), "net.msg_baccarat_add_bankerscore_rep")
	proto.RegisterType((*BaccaratPlayLog)(nil), "net.baccarat_play_log")
	proto.RegisterType((*MsgBaccaratPlayLogRep)(nil), "net.msg_baccarat_play_log_rep")
}

func init() { proto.RegisterFile("baccarat_logic_msg.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 740 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x55, 0xcd, 0x72, 0xd3, 0x3c,
	0x14, 0x1d, 0xc7, 0xfd, 0x49, 0x6e, 0xbe, 0xf4, 0x4b, 0x5c, 0x5a, 0xdc, 0x0c, 0x3f, 0xc1, 0x65,
	0x91, 0x55, 0x17, 0x65, 0x18, 0xd6, 0x65, 0xc3, 0x0c, 0x4f, 0xc0, 0xc0, 0x42, 0xa3, 0xd8, 0xb7,
	0xa9, 0x8b, 0x63, 0xb9, 0x92, 0x0c, 0x64, 0xc9, 0x1b, 0xb0, 0xe4, 0x15, 0x78, 0x4b, 0x46, 0x57,
	0xfe, 0xaf, 0x1b, 0x60, 0x97, 0x1c, 0x4b, 0xf7, 0x9e, 0x73, 0x74, 0xae, 0x04, 0xfe, 0x8a, 0x87,
	0x21, 0x97, 0x5c, 0xb3, 0x44, 0xac, 0xe3, 0x90, 0x6d, 0xd4, 0xfa, 0x22, 0x93, 0x42, 0x0b, 0xcf,
	0x4d, 0x51, 0xcf, 0x4f, 0x56, 0x5c, 0xa1, 0x01, 0x99, 0xd2, 0x32, 0x0f, 0xb5, 0xfd, 0x36, 0x9f,
	0xa2, 0x94, 0x42, 0xb2, 0x50, 0x44, 0x68, 0x91, 0xe0, 0x97, 0x03, 0xcf, 0xcd, 0xb2, 0xaa, 0xdc,
	0x9a, 0x6f, 0x90, 0xc5, 0xe9, 0xb5, 0x60, 0xd7, 0x12, 0x91, 0x49, 0xcc, 0x3c, 0x0f, 0x40, 0xc7,
	0x1b, 0x64, 0x09, 0xf2, 0x2f, 0xe8, 0x3b, 0x0b, 0x67, 0x39, 0xf1, 0x66, 0x30, 0x5a, 0xf1, 0xf4,
	0x33, 0x4a, 0x16, 0x47, 0xfe, 0x80, 0xa0, 0x63, 0x18, 0x17, 0x90, 0x59, 0xed, 0xbb, 0x04, 0xfa,
	0x30, 0x2d, 0xc0, 0xaf, 0x71, 0xca, 0x54, 0x28, 0x24, 0xfa, 0x7b, 0x0b, 0x67, 0xe9, 0x7a, 0x8f,
	0xe0, 0xbf, 0xe2, 0x8b, 0x45, 0xf7, 0x09, 0x9d, 0x83, 0x57, 0xa0, 0xab, 0x7c, 0x5b, 0xed, 0x38,
	0x30, 0xdf, 0x82, 0x9f, 0x83, 0x07, 0xb9, 0x66, 0x09, 0xdf, 0x12, 0x57, 0x1f, 0xa6, 0x3c, 0x49,
	0xd8, 0x2d, 0x6a, 0x2d, 0xca, 0xdd, 0xce, 0xc2, 0x5d, 0xba, 0xde, 0x39, 0x8c, 0x35, 0x5f, 0x25,
	0xc8, 0x42, 0x2e, 0x23, 0xe5, 0x0f, 0x16, 0xee, 0x72, 0x7c, 0x79, 0x74, 0x91, 0xa2, 0xbe, 0x30,
	0x45, 0x09, 0x6d, 0xcb, 0x72, 0xfb, 0x64, 0xed, 0x3d, 0x28, 0x6b, 0xbf, 0x57, 0x16, 0x51, 0xef,
	0x58, 0x78, 0x58, 0x16, 0x26, 0x01, 0x4a, 0x73, 0x9d, 0x2b, 0x7f, 0x48, 0xe0, 0x19, 0xcc, 0x14,
	0x26, 0xd7, 0x6d, 0x01, 0x23, 0x12, 0xd0, 0x6f, 0x0d, 0x90, 0x35, 0x77, 0x70, 0xda, 0x72, 0x46,
	0x69, 0x2e, 0x35, 0x19, 0xd2, 0x52, 0x64, 0xcf, 0xae, 0x4b, 0x71, 0xd0, 0x43, 0xd1, 0x6a, 0xef,
	0x6f, 0x49, 0xe7, 0x17, 0xbc, 0x87, 0xa7, 0xad, 0x96, 0x59, 0xc2, 0x43, 0x2c, 0x79, 0x4b, 0xbc,
	0x33, 0xfa, 0x8a, 0x7f, 0x5c, 0x22, 0xaf, 0x7b, 0xb7, 0xa4, 0x51, 0xef, 0xe0, 0xe3, 0xee, 0x5a,
	0xd9, 0x3f, 0xd4, 0xf2, 0x8e, 0xe0, 0x40, 0xa2, 0xca, 0x13, 0x6d, 0x35, 0x04, 0x5b, 0x38, 0x7f,
	0xb8, 0xf6, 0x4a, 0x0a, 0x1e, 0x85, 0x5c, 0x69, 0x6f, 0x0c, 0x6e, 0x5e, 0x39, 0xd4, 0x69, 0x37,
	0xe8, 0x6d, 0xe7, 0x96, 0x81, 0xd5, 0x42, 0xf3, 0x4e, 0xe4, 0xac, 0x45, 0xdf, 0x07, 0x70, 0x72,
	0x3f, 0xb0, 0x98, 0x46, 0xbd, 0x23, 0xf5, 0x57, 0x01, 0xf5, 0x00, 0xcc, 0x0f, 0xa6, 0xb7, 0x19,
	0x2a, 0xdf, 0x5d, 0xb8, 0x3b, 0x67, 0xac, 0x3e, 0x3f, 0xcb, 0xb1, 0x19, 0xd4, 0x4e, 0xae, 0x0f,
	0x88, 0x83, 0x07, 0x90, 0xab, 0x2a, 0x18, 0x87, 0x65, 0xa2, 0xcd, 0x78, 0x55, 0xe8, 0x90, 0xd2,
	0x38, 0x83, 0x91, 0xe9, 0x66, 0x79, 0x8c, 0x88, 0xc7, 0x31, 0x8c, 0x25, 0x6e, 0x78, 0x9c, 0x12,
	0x57, 0x4a, 0xe6, 0x24, 0xf8, 0x04, 0x67, 0x2d, 0x0b, 0x78, 0x96, 0x25, 0x5b, 0x66, 0x3b, 0x9b,
	0x76, 0xf6, 0xbf, 0xc8, 0x50, 0xd6, 0xde, 0x5b, 0xac, 0x79, 0xa8, 0x27, 0x30, 0xe1, 0xb9, 0x16,
	0x8c, 0x47, 0x51, 0x6d, 0xfe, 0x24, 0xf8, 0xd0, 0xc9, 0x4d, 0xb3, 0x78, 0x79, 0x75, 0xdd, 0x6b,
	0x50, 0x07, 0xa4, 0xbe, 0xb7, 0x1a, 0xe9, 0xa6, 0x63, 0x0d, 0xde, 0xc1, 0xbc, 0x55, 0x39, 0xbc,
	0xe1, 0xe9, 0x1a, 0x4b, 0xde, 0xb5, 0x77, 0xc6, 0xad, 0x5d, 0x63, 0x15, 0x5c, 0xc1, 0xb3, 0xbe,
	0x42, 0xb5, 0xcb, 0xde, 0x14, 0x86, 0xe1, 0x0d, 0x8f, 0x1b, 0x03, 0x3a, 0x81, 0xfd, 0x66, 0x89,
	0xb7, 0xf0, 0xb8, 0x47, 0x65, 0x12, 0x2b, 0x6d, 0xf4, 0x15, 0x67, 0x13, 0x47, 0x8a, 0x2e, 0xba,
	0x1e, 0x03, 0xdd, 0xa5, 0x1b, 0xbc, 0x86, 0x17, 0xad, 0x1a, 0xb7, 0xf9, 0x26, 0x2b, 0x0a, 0xdd,
	0xe5, 0x98, 0x23, 0x4d, 0xec, 0x14, 0x86, 0x84, 0x67, 0x42, 0x59, 0x26, 0xc1, 0xab, 0x3f, 0x6f,
	0xcb, 0x1a, 0x86, 0xda, 0x4d, 0x3f, 0x1c, 0x78, 0xd2, 0xda, 0x55, 0xd8, 0x12, 0xf2, 0x24, 0x2c,
	0xa7, 0xb9, 0x19, 0xbd, 0xea, 0x45, 0x31, 0x81, 0x0a, 0x45, 0x9e, 0xee, 0x3a, 0x99, 0x72, 0x5d,
	0x33, 0xe6, 0xff, 0xc3, 0xa1, 0x81, 0x36, 0xfc, 0x5b, 0x91, 0xed, 0x12, 0x88, 0xd3, 0xe2, 0xe9,
	0x78, 0x03, 0x8b, 0xb6, 0x85, 0x51, 0x54, 0xb0, 0xa2, 0x3a, 0x15, 0xab, 0x46, 0x37, 0x87, 0x36,
	0xc6, 0x30, 0x6b, 0xde, 0x1c, 0x5b, 0xf3, 0xdc, 0x9a, 0x95, 0x85, 0xeb, 0x19, 0x8f, 0x1b, 0xb9,
	0x2d, 0x44, 0x11, 0x58, 0xdd, 0x19, 0xc5, 0x4a, 0xab, 0xcb, 0xed, 0x24, 0xc5, 0xa2, 0xf4, 0xa6,
	0x04, 0x57, 0x9d, 0x49, 0x29, 0xdb, 0x11, 0xb9, 0x97, 0xb0, 0x97, 0x88, 0xb5, 0x3d, 0xe2, 0xf1,
	0xe5, 0x29, 0xdd, 0x0a, 0xf7, 0x56, 0xfe, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x28, 0x61, 0xe5, 0x09,
	0x16, 0x08, 0x00, 0x00,
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: land_logic_msg.proto

package net

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 游戏信息
type MsgLandGameInfoRep struct {
	BombCount        *uint32  `protobuf:"varint,1,opt,name=bomb_count" json:"bomb_count,omitempty"`
	BankerUser       *uint32  `protobuf:"varint,2,opt,name=banker_user" json:"banker_user,omitempty"`
	CurUser          *uint32  `protobuf:"varint,3,opt,name=cur_user" json:"cur_user,omitempty"`
	BankerScore      *uint32  `protobuf:"varint,4,opt,name=banker_score" json:"banker_score,omitempty"`
	TurnWiner        *uint32  `protobuf:"varint,5,opt,name=turn_winer" json:"turn_winer,omitempty"`
	FirstUser        *uint32  `protobuf:"varint,6,opt,name=first_user" json:"first_user,omitempty"`
	TurnCardData     []uint32 `protobuf:"varint,7,rep,name=turn_card_data" json:"turn_card_data,omitempty"`
	BankerCard       []uint32 `protobuf:"varint,8,rep,name=banker_card" json:"banker_card,omitempty"`
	HandCardCount    []uint32 `protobuf:"varint,9,rep,name=hand_card_count" json:"hand_card_count,omitempty"`
	HandCardData     []uint32 `protobuf:"varint,10,rep,name=hand_card_data" json:"hand_card_data,omitempty"`
	GameState        *uint32  `protobuf:"varint,11,opt,name=game_state" json:"game_state,omitempty"`
	WaitTime         *uint32  `protobuf:"varint,12,opt,name=wait_time" json:"wait_time,omitempty"`
	CallScore        []uint32 `protobuf:"varint,13,rep,name=call_score" json:"call_score,omitempty"`
	LandTaskid       *uint32  `protobuf:"varint,14,opt,name=land_taskid" json:"land_taskid,omitempty"`
	LandTasknum      *uint32  `protobuf:"varint,15,opt,name=land_tasknum" json:"land_tasknum,omitempty"`
	CurPrivateRound  *uint32  `protobuf:"varint,16,opt,name=cur_private_round" json:"cur_private_round,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *MsgLandGameInfoRep) Reset()                    { *m = MsgLandGameInfoRep{} }
func (m *MsgLandGameInfoRep) String() string            { return proto.CompactTextString(m) }
func (*MsgLandGameInfoRep) ProtoMessage()               {}
func (*MsgLandGameInfoRep) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{0} }

func (m *MsgLandGameInfoRep) GetBombCount() uint32 {
	if m != nil && m.BombCount != nil {
		return *m.BombCount
	}
	return 0
}

func (m *MsgLandGameInfoRep) GetBankerUser() uint32 {
	if m != nil && m.BankerUser != nil {
		return *m.BankerUser
	}
	return 0
}

func (m *MsgLandGameInfoRep) GetCurUser() uint32 {
	if m != nil && m.CurUser != nil {
		return *m.CurUser
	}
	return 0
}

func (m *MsgLandGameInfoRep) GetBankerScore() uint32 {
	if m != nil && m.BankerScore != nil {
		return *m.BankerScore
	}
	return 0
}

func (m *MsgLandGameInfoRep) GetTurnWiner() uint32 {
	if m != nil && m.TurnWiner != nil {
		return *m.TurnWiner
	}
	return 0
}

func (m *MsgLandGameInfoRep) GetFirstUser() uint32 {
	if m != nil && m.FirstUser != nil {
		return *m.FirstUser
	}
	return 0
}

func (m *MsgLandGameInfoRep) GetTurnCardData() []uint32 {
	if m != nil {
		return m.TurnCardData
	}
	return nil
}

func (m *MsgLandGameInfoRep) GetBankerCard() []uint32 {
	if m != nil {
		return m.BankerCard
	}
	return nil
}

func (m *MsgLandGameInfoRep) GetHandCardCount() []uint32 {
	if m != nil {
		return m.HandCardCount
	}
	return nil
}

func (m *MsgLandGameInfoRep) GetHandCardData() []uint32 {
	if m != nil {
		return m.HandCardData
	}
	return nil
}

func (m *MsgLandGameInfoRep) GetGameState() uint32 {
	if m != nil && m.GameState != nil {
		return *m.GameState
	}
	return 0
}

func (m *MsgLandGameInfoRep) GetWaitTime() uint32 {
	if m != nil && m.WaitTime != nil {
		return *m.WaitTime
	}
	return 0
}

func (m *MsgLandGameInfoRep) GetCallScore() []uint32 {
	if m != nil {
		return m.CallScore
	}
	return nil
}

func (m *MsgLandGameInfoRep) GetLandTaskid() uint32 {
	if m != nil && m.LandTaskid != nil {
		return *m.LandTaskid
	}
	return 0
}

func (m *MsgLandGameInfoRep) GetLandTasknum() uint32 {
	if m != nil && m.LandTasknum != nil {
		return *m.LandTasknum
	}
	return 0
}

func (m *MsgLandGameInfoRep) GetCurPrivateRound() uint32 {
	if m != nil && m.CurPrivateRound != nil {
		return *m.CurPrivateRound
	}
	return 0
}

// 游戏开始
type MsgLandStartRep struct {
	StartUser        *uint32  `protobuf:"varint,1,opt,name=start_user" json:"start_user,omitempty"`
	CurUser          *uint32  `protobuf:"varint,2,opt,name=cur_user" json:"cur_user,omitempty"`
	ValidCardData    *uint32  `protobuf:"varint,3,opt,name=valid_card_data" json:"valid_card_data,omitempty"`
	ValidCardIndex   *uint32  `protobuf:"varint,4,opt,name=valid_card_index" json:"valid_card_index,omitempty"`
	CardData         []uint32 `protobuf:"varint,5,rep,name=card_data" json:"card_data,omitempty"`
	LandTaskid       *uint32  `protobuf:"varint,6,opt,name=land_taskid" json:"land_taskid,omitempty"`
	CurPrivateRound  *uint32  `protobuf:"varint,7,opt,name=cur_private_round" json:"cur_private_round,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *MsgLandStartRep) Reset()                    { *m = MsgLandStartRep{} }
func (m *MsgLandStartRep) String() string            { return proto.CompactTextString(m) }
func (*MsgLandStartRep) ProtoMessage()               {}
func (*MsgLandStartRep) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{1} }

func (m *MsgLandStartRep) GetStartUser() uint32 {
	if m != nil && m.StartUser != nil {
		return *m.StartUser
	}
	return 0
}

func (m *MsgLandStartRep) GetCurUser() uint32 {
	if m != nil && m.CurUser != nil {
		return *m.CurUser
	}
	return 0
}

func (m *MsgLandStartRep) GetValidCardData() uint32 {
	if m != nil && m.ValidCardData != nil {
		return *m.ValidCardData
	}
	return 0
}

func (m *MsgLandStartRep) GetValidCardIndex() uint32 {
	if m != nil && m.ValidCardIndex != nil {
		return *m.ValidCardIndex
	}
	return 0
}

func (m *MsgLandStartRep) GetCardData() []uint32 {
	if m != nil {
		return m.CardData
	}
	return nil
}

func (m *MsgLandStartRep) GetLandTaskid() uint32 {
	if m != nil && m.LandTaskid != nil {
		return *m.LandTaskid
	}
	return 0
}

func (m *MsgLandStartRep) GetCurPrivateRound() uint32 {
	if m != nil && m.CurPrivateRound != nil {
		return *m.CurPrivateRound
	}
	return 0
}

// 玩家叫分
type MsgLandCallScoreReq struct {
	CallScore        *uint32 `protobuf:"varint,1,opt,name=call_score" json:"call_score,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgLandCallScoreReq) Reset()                    { *m = MsgLandCallScoreReq{} }
func (m *MsgLandCallScoreReq) String() string            { return proto.CompactTextString(m) }
func (*MsgLandCallScoreReq) ProtoMessage()               {}
func (*MsgLandCallScoreReq) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{2} }

func (m *MsgLandCallScoreReq) GetCallScore() uint32 {
	if m != nil && m.CallScore != nil {
		return *m.CallScore
	}
	return 0
}

// 玩家叫分
type MsgLandCallScoreRep struct {
	CurUser          *uint32 `protobuf:"varint,1,opt,name=cur_user" json:"cur_user,omitempty"`
	CallUser         *uint32 `protobuf:"varint,2,opt,name=call_user" json:"call_user,omitempty"`
	CallScore        *uint32 `protobuf:"varint,3,opt,name=call_score" json:"call_score,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgLandCallScoreRep) Reset()                    { *m = MsgLandCallScoreRep{} }
func (m *MsgLandCallScoreRep) String() string            { return proto.CompactTextString(m) }
func (*MsgLandCallScoreRep) ProtoMessage()               {}
func (*MsgLandCallScoreRep) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{3} }

func (m *MsgLandCallScoreRep) GetCurUser() uint32 {
	if m != nil && m.CurUser != nil {
		return *m.CurUser
	}
	return 0
}

func (m *MsgLandCallScoreRep) GetCallUser() uint32 {
	if m != nil && m.CallUser != nil {
		return *m.CallUser
	}
	return 0
}

func (m *MsgLandCallScoreRep) GetCallScore() uint32 {
	if m != nil && m.CallScore != nil {
		return *m.CallScore
	}
	return 0
}

// 请求手牌
type MsgLandReqHandCardReq struct {
	ChairId          *uint32 `protobuf:"varint,1,opt,name=chair_id" json:"chair_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgLandReqHandCardReq) Reset()                    { *m = MsgLandReqHandCardReq{} }
func (m *MsgLandReqHandCardReq) String() string            { return proto.CompactTextString(m) }
func (*MsgLandReqHandCardReq) ProtoMessage()               {}
func (*MsgLandReqHandCardReq) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{4} }

func (m *MsgLandReqHandCardReq) GetChairId() uint32 {
	if m != nil && m.ChairId != nil {
		return *m.ChairId
	}
	return 0
}

// 返回手牌
type MsgLandHandCardRep struct {
	ChairId          *uint32  `protobuf:"varint,1,opt,name=chair_id" json:"chair_id,omitempty"`
	CardData         []uint32 `protobuf:"varint,2,rep,name=card_data" json:"card_data,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *MsgLandHandCardRep) Reset()                    { *m = MsgLandHandCardRep{} }
func (m *MsgLandHandCardRep) String() string            { return proto.CompactTextString(m) }
func (*MsgLandHandCardRep) ProtoMessage()               {}
func (*MsgLandHandCardRep) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{5} }

func (m *MsgLandHandCardRep) GetChairId() uint32 {
	if m != nil && m.ChairId != nil {
		return *m.ChairId
	}
	return 0
}

func (m *MsgLandHandCardRep) GetCardData() []uint32 {
	if m != nil {
		return m.CardData
	}
	return nil
}

// 庄家信息
type MsgLandBankerInfoRep struct {
	BankerUser       *uint32  `protobuf:"varint,1,opt,name=banker_user" json:"banker_user,omitempty"`
	CurUser          *uint32  `protobuf:"varint,2,opt,name=cur_user" json:"cur_user,omitempty"`
	CallScore        *uint32  `protobuf:"varint,3,opt,name=call_score" json:"call_score,omitempty"`
	BankerCard       []uint32 `protobuf:"varint,4,rep,name=banker_card" json:"banker_card,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *MsgLandBankerInfoRep) Reset()                    { *m = MsgLandBankerInfoRep{} }
func (m *MsgLandBankerInfoRep) String() string            { return proto.CompactTextString(m) }
func (*MsgLandBankerInfoRep) ProtoMessage()               {}
func (*MsgLandBankerInfoRep) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{6} }

func (m *MsgLandBankerInfoRep) GetBankerUser() uint32 {
	if m != nil && m.BankerUser != nil {
		return *m.BankerUser
	}
	return 0
}

func (m *MsgLandBankerInfoRep) GetCurUser() uint32 {
	if m != nil && m.CurUser != nil {
		return *m.CurUser
	}
	return 0
}

func (m *MsgLandBankerInfoRep) GetCallScore() uint32 {
	if m != nil && m.CallScore != nil {
		return *m.CallScore
	}
	return 0
}

func (m *MsgLandBankerInfoRep) GetBankerCard() []uint32 {
	if m != nil {
		return m.BankerCard
	}
	return nil
}

// 玩家出牌
type MsgLandOutCardReq struct {
	CardData         []uint32 `protobuf:"varint,1,rep,name=card_data" json:"card_data,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *MsgLandOutCardReq) Reset()                    { *m = MsgLandOutCardReq{} }
func (m *MsgLandOutCardReq) String() string            { return proto.CompactTextString(m) }
func (*MsgLandOutCardReq) ProtoMessage()               {}
func (*MsgLandOutCardReq) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{7} }

func (m *MsgLandOutCardReq) GetCardData() []uint32 {
	if m != nil {
		return m.CardData
	}
	return nil
}

// 玩家出牌
type MsgLandOutCardRep struct {
	CurUser          *uint32  `protobuf:"varint,1,opt,name=cur_user" json:"cur_user,omitempty"`
	OutCardUser      *uint32  `protobuf:"varint,2,opt,name=out_card_user" json:"out_card_user,omitempty"`
	CardData         []uint32 `protobuf:"varint,3,rep,name=card_data" json:"card_data,omitempty"`
	BombMaxNum       *uint32  `protobuf:"varint,4,opt,name=bomb_max_num" json:"bomb_max_num,omitempty"`
	CurBombNum       *uint32  `protobuf:"varint,5,opt,name=cur_bomb_num" json:"cur_bomb_num,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *MsgLandOutCardRep) Reset()                    { *m = MsgLandOutCardRep{} }
func (m *MsgLandOutCardRep) String() string            { return proto.CompactTextString(m) }
func (*MsgLandOutCardRep) ProtoMessage()               {}
func (*MsgLandOutCardRep) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{8} }

func (m *MsgLandOutCardRep) GetCurUser() uint32 {
	if m != nil && m.CurUser != nil {
		return *m.CurUser
	}
	return 0
}

func (m *MsgLandOutCardRep) GetOutCardUser() uint32 {
	if m != nil && m.OutCardUser != nil {
		return *m.OutCardUser
	}
	return 0
}

func (m *MsgLandOutCardRep) GetCardData() []uint32 {
	if m != nil {
		return m.CardData
	}
	return nil
}

func (m *MsgLandOutCardRep) GetBombMaxNum() uint32 {
	if m != nil && m.BombMaxNum != nil {
		return *m.BombMaxNum
	}
	return 0
}

func (m *MsgLandOutCardRep) GetCurBombNum() uint32 {
	if m != nil && m.CurBombNum != nil {
		return *m.CurBombNum
	}
	return 0
}

// 放弃出牌
type MsgLandPassCardReq struct {
	Reason           *uint32 `protobuf:"varint,1,opt,name=reason" json:"reason,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgLandPassCardReq) Reset()                    { *m = MsgLandPassCardReq{} }
func (m *MsgLandPassCardReq) String() string            { return proto.CompactTextString(m) }
func (*MsgLandPassCardReq) ProtoMessage()               {}
func (*MsgLandPassCardReq) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{9} }

func (m *MsgLandPassCardReq) GetReason() uint32 {
	if m != nil && m.Reason != nil {
		return *m.Reason
	}
	return 0
}

// 放弃出牌
type MsgLandPassCardRep struct {
	TurnOver         *uint32 `protobuf:"varint,1,opt,name=turn_over" json:"turn_over,omitempty"`
	CurUser          *uint32 `protobuf:"varint,2,opt,name=cur_user" json:"cur_user,omitempty"`
	PassCardUser     *uint32 `protobuf:"varint,3,opt,name=pass_card_user" json:"pass_card_user,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgLandPassCardRep) Reset()                    { *m = MsgLandPassCardRep{} }
func (m *MsgLandPassCardRep) String() string            { return proto.CompactTextString(m) }
func (*MsgLandPassCardRep) ProtoMessage()               {}
func (*MsgLandPassCardRep) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{10} }

func (m *MsgLandPassCardRep) GetTurnOver() uint32 {
	if m != nil && m.TurnOver != nil {
		return *m.TurnOver
	}
	return 0
}

func (m *MsgLandPassCardRep) GetCurUser() uint32 {
	if m != nil && m.CurUser != nil {
		return *m.CurUser
	}
	return 0
}

func (m *MsgLandPassCardRep) GetPassCardUser() uint32 {
	if m != nil && m.PassCardUser != nil {
		return *m.PassCardUser
	}
	return 0
}

// 游戏结束
type MsgLandGameOverRep struct {
	Scores           []int64     `protobuf:"varint,1,rep,name=scores" json:"scores,omitempty"`
	ChunTian         *uint32     `protobuf:"varint,2,opt,name=chun_tian" json:"chun_tian,omitempty"`
	FanChunTian      *uint32     `protobuf:"varint,3,opt,name=fan_chun_tian" json:"fan_chun_tian,omitempty"`
	BombCount        *uint32     `protobuf:"varint,4,opt,name=bomb_count" json:"bomb_count,omitempty"`
	EachBombCounts   []uint32    `protobuf:"varint,5,rep,name=each_bomb_counts" json:"each_bomb_counts,omitempty"`
	Blind            *uint32     `protobuf:"varint,6,opt,name=blind" json:"blind,omitempty"`
	CardCounts       []uint32    `protobuf:"varint,7,rep,name=card_counts" json:"card_counts,omitempty"`
	HandCardData     []uint32    `protobuf:"varint,8,rep,name=hand_card_data" json:"hand_card_data,omitempty"`
	AllCardData      []*MsgCards `protobuf:"bytes,9,rep,name=all_card_data" json:"all_card_data,omitempty"`
	CurPrivateRound  *uint32     `protobuf:"varint,10,opt,name=cur_private_round" json:"cur_private_round,omitempty"`
	MasterUid        *uint32     `protobuf:"varint,11,opt,name=master_uid" json:"master_uid,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *MsgLandGameOverRep) Reset()                    { *m = MsgLandGameOverRep{} }
func (m *MsgLandGameOverRep) String() string            { return proto.CompactTextString(m) }
func (*MsgLandGameOverRep) ProtoMessage()               {}
func (*MsgLandGameOverRep) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{11} }

func (m *MsgLandGameOverRep) GetScores() []int64 {
	if m != nil {
		return m.Scores
	}
	return nil
}

func (m *MsgLandGameOverRep) GetChunTian() uint32 {
	if m != nil && m.ChunTian != nil {
		return *m.ChunTian
	}
	return 0
}

func (m *MsgLandGameOverRep) GetFanChunTian() uint32 {
	if m != nil && m.FanChunTian != nil {
		return *m.FanChunTian
	}
	return 0
}

func (m *MsgLandGameOverRep) GetBombCount() uint32 {
	if m != nil && m.BombCount != nil {
		return *m.BombCount
	}
	return 0
}

func (m *MsgLandGameOverRep) GetEachBombCounts() []uint32 {
	if m != nil {
		return m.EachBombCounts
	}
	return nil
}

func (m *MsgLandGameOverRep) GetBlind() uint32 {
	if m != nil && m.Blind != nil {
		return *m.Blind
	}
	return 0
}

func (m *MsgLandGameOverRep) GetCardCounts() []uint32 {
	if m != nil {
		return m.CardCounts
	}
	return nil
}

func (m *MsgLandGameOverRep) GetHandCardData() []uint32 {
	if m != nil {
		return m.HandCardData
	}
	return nil
}

func (m *MsgLandGameOverRep) GetAllCardData() []*MsgCards {
	if m != nil {
		return m.AllCardData
	}
	return nil
}

func (m *MsgLandGameOverRep) GetCurPrivateRound() uint32 {
	if m != nil && m.CurPrivateRound != nil {
		return *m.CurPrivateRound
	}
	return 0
}

func (m *MsgLandGameOverRep) GetMasterUid() uint32 {
	if m != nil && m.MasterUid != nil {
		return *m.MasterUid
	}
	return 0
}

// 游戏任务完成
type MsgLandTaskFinish struct {
	TaskId           *uint32 `protobuf:"varint,1,opt,name=task_id" json:"task_id,omitempty"`
	CardNum          *uint32 `protobuf:"varint,2,opt,name=card_num" json:"card_num,omitempty"`
	IsFinish         *uint32 `protobuf:"varint,3,opt,name=is_finish" json:"is_finish,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgLandTaskFinish) Reset()                    { *m = MsgLandTaskFinish{} }
func (m *MsgLandTaskFinish) String() string            { return proto.CompactTextString(m) }
func (*MsgLandTaskFinish) ProtoMessage()               {}
func (*MsgLandTaskFinish) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{12} }

func (m *MsgLandTaskFinish) GetTaskId() uint32 {
	if m != nil && m.TaskId != nil {
		return *m.TaskId
	}
	return 0
}

func (m *MsgLandTaskFinish) GetCardNum() uint32 {
	if m != nil && m.CardNum != nil {
		return *m.CardNum
	}
	return 0
}

func (m *MsgLandTaskFinish) GetIsFinish() uint32 {
	if m != nil && m.IsFinish != nil {
		return *m.IsFinish
	}
	return 0
}

func init() {
	proto.RegisterType((*MsgLandGameInfoRep)(nil), "net.msg_land_game_info_rep")
	proto.RegisterType((*MsgLandStartRep)(nil), "net.msg_land_start_rep")
	proto.RegisterType((*MsgLandCallScoreReq)(nil), "net.msg_land_call_score_req")
	proto.RegisterType((*MsgLandCallScoreRep)(nil), "net.msg_land_call_score_rep")
	proto.RegisterType((*MsgLandReqHandCardReq)(nil), "net.msg_land_req_hand_card_req")
	proto.RegisterType((*MsgLandHandCardRep)(nil), "net.msg_land_hand_card_rep")
	proto.RegisterType((*MsgLandBankerInfoRep)(nil), "net.msg_land_banker_info_rep")
	proto.RegisterType((*MsgLandOutCardReq)(nil), "net.msg_land_out_card_req")
	proto.RegisterType((*MsgLandOutCardRep)(nil), "net.msg_land_out_card_rep")
	proto.RegisterType((*MsgLandPassCardReq)(nil), "net.msg_land_pass_card_req")
	proto.RegisterType((*MsgLandPassCardRep)(nil), "net.msg_land_pass_card_rep")
	proto.RegisterType((*MsgLandGameOverRep)(nil), "net.msg_land_game_over_rep")
	proto.RegisterType((*MsgLandTaskFinish)(nil), "net.msg_land_task_finish")
}

func init() { proto.RegisterFile("land_logic_msg.proto", fileDescriptor7) }

var fileDescriptor7 = []byte{
	// 656 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x54, 0x4b, 0x6e, 0xdb, 0x30,
	0x10, 0x85, 0x63, 0xc7, 0x49, 0xc6, 0xb1, 0xec, 0x28, 0xb1, 0xc3, 0x66, 0x15, 0x08, 0x28, 0x10,
	0x14, 0xa8, 0x17, 0xdd, 0xf7, 0x06, 0x5d, 0x15, 0xe8, 0x9a, 0xa0, 0x25, 0x3a, 0x66, 0x23, 0x91,
	0x0a, 0x49, 0x25, 0xd9, 0xf5, 0x0e, 0x3d, 0x49, 0x8f, 0xd6, 0x23, 0x14, 0x33, 0xfa, 0x50, 0x8e,
	0xed, 0x2e, 0xf5, 0xe6, 0x69, 0xf8, 0xe6, 0xcd, 0x07, 0x6e, 0x72, 0xa1, 0x33, 0x9e, 0x9b, 0x47,
	0x95, 0xf2, 0xc2, 0x3d, 0xae, 0x4a, 0x6b, 0xbc, 0x89, 0x87, 0x5a, 0xfa, 0xbb, 0xc5, 0x5a, 0x38,
	0x89, 0x20, 0x77, 0xde, 0x56, 0xa9, 0xaf, 0x63, 0x77, 0x73, 0x69, 0xad, 0xb1, 0x3c, 0x35, 0x99,
	0xac, 0x91, 0xe4, 0xef, 0x09, 0x2c, 0x91, 0x46, 0xa9, 0x1e, 0x45, 0x21, 0xb9, 0xd2, 0x1b, 0xc3,
	0xad, 0x2c, 0xe3, 0x18, 0x60, 0x6d, 0x8a, 0x35, 0x4f, 0x4d, 0xa5, 0x3d, 0x1b, 0xdc, 0x0f, 0x1e,
	0xa6, 0xf1, 0x35, 0x4c, 0xd6, 0x42, 0x3f, 0x49, 0xcb, 0x2b, 0x27, 0x2d, 0x3b, 0x21, 0x70, 0x0e,
	0xe7, 0x69, 0xd5, 0x20, 0x43, 0x42, 0x6e, 0xe0, 0xb2, 0xa1, 0xb9, 0xd4, 0x58, 0xc9, 0x46, 0x84,
	0xc6, 0x00, 0xbe, 0xb2, 0x9a, 0xbf, 0x2a, 0x2d, 0x2d, 0x3b, 0x6d, 0xb1, 0x8d, 0xb2, 0xce, 0xd7,
	0x7f, 0x8f, 0x09, 0x5b, 0x42, 0x44, 0xbc, 0x54, 0xd8, 0x8c, 0x67, 0xc2, 0x0b, 0x76, 0x76, 0x3f,
	0xdc, 0x79, 0x1c, 0x23, 0xec, 0x9c, 0xc0, 0x5b, 0x98, 0x6d, 0x51, 0x3b, 0x91, 0x6b, 0xa9, 0x17,
	0x14, 0x58, 0x42, 0x14, 0x02, 0x94, 0x05, 0x08, 0x8f, 0x01, 0xa8, 0x4e, 0xe7, 0x85, 0x97, 0x6c,
	0x42, 0x2f, 0x5e, 0xc1, 0xc5, 0xab, 0x50, 0x9e, 0x7b, 0x55, 0x48, 0x76, 0xd9, 0x0a, 0x4b, 0x45,
	0x9e, 0x37, 0x05, 0x4c, 0x5b, 0x01, 0xe4, 0x93, 0x17, 0xee, 0x49, 0x65, 0x2c, 0x6a, 0x6b, 0xed,
	0x40, 0x5d, 0x15, 0x6c, 0x46, 0xe8, 0x07, 0xb8, 0x42, 0x4f, 0x4a, 0xab, 0x5e, 0x84, 0x97, 0xdc,
	0x9a, 0x4a, 0x67, 0x6c, 0x8e, 0xa1, 0xe4, 0xcf, 0x00, 0xe2, 0xce, 0x72, 0xe7, 0x85, 0xf5, 0xad,
	0xdd, 0xf5, 0x07, 0x39, 0x31, 0xd8, 0x73, 0xb6, 0xf6, 0xfa, 0x16, 0x66, 0x2f, 0x22, 0x57, 0xfd,
	0xb2, 0x6a, 0xcb, 0x19, 0xcc, 0x7b, 0x01, 0xa5, 0x33, 0xf9, 0xd6, 0xd8, 0x7e, 0x05, 0x17, 0x81,
	0x7c, 0x7a, 0xa8, 0x90, 0xf1, 0x71, 0xc9, 0x67, 0x24, 0xf9, 0x33, 0xdc, 0x76, 0x8a, 0x83, 0x2b,
	0xdc, 0xca, 0xe7, 0x77, 0x3e, 0x91, 0xec, 0xe4, 0xfb, 0x31, 0x7a, 0xb9, 0x53, 0xd1, 0x20, 0xc8,
	0xcb, 0xf3, 0x7e, 0x91, 0xbb, 0x39, 0xa9, 0xbe, 0x64, 0x05, 0x77, 0x5d, 0x4e, 0x2b, 0x9f, 0x79,
	0xe8, 0x2d, 0xaa, 0xc0, 0xb4, 0x5b, 0xa1, 0x2c, 0x57, 0x59, 0xa3, 0xe1, 0x6b, 0x6f, 0xae, 0xfb,
	0xdc, 0x72, 0x9f, 0xbb, 0xeb, 0xd0, 0x09, 0x3a, 0x94, 0xfc, 0x04, 0xd6, 0xfd, 0xde, 0x0c, 0x5d,
	0xb7, 0x18, 0xef, 0x96, 0xe0, 0x58, 0xab, 0x0e, 0x54, 0xf1, 0x7e, 0x84, 0x47, 0xf4, 0xd6, 0x27,
	0x58, 0x74, 0x6f, 0x99, 0xca, 0x87, 0xaa, 0x76, 0x74, 0x0d, 0x88, 0xfb, 0xeb, 0x30, 0xf7, 0x90,
	0xb1, 0x0b, 0x98, 0x76, 0x8c, 0x9e, 0xac, 0x9d, 0xa4, 0x43, 0x1a, 0x07, 0x5c, 0x57, 0xdc, 0xf4,
	0x42, 0xbc, 0x71, 0x1c, 0xe1, 0x51, 0x3b, 0xd8, 0x98, 0x91, 0x22, 0x88, 0xd2, 0xc2, 0x26, 0x0f,
	0x3d, 0x5f, 0x4b, 0xe1, 0x5c, 0x50, 0x1b, 0xc1, 0xd8, 0x4a, 0xe1, 0x8c, 0x6e, 0x3a, 0xf0, 0xe3,
	0x08, 0xb3, 0x44, 0x09, 0xb4, 0xe0, 0xe6, 0xe5, 0x3f, 0xf6, 0x2d, 0x21, 0x0a, 0x7f, 0x85, 0xdb,
	0x92, 0xfc, 0xde, 0xbb, 0x58, 0x98, 0x86, 0xf2, 0x46, 0x30, 0x26, 0xb3, 0x1d, 0x99, 0x35, 0xa4,
	0x52, 0xb7, 0x95, 0xe6, 0x5e, 0x09, 0xdd, 0x64, 0x5d, 0xc0, 0x74, 0x23, 0x34, 0x0f, 0xf0, 0xb0,
	0xed, 0x55, 0xef, 0xd6, 0x8d, 0xda, 0x8d, 0x92, 0x22, 0xdd, 0xf2, 0x10, 0x70, 0xcd, 0xfa, 0x4c,
	0xe1, 0x74, 0x9d, 0x2b, 0xdd, 0x2e, 0xce, 0x35, 0x4c, 0xc2, 0xf5, 0x71, 0xcd, 0xb1, 0xda, 0x3f,
	0x3f, 0xf5, 0xbd, 0xfa, 0x08, 0x53, 0x1c, 0x8a, 0x00, 0xe3, 0xb5, 0x9a, 0x7c, 0x89, 0x56, 0x5a,
	0xfa, 0x15, 0xd6, 0x85, 0x11, 0x77, 0x78, 0x19, 0xa1, 0xd5, 0x5a, 0x08, 0xe7, 0x71, 0xfc, 0x54,
	0x56, 0x1f, 0xb0, 0xe4, 0x1b, 0xdc, 0x74, 0x9e, 0xe0, 0x52, 0xf3, 0x8d, 0xd2, 0xca, 0x6d, 0xe3,
	0x19, 0x9c, 0xd1, 0x67, 0x37, 0xea, 0xe8, 0x33, 0x3e, 0x8d, 0x0d, 0xed, 0xe6, 0x41, 0xb9, 0x86,
	0x5f, 0xbb, 0xf1, 0x2f, 0x00, 0x00, 0xff, 0xff, 0xbb, 0xd6, 0x78, 0x89, 0x59, 0x06, 0x00, 0x00,
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: base_msg_struct.proto

package net

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// ! 私人房参数key枚举
type PRIVATE_PARAM_KEY int32

const (
	PRIVATE_PARAM_KEY_PRIVATE_PARAM_ROUND_LIMIT     PRIVATE_PARAM_KEY = 1
	PRIVATE_PARAM_KEY_PRIVATE_PARAM_BET_LIMIT       PRIVATE_PARAM_KEY = 2
	PRIVATE_PARAM_KEY_PRIVATE_PARAM_MEN_ROUND       PRIVATE_PARAM_KEY = 3
	PRIVATE_PARAM_KEY_PRIVATE_PARAM_SERVICE_FRR     PRIVATE_PARAM_KEY = 4
	PRIVATE_PARAM_KEY_PRIVATE_PARAM_ZHUANGJIA       PRIVATE_PARAM_KEY = 5
	PRIVATE_PARAM_KEY_PRIVATE_PARAM_MULTIPLE        PRIVATE_PARAM_KEY = 6
	PRIVATE_PARAM_KEY_PRIVATE_PARAM_BOMB_MAX_NUM    PRIVATE_PARAM_KEY = 7
	PRIVATE_PARAM_KEY_PRIVATE_PARAM_DISPATCH_METHOD PRIVATE_PARAM_KEY = 8
)

var PRIVATE_PARAM_KEY_name = map[int32]string{
	1: "PRIVATE_PARAM_ROUND_LIMIT",
	2: "PRIVATE_PARAM_BET_LIMIT",
	3: "PRIVATE_PARAM_MEN_ROUND",
	4: "PRIVATE_PARAM_SERVICE_FRR",
	5: "PRIVATE_PARAM_ZHUANGJIA",
	6: "PRIVATE_PARAM_MULTIPLE",
	7: "PRIVATE_PARAM_BOMB_MAX_NUM",
	8: "PRIVATE_PARAM_DISPATCH_METHOD",
}
var PRIVATE_PARAM_KEY_value = map[string]int32{
	"PRIVATE_PARAM_ROUND_LIMIT":     1,
	"PRIVATE_PARAM_BET_LIMIT":       2,
	"PRIVATE_PARAM_MEN_ROUND":       3,
	"PRIVATE_PARAM_SERVICE_FRR":     4,
	"PRIVATE_PARAM_ZHUANGJIA":       5,
	"PRIVATE_PARAM_MULTIPLE":        6,
	"PRIVATE_PARAM_BOMB_MAX_NUM":    7,
	"PRIVATE_PARAM_DISPATCH_METHOD": 8,
}

func (x PRIVATE_PARAM_KEY) Enum() *PRIVATE_PARAM_KEY {
	p := new(PRIVATE_PARAM_KEY)
	*p = x
	return p
}
func (x PRIVATE_PARAM_KEY) String() string {
	return proto.EnumName(PRIVATE_PARAM_KEY_name, int32(x))
}
func (x *PRIVATE_PARAM_KEY) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PRIVATE_PARAM_KEY_value, data, "PRIVATE_PARAM_KEY")
	if err != nil {
		return err
	}
	*x = PRIVATE_PARAM_KEY(value)
	return nil
}
func (PRIVATE_PARAM_KEY) EnumDescriptor() ([]byte, []int) { return fileDescriptor11, []int{0} }

// 玩家基本信息
type BaseInfo struct {
	Uid              *uint32 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	Name             []byte  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Sex              *uint32 `protobuf:"varint,3,opt,name=sex" json:"sex,omitempty"`
	Diamond          *int64  `protobuf:"varint,4,opt,name=diamond" json:"diamond,omitempty"`
	Coin             *int64  `protobuf:"varint,5,opt,name=coin" json:"coin,omitempty"`
	Score            *int64  `protobuf:"varint,6,opt,name=score" json:"score,omitempty"`
	Ingot            *int64  `protobuf:"varint,7,opt,name=ingot" json:"ingot,omitempty"`
	Cvalue           *int64  `protobuf:"varint,8,opt,name=cvalue" json:"cvalue,omitempty"`
	SafeCoin         *int64  `protobuf:"varint,9,opt,name=safe_coin" json:"safe_coin,omitempty"`
	Vip              *uint32 `protobuf:"varint,10,opt,name=vip" json:"vip,omitempty"`
	Safeboxstate     *uint32 `protobuf:"varint,11,opt,name=safeboxstate" json:"safeboxstate,omitempty"`
	Clogin           *uint32 `protobuf:"varint,12,opt,name=clogin" json:"clogin,omitempty"`
	Weeklogin        *uint32 `protobuf:"varint,13,opt,name=weeklogin" json:"weeklogin,omitempty"`
	Reward           *uint32 `protobuf:"varint,14,opt,name=reward" json:"reward,omitempty"`
	Bankrupt         *uint32 `protobuf:"varint,15,opt,name=bankrupt" json:"bankrupt,omitempty"`
	HeadIcon         *uint32 `protobuf:"varint,16,opt,name=head_icon" json:"head_icon,omitempty"`
	DayGameCount     *uint32 `protobuf:"varint,17,opt,name=day_game_count" json:"day_game_count,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BaseInfo) Reset()                    { *m = BaseInfo{} }
func (m *BaseInfo) String() string            { return proto.CompactTextString(m) }
func (*BaseInfo) ProtoMessage()               {}
func (*BaseInfo) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{0} }

func (m *BaseInfo) GetUid() uint32 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *BaseInfo) GetName() []byte {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *BaseInfo) GetSex() uint32 {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return 0
}

func (m *BaseInfo) GetDiamond() int64 {
	if m != nil && m.Diamond != nil {
		return *m.Diamond
	}
	return 0
}

func (m *BaseInfo) GetCoin() int64 {
	if m != nil && m.Coin != nil {
		return *m.Coin
	}
	return 0
}

func (m *BaseInfo) GetScore() int64 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *BaseInfo) GetIngot() int64 {
	if m != nil && m.Ingot != nil {
		return *m.Ingot
	}
	return 0
}

func (m *BaseInfo) GetCvalue() int64 {
	if m != nil && m.Cvalue != nil {
		return *m.Cvalue
	}
	return 0
}

func (m *BaseInfo) GetSafeCoin() int64 {
	if m != nil && m.SafeCoin != nil {
		return *m.SafeCoin
	}
	return 0
}

func (m *BaseInfo) GetVip() uint32 {
	if m != nil && m.Vip != nil {
		return *m.Vip
	}
	return 0
}

func (m *BaseInfo) GetSafeboxstate() uint32 {
	if m != nil && m.Safeboxstate != nil {
		return *m.Safeboxstate
	}
	return 0
}

func (m *BaseInfo) GetClogin() uint32 {
	if m != nil && m.Clogin != nil {
		return *m.Clogin
	}
	return 0
}

func (m *BaseInfo) GetWeeklogin() uint32 {
	if m != nil && m.Weeklogin != nil {
		return *m.Weeklogin
	}
	return 0
}

func (m *BaseInfo) GetReward() uint32 {
	if m != nil && m.Reward != nil {
		return *m.Reward
	}
	return 0
}

func (m *BaseInfo) GetBankrupt() uint32 {
	if m != nil && m.Bankrupt != nil {
		return *m.Bankrupt
	}
	return 0
}

func (m *BaseInfo) GetHeadIcon() uint32 {
	if m != nil && m.HeadIcon != nil {
		return *m.HeadIcon
	}
	return 0
}

func (m *BaseInfo) GetDayGameCount() uint32 {
	if m != nil && m.DayGameCount != nil {
		return *m.DayGameCount
	}
	return 0
}

// 斗地主游戏信息(待删除)
type LandInfo struct {
	Win              *uint32 `protobuf:"varint,1,opt,name=win" json:"win,omitempty"`
	Lose             *uint32 `protobuf:"varint,2,opt,name=lose" json:"lose,omitempty"`
	Land             *uint32 `protobuf:"varint,3,opt,name=land" json:"land,omitempty"`
	Spring           *uint32 `protobuf:"varint,4,opt,name=spring" json:"spring,omitempty"`
	Maxwin           *int64  `protobuf:"varint,5,opt,name=maxwin" json:"maxwin,omitempty"`
	Winc             *uint32 `protobuf:"varint,6,opt,name=winc" json:"winc,omitempty"`
	Losec            *uint32 `protobuf:"varint,7,opt,name=losec" json:"losec,omitempty"`
	Landc            *uint32 `protobuf:"varint,8,opt,name=landc" json:"landc,omitempty"`
	Maxwinc          *int64  `protobuf:"varint,9,opt,name=maxwinc" json:"maxwinc,omitempty"`
	Springc          *uint32 `protobuf:"varint,10,opt,name=springc" json:"springc,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LandInfo) Reset()                    { *m = LandInfo{} }
func (m *LandInfo) String() string            { return proto.CompactTextString(m) }
func (*LandInfo) ProtoMessage()               {}
func (*LandInfo) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{1} }

func (m *LandInfo) GetWin() uint32 {
	if m != nil && m.Win != nil {
		return *m.Win
	}
	return 0
}

func (m *LandInfo) GetLose() uint32 {
	if m != nil && m.Lose != nil {
		return *m.Lose
	}
	return 0
}

func (m *LandInfo) GetLand() uint32 {
	if m != nil && m.Land != nil {
		return *m.Land
	}
	return 0
}

func (m *LandInfo) GetSpring() uint32 {
	if m != nil && m.Spring != nil {
		return *m.Spring
	}
	return 0
}

func (m *LandInfo) GetMaxwin() int64 {
	if m != nil && m.Maxwin != nil {
		return *m.Maxwin
	}
	return 0
}

func (m *LandInfo) GetWinc() uint32 {
	if m != nil && m.Winc != nil {
		return *m.Winc
	}
	return 0
}

func (m *LandInfo) GetLosec() uint32 {
	if m != nil && m.Losec != nil {
		return *m.Losec
	}
	return 0
}

func (m *LandInfo) GetLandc() uint32 {
	if m != nil && m.Landc != nil {
		return *m.Landc
	}
	return 0
}

func (m *LandInfo) GetMaxwinc() int64 {
	if m != nil && m.Maxwinc != nil {
		return *m.Maxwinc
	}
	return 0
}

func (m *LandInfo) GetSpringc() uint32 {
	if m != nil && m.Springc != nil {
		return *m.Springc
	}
	return 0
}

// 游戏信息
type GameDataInfo struct {
	GameType         *uint32  `protobuf:"varint,1,opt,name=game_type" json:"game_type,omitempty"`
	Win              *uint32  `protobuf:"varint,2,opt,name=win" json:"win,omitempty"`
	Lose             *uint32  `protobuf:"varint,3,opt,name=lose" json:"lose,omitempty"`
	Maxwin           *int64   `protobuf:"varint,4,opt,name=maxwin" json:"maxwin,omitempty"`
	Winc             *uint32  `protobuf:"varint,5,opt,name=winc" json:"winc,omitempty"`
	Losec            *uint32  `protobuf:"varint,6,opt,name=losec" json:"losec,omitempty"`
	Maxwinc          *int64   `protobuf:"varint,7,opt,name=maxwinc" json:"maxwinc,omitempty"`
	Maxcard          []uint32 `protobuf:"varint,8,rep,name=maxcard" json:"maxcard,omitempty"`
	Maxcardc         []uint32 `protobuf:"varint,9,rep,name=maxcardc" json:"maxcardc,omitempty"`
	Daywin           *int64   `protobuf:"varint,10,opt,name=daywin" json:"daywin,omitempty"`
	Daywinc          *int64   `protobuf:"varint,11,opt,name=daywinc" json:"daywinc,omitempty"`
	Land             *uint32  `protobuf:"varint,12,opt,name=land" json:"land,omitempty"`
	Spring           *uint32  `protobuf:"varint,13,opt,name=spring" json:"spring,omitempty"`
	Landc            *uint32  `protobuf:"varint,14,opt,name=landc" json:"landc,omitempty"`
	Springc          *uint32  `protobuf:"varint,15,opt,name=springc" json:"springc,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *GameDataInfo) Reset()                    { *m = GameDataInfo{} }
func (m *GameDataInfo) String() string            { return proto.CompactTextString(m) }
func (*GameDataInfo) ProtoMessage()               {}
func (*GameDataInfo) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{2} }

func (m *GameDataInfo) GetGameType() uint32 {
	if m != nil && m.GameType != nil {
		return *m.GameType
	}
	return 0
}

func (m *GameDataInfo) GetWin() uint32 {
	if m != nil && m.Win != nil {
		return *m.Win
	}
	return 0
}

func (m *GameDataInfo) GetLose() uint32 {
	if m != nil && m.Lose != nil {
		return *m.Lose
	}
	return 0
}

func (m *GameDataInfo) GetMaxwin() int64 {
	if m != nil && m.Maxwin != nil {
		return *m.Maxwin
	}
	return 0
}

func (m *GameDataInfo) GetWinc() uint32 {
	if m != nil && m.Winc != nil {
		return *m.Winc
	}
	return 0
}

func (m *GameDataInfo) GetLosec() uint32 {
	if m != nil && m.Losec != nil {
		return *m.Losec
	}
	return 0
}

func (m *GameDataInfo) GetMaxwinc() int64 {
	if m != nil && m.Maxwinc != nil {
		return *m.Maxwinc
	}
	return 0
}

func (m *GameDataInfo) GetMaxcard() []uint32 {
	if m != nil {
		return m.Maxcard
	}
	return nil
}

func (m *GameDataInfo) GetMaxcardc() []uint32 {
	if m != nil {
		return m.Maxcardc
	}
	return nil
}

func (m *GameDataInfo) GetDaywin() int64 {
	if m != nil && m.Daywin != nil {
		return *m.Daywin
	}
	return 0
}

func (m *GameDataInfo) GetDaywinc() int64 {
	if m != nil && m.Daywinc != nil {
		return *m.Daywinc
	}
	return 0
}

func (m *GameDataInfo) GetLand() uint32 {
	if m != nil && m.Land != nil {
		return *m.Land
	}
	return 0
}

func (m *GameDataInfo) GetSpring() uint32 {
	if m != nil && m.Spring != nil {
		return *m.Spring
	}
	return 0
}

func (m *GameDataInfo) GetLandc() uint32 {
	if m != nil && m.Landc != nil {
		return *m.Landc
	}
	return 0
}

func (m *GameDataInfo) GetSpringc() uint32 {
	if m != nil && m.Springc != nil {
		return *m.Springc
	}
	return 0
}

// 游戏服务器信息
type SvrInfo struct {
	Svrid            *uint32 `protobuf:"varint,1,opt,name=svrid" json:"svrid,omitempty"`
	State            *uint32 `protobuf:"varint,2,opt,name=state" json:"state,omitempty"`
	GameType         *uint32 `protobuf:"varint,3,opt,name=game_type" json:"game_type,omitempty"`
	GameSubtype      *uint32 `protobuf:"varint,4,opt,name=game_subtype" json:"game_subtype,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SvrInfo) Reset()                    { *m = SvrInfo{} }
func (m *SvrInfo) String() string            { return proto.CompactTextString(m) }
func (*SvrInfo) ProtoMessage()               {}
func (*SvrInfo) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{3} }

func (m *SvrInfo) GetSvrid() uint32 {
	if m != nil && m.Svrid != nil {
		return *m.Svrid
	}
	return 0
}

func (m *SvrInfo) GetState() uint32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

func (m *SvrInfo) GetGameType() uint32 {
	if m != nil && m.GameType != nil {
		return *m.GameType
	}
	return 0
}

func (m *SvrInfo) GetGameSubtype() uint32 {
	if m != nil && m.GameSubtype != nil {
		return *m.GameSubtype
	}
	return 0
}

// 游戏房间信息
type RoomInfo struct {
	Id               *uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Consume          *uint32 `protobuf:"varint,2,opt,name=consume" json:"consume,omitempty"`
	Deal             *uint32 `protobuf:"varint,3,opt,name=deal" json:"deal,omitempty"`
	EnterMin         *uint64 `protobuf:"varint,4,opt,name=enter_min" json:"enter_min,omitempty"`
	EnterMax         *uint64 `protobuf:"varint,5,opt,name=enter_max" json:"enter_max,omitempty"`
	PlayerNum        *uint32 `protobuf:"varint,6,opt,name=player_num" json:"player_num,omitempty"`
	Basescore        *uint32 `protobuf:"varint,7,opt,name=basescore" json:"basescore,omitempty"`
	CreateTable      *uint32 `protobuf:"varint,8,opt,name=create_table" json:"create_table,omitempty"`
	ShowType         *uint32 `protobuf:"varint,9,opt,name=show_type" json:"show_type,omitempty"`
	ShowPic          *uint32 `protobuf:"varint,10,opt,name=show_pic" json:"show_pic,omitempty"`
	BaseBet          *uint32 `protobuf:"varint,11,opt,name=base_bet" json:"base_bet,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RoomInfo) Reset()                    { *m = RoomInfo{} }
func (m *RoomInfo) String() string            { return proto.CompactTextString(m) }
func (*RoomInfo) ProtoMessage()               {}
func (*RoomInfo) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{4} }

func (m *RoomInfo) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *RoomInfo) GetConsume() uint32 {
	if m != nil && m.Consume != nil {
		return *m.Consume
	}
	return 0
}

func (m *RoomInfo) GetDeal() uint32 {
	if m != nil && m.Deal != nil {
		return *m.Deal
	}
	return 0
}

func (m *RoomInfo) GetEnterMin() uint64 {
	if m != nil && m.EnterMin != nil {
		return *m.EnterMin
	}
	return 0
}

func (m *RoomInfo) GetEnterMax() uint64 {
	if m != nil && m.EnterMax != nil {
		return *m.EnterMax
	}
	return 0
}

func (m *RoomInfo) GetPlayerNum() uint32 {
	if m != nil && m.PlayerNum != nil {
		return *m.PlayerNum
	}
	return 0
}

func (m *RoomInfo) GetBasescore() uint32 {
	if m != nil && m.Basescore != nil {
		return *m.Basescore
	}
	return 0
}

func (m *RoomInfo) GetCreateTable() uint32 {
	if m != nil && m.CreateTable != nil {
		return *m.CreateTable
	}
	return 0
}

func (m *RoomInfo) GetShowType() uint32 {
	if m != nil && m.ShowType != nil {
		return *m.ShowType
	}
	return 0
}

func (m *RoomInfo) GetShowPic() uint32 {
	if m != nil && m.ShowPic != nil {
		return *m.ShowPic
	}
	return 0
}

func (m *RoomInfo) GetBaseBet() uint32 {
	if m != nil && m.BaseBet != nil {
		return *m.BaseBet
	}
	return 0
}

// 玩家信息
type SeatInfo struct {
	Uid              *uint32 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	Name             []byte  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Sex              *uint32 `protobuf:"varint,3,opt,name=sex" json:"sex,omitempty"`
	Coin             *int64  `protobuf:"varint,4,opt,name=coin" json:"coin,omitempty"`
	Score            *int64  `protobuf:"varint,5,opt,name=score" json:"score,omitempty"`
	Cvalue           *int64  `protobuf:"varint,6,opt,name=cvalue" json:"cvalue,omitempty"`
	Chairid          *uint32 `protobuf:"varint,7,opt,name=chairid" json:"chairid,omitempty"`
	HeadIcon         *uint32 `protobuf:"varint,8,opt,name=head_icon" json:"head_icon,omitempty"`
	Buyin            *int64  `protobuf:"varint,9,opt,name=buyin" json:"buyin,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SeatInfo) Reset()                    { *m = SeatInfo{} }
func (m *SeatInfo) String() string            { return proto.CompactTextString(m) }
func (*SeatInfo) ProtoMessage()               {}
func (*SeatInfo) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{5} }

func (m *SeatInfo) GetUid() uint32 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *SeatInfo) GetName() []byte {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *SeatInfo) GetSex() uint32 {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return 0
}

func (m *SeatInfo) GetCoin() int64 {
	if m != nil && m.Coin != nil {
		return *m.Coin
	}
	return 0
}

func (m *SeatInfo) GetScore() int64 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *SeatInfo) GetCvalue() int64 {
	if m != nil && m.Cvalue != nil {
		return *m.Cvalue
	}
	return 0
}

func (m *SeatInfo) GetChairid() uint32 {
	if m != nil && m.Chairid != nil {
		return *m.Chairid
	}
	return 0
}

func (m *SeatInfo) GetHeadIcon() uint32 {
	if m != nil && m.HeadIcon != nil {
		return *m.HeadIcon
	}
	return 0
}

func (m *SeatInfo) GetBuyin() int64 {
	if m != nil && m.Buyin != nil {
		return *m.Buyin
	}
	return 0
}

// 玩家数值信息
type SeatValueInfo struct {
	Uid              *uint32 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	Coin             *int64  `protobuf:"varint,2,opt,name=coin" json:"coin,omitempty"`
	Chairid          *uint32 `protobuf:"varint,3,opt,name=chairid" json:"chairid,omitempty"`
	Buyin            *int64  `protobuf:"varint,4,opt,name=buyin" json:"buyin,omitempty"`
	Score            *int64  `protobuf:"varint,5,opt,name=score" json:"score,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SeatValueInfo) Reset()                    { *m = SeatValueInfo{} }
func (m *SeatValueInfo) String() string            { return proto.CompactTextString(m) }
func (*SeatValueInfo) ProtoMessage()               {}
func (*SeatValueInfo) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{6} }

func (m *SeatValueInfo) GetUid() uint32 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *SeatValueInfo) GetCoin() int64 {
	if m != nil && m.Coin != nil {
		return *m.Coin
	}
	return 0
}

func (m *SeatValueInfo) GetChairid() uint32 {
	if m != nil && m.Chairid != nil {
		return *m.Chairid
	}
	return 0
}

func (m *SeatValueInfo) GetBuyin() int64 {
	if m != nil && m.Buyin != nil {
		return *m.Buyin
	}
	return 0
}

func (m *SeatValueInfo) GetScore() int64 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

type SeatFace struct {
	Uid              *uint32 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	Name             []byte  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	HeadIcon         *uint32 `protobuf:"varint,3,opt,name=head_icon" json:"head_icon,omitempty"`
	Ready            *uint32 `protobuf:"varint,4,opt,name=ready" json:"ready,omitempty"`
	Chairid          *uint32 `protobuf:"varint,5,opt,name=chairid" json:"chairid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SeatFace) Reset()                    { *m = SeatFace{} }
func (m *SeatFace) String() string            { return proto.CompactTextString(m) }
func (*SeatFace) ProtoMessage()               {}
func (*SeatFace) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{7} }

func (m *SeatFace) GetUid() uint32 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *SeatFace) GetName() []byte {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *SeatFace) GetHeadIcon() uint32 {
	if m != nil && m.HeadIcon != nil {
		return *m.HeadIcon
	}
	return 0
}

func (m *SeatFace) GetReady() uint32 {
	if m != nil && m.Ready != nil {
		return *m.Ready
	}
	return 0
}

func (m *SeatFace) GetChairid() uint32 {
	if m != nil && m.Chairid != nil {
		return *m.Chairid
	}
	return 0
}

// 旁观者信息
type LookerInfo struct {
	Uid              *uint32 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	Name             []byte  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	HeadIcon         *uint32 `protobuf:"varint,3,opt,name=head_icon" json:"head_icon,omitempty"`
	Sex              *uint32 `protobuf:"varint,4,opt,name=sex" json:"sex,omitempty"`
	Score            *int64  `protobuf:"varint,5,opt,name=score" json:"score,omitempty"`
	Coin             *int64  `protobuf:"varint,6,opt,name=coin" json:"coin,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LookerInfo) Reset()                    { *m = LookerInfo{} }
func (m *LookerInfo) String() string            { return proto.CompactTextString(m) }
func (*LookerInfo) ProtoMessage()               {}
func (*LookerInfo) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{8} }

func (m *LookerInfo) GetUid() uint32 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *LookerInfo) GetName() []byte {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *LookerInfo) GetHeadIcon() uint32 {
	if m != nil && m.HeadIcon != nil {
		return *m.HeadIcon
	}
	return 0
}

func (m *LookerInfo) GetSex() uint32 {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return 0
}

func (m *LookerInfo) GetScore() int64 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *LookerInfo) GetCoin() int64 {
	if m != nil && m.Coin != nil {
		return *m.Coin
	}
	return 0
}

// 斗地主桌子信息
type LandTableInfo struct {
	Tableid          *uint32 `protobuf:"varint,1,opt,name=tableid" json:"tableid,omitempty"`
	Tablename        []byte  `protobuf:"bytes,2,opt,name=tablename" json:"tablename,omitempty"`
	IsPasswd         *uint32 `protobuf:"varint,3,opt,name=is_passwd" json:"is_passwd,omitempty"`
	Deal             *uint32 `protobuf:"varint,4,opt,name=deal" json:"deal,omitempty"`
	Basescore        *int64  `protobuf:"varint,5,opt,name=basescore" json:"basescore,omitempty"`
	Consume          *uint32 `protobuf:"varint,6,opt,name=consume" json:"consume,omitempty"`
	Entermin         *uint64 `protobuf:"varint,7,opt,name=entermin" json:"entermin,omitempty"`
	Duetime          *uint32 `protobuf:"varint,8,opt,name=duetime" json:"duetime,omitempty"`
	Feetype          *uint32 `protobuf:"varint,9,opt,name=feetype" json:"feetype,omitempty"`
	Feevalue         *int64  `protobuf:"varint,10,opt,name=feevalue" json:"feevalue,omitempty"`
	Hostname         []byte  `protobuf:"bytes,11,opt,name=hostname" json:"hostname,omitempty"`
	ShowHandNum      *uint32 `protobuf:"varint,12,opt,name=show_hand_num" json:"show_hand_num,omitempty"`
	CallTime         *uint32 `protobuf:"varint,13,opt,name=call_time" json:"call_time,omitempty"`
	CardTime         *uint32 `protobuf:"varint,14,opt,name=card_time" json:"card_time,omitempty"`
	BaseBet          *uint32 `protobuf:"varint,15,opt,name=base_bet" json:"base_bet,omitempty"`
	Passwd           []byte  `protobuf:"bytes,16,opt,name=passwd" json:"passwd,omitempty"`
	TotalRound       *int64  `protobuf:"varint,17,opt,name=total_round" json:"total_round,omitempty"`
	IsAa             *int32  `protobuf:"varint,18,opt,name=is_aa" json:"is_aa,omitempty"`
	HostUid          *int32  `protobuf:"varint,19,opt,name=host_uid" json:"host_uid,omitempty"`
	BombMaxNum       *int32  `protobuf:"varint,20,opt,name=bomb_max_num" json:"bomb_max_num,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LandTableInfo) Reset()                    { *m = LandTableInfo{} }
func (m *LandTableInfo) String() string            { return proto.CompactTextString(m) }
func (*LandTableInfo) ProtoMessage()               {}
func (*LandTableInfo) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{9} }

func (m *LandTableInfo) GetTableid() uint32 {
	if m != nil && m.Tableid != nil {
		return *m.Tableid
	}
	return 0
}

func (m *LandTableInfo) GetTablename() []byte {
	if m != nil {
		return m.Tablename
	}
	return nil
}

func (m *LandTableInfo) GetIsPasswd() uint32 {
	if m != nil && m.IsPasswd != nil {
		return *m.IsPasswd
	}
	return 0
}

func (m *LandTableInfo) GetDeal() uint32 {
	if m != nil && m.Deal != nil {
		return *m.Deal
	}
	return 0
}

func (m *LandTableInfo) GetBasescore() int64 {
	if m != nil && m.Basescore != nil {
		return *m.Basescore
	}
	return 0
}

func (m *LandTableInfo) GetConsume() uint32 {
	if m != nil && m.Consume != nil {
		return *m.Consume
	}
	return 0
}

func (m *LandTableInfo) GetEntermin() uint64 {
	if m != nil && m.Entermin != nil {
		return *m.Entermin
	}
	return 0
}

func (m *LandTableInfo) GetDuetime() uint32 {
	if m != nil && m.Duetime != nil {
		return *m.Duetime
	}
	return 0
}

func (m *LandTableInfo) GetFeetype() uint32 {
	if m != nil && m.Feetype != nil {
		return *m.Feetype
	}
	return 0
}

func (m *LandTableInfo) GetFeevalue() int64 {
	if m != nil && m.Feevalue != nil {
		return *m.Feevalue
	}
	return 0
}

func (m *LandTableInfo) GetHostname() []byte {
	if m != nil {
		return m.Hostname
	}
	return nil
}

func (m *LandTableInfo) GetShowHandNum() uint32 {
	if m != nil && m.ShowHandNum != nil {
		return *m.ShowHandNum
	}
	return 0
}

func (m *LandTableInfo) GetCallTime() uint32 {
	if m != nil && m.CallTime != nil {
		return *m.CallTime
	}
	return 0
}

func (m *LandTableInfo) GetCardTime() uint32 {
	if m != nil && m.CardTime != nil {
		return *m.CardTime
	}
	return 0
}

func (m *LandTableInfo) GetBaseBet() uint32 {
	if m != nil && m.BaseBet != nil {
		return *m.BaseBet
	}
	return 0
}

func (m *LandTableInfo) GetPasswd() []byte {
	if m != nil {
		return m.Passwd
	}
	return nil
}

func (m *LandTableInfo) GetTotalRound() int64 {
	if m != nil && m.TotalRound != nil {
		return *m.TotalRound
	}
	return 0
}

func (m *LandTableInfo) GetIsAa() int32 {
	if m != nil && m.IsAa != nil {
		return *m.IsAa
	}
	return 0
}

func (m *LandTableInfo) GetHostUid() int32 {
	if m != nil && m.HostUid != nil {
		return *m.HostUid
	}
	return 0
}

func (m *LandTableInfo) GetBombMaxNum() int32 {
	if m != nil && m.BombMaxNum != nil {
		return *m.BombMaxNum
	}
	return 0
}

// 梭哈桌子信息
type ShowhandTableInfo struct {
	Tableid          *uint32     `protobuf:"varint,1,opt,name=tableid" json:"tableid,omitempty"`
	Tablename        []byte      `protobuf:"bytes,2,opt,name=tablename" json:"tablename,omitempty"`
	IsPasswd         *uint32     `protobuf:"varint,3,opt,name=is_passwd" json:"is_passwd,omitempty"`
	Basescore        *int64      `protobuf:"varint,4,opt,name=basescore" json:"basescore,omitempty"`
	Consume          *uint32     `protobuf:"varint,5,opt,name=consume" json:"consume,omitempty"`
	Entermin         *uint64     `protobuf:"varint,6,opt,name=entermin" json:"entermin,omitempty"`
	Duetime          *uint32     `protobuf:"varint,7,opt,name=duetime" json:"duetime,omitempty"`
	Feetype          *uint32     `protobuf:"varint,8,opt,name=feetype" json:"feetype,omitempty"`
	Feevalue         *int64      `protobuf:"varint,9,opt,name=feevalue" json:"feevalue,omitempty"`
	Hostname         []byte      `protobuf:"bytes,10,opt,name=hostname" json:"hostname,omitempty"`
	CardTime         *uint32     `protobuf:"varint,11,opt,name=card_time" json:"card_time,omitempty"`
	TableState       *uint32     `protobuf:"varint,12,opt,name=table_state" json:"table_state,omitempty"`
	Players          []*SeatFace `protobuf:"bytes,13,rep,name=players" json:"players,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *ShowhandTableInfo) Reset()                    { *m = ShowhandTableInfo{} }
func (m *ShowhandTableInfo) String() string            { return proto.CompactTextString(m) }
func (*ShowhandTableInfo) ProtoMessage()               {}
func (*ShowhandTableInfo) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{10} }

func (m *ShowhandTableInfo) GetTableid() uint32 {
	if m != nil && m.Tableid != nil {
		return *m.Tableid
	}
	return 0
}

func (m *ShowhandTableInfo) GetTablename() []byte {
	if m != nil {
		return m.Tablename
	}
	return nil
}

func (m *ShowhandTableInfo) GetIsPasswd() uint32 {
	if m != nil && m.IsPasswd != nil {
		return *m.IsPasswd
	}
	return 0
}

func (m *ShowhandTableInfo) GetBasescore() int64 {
	if m != nil && m.Basescore != nil {
		return *m.Basescore
	}
	return 0
}

func (m *ShowhandTableInfo) GetConsume() uint32 {
	if m != nil && m.Consume != nil {
		return *m.Consume
	}
	return 0
}

func (m *ShowhandTableInfo) GetEntermin() uint64 {
	if m != nil && m.Entermin != nil {
		return *m.Entermin
	}
	return 0
}

func (m *ShowhandTableInfo) GetDuetime() uint32 {
	if m != nil && m.Duetime != nil {
		return *m.Duetime
	}
	return 0
}

func (m *ShowhandTableInfo) GetFeetype() uint32 {
	if m != nil && m.Feetype != nil {
		return *m.Feetype
	}
	return 0
}

func (m *ShowhandTableInfo) GetFeevalue() int64 {
	if m != nil && m.Feevalue != nil {
		return *m.Feevalue
	}
	return 0
}

func (m *ShowhandTableInfo) GetHostname() []byte {
	if m != nil {
		return m.Hostname
	}
	return nil
}

func (m *ShowhandTableInfo) GetCardTime() uint32 {
	if m != nil && m.CardTime != nil {
		return *m.CardTime
	}
	return 0
}

func (m *ShowhandTableInfo) GetTableState() uint32 {
	if m != nil && m.TableState != nil {
		return *m.TableState
	}
	return 0
}

func (m *ShowhandTableInfo) GetPlayers() []*SeatFace {
	if m != nil {
		return m.Players
	}
	return nil
}

// 百人桌子信息
type BainiuTableInfo struct {
	Tableid              *uint32 `protobuf:"varint,1,opt,name=tableid" json:"tableid,omitempty"`
	Tablename            []byte  `protobuf:"bytes,2,opt,name=tablename" json:"tablename,omitempty"`
	IsPasswd             *uint32 `protobuf:"varint,3,opt,name=is_passwd" json:"is_passwd,omitempty"`
	Basescore            *int64  `protobuf:"varint,4,opt,name=basescore" json:"basescore,omitempty"`
	Consume              *uint32 `protobuf:"varint,5,opt,name=consume" json:"consume,omitempty"`
	Entermin             *uint64 `protobuf:"varint,6,opt,name=entermin" json:"entermin,omitempty"`
	Duetime              *uint32 `protobuf:"varint,7,opt,name=duetime" json:"duetime,omitempty"`
	Feetype              *uint32 `protobuf:"varint,8,opt,name=feetype" json:"feetype,omitempty"`
	Feevalue             *int64  `protobuf:"varint,9,opt,name=feevalue" json:"feevalue,omitempty"`
	Hostname             []byte  `protobuf:"bytes,10,opt,name=hostname" json:"hostname,omitempty"`
	CardTime             *uint32 `protobuf:"varint,11,opt,name=card_time" json:"card_time,omitempty"`
	TableState           *uint32 `protobuf:"varint,12,opt,name=table_state" json:"table_state,omitempty"`
	Sitdown              *int64  `protobuf:"varint,13,opt,name=sitdown" json:"sitdown,omitempty"`
	ApplyBankerCondition *int64  `protobuf:"varint,14,opt,name=apply_banker_condition" json:"apply_banker_condition,omitempty"`
	ApplyBankerMaxscore  *int64  `protobuf:"varint,15,opt,name=apply_banker_maxscore" json:"apply_banker_maxscore,omitempty"`
	BankerMaxTime        *uint32 `protobuf:"varint,16,opt,name=banker_max_time" json:"banker_max_time,omitempty"`
	XXX_unrecognized     []byte  `json:"-"`
}

func (m *BainiuTableInfo) Reset()                    { *m = BainiuTableInfo{} }
func (m *BainiuTableInfo) String() string            { return proto.CompactTextString(m) }
func (*BainiuTableInfo) ProtoMessage()               {}
func (*BainiuTableInfo) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{11} }

func (m *BainiuTableInfo) GetTableid() uint32 {
	if m != nil && m.Tableid != nil {
		return *m.Tableid
	}
	return 0
}

func (m *BainiuTableInfo) GetTablename() []byte {
	if m != nil {
		return m.Tablename
	}
	return nil
}

func (m *BainiuTableInfo) GetIsPasswd() uint32 {
	if m != nil && m.IsPasswd != nil {
		return *m.IsPasswd
	}
	return 0
}

func (m *BainiuTableInfo) GetBasescore() int64 {
	if m != nil && m.Basescore != nil {
		return *m.Basescore
	}
	return 0
}

func (m *BainiuTableInfo) GetConsume() uint32 {
	if m != nil && m.Consume != nil {
		return *m.Consume
	}
	return 0
}

func (m *BainiuTableInfo) GetEntermin() uint64 {
	if m != nil && m.Entermin != nil {
		return *m.Entermin
	}
	return 0
}

func (m *BainiuTableInfo) GetDuetime() uint32 {
	if m != nil && m.Duetime != nil {
		return *m.Duetime
	}
	return 0
}

func (m *BainiuTableInfo) GetFeetype() uint32 {
	if m != nil && m.Feetype != nil {
		return *m.Feetype
	}
	return 0
}

func (m *BainiuTableInfo) GetFeevalue() int64 {
	if m != nil && m.Feevalue != nil {
		return *m.Feevalue
	}
	return 0
}

func (m *BainiuTableInfo) GetHostname() []byte {
	if m != nil {
		return m.Hostname
	}
	return nil
}

func (m *BainiuTableInfo) GetCardTime() uint32 {
	if m != nil && m.CardTime != nil {
		return *m.CardTime
	}
	return 0
}

func (m *BainiuTableInfo) GetTableState() uint32 {
	if m != nil && m.TableState != nil {
		return *m.TableState
	}
	return 0
}

func (m *BainiuTableInfo) GetSitdown() int64 {
	if m != nil && m.Sitdown != nil {
		return *m.Sitdown
	}
	return 0
}

func (m *BainiuTableInfo) GetApplyBankerCondition() int64 {
	if m != nil && m.ApplyBankerCondition != nil {
		return *m.ApplyBankerCondition
	}
	return 0
}

func (m *BainiuTableInfo) GetApplyBankerMaxscore() int64 {
	if m != nil && m.ApplyBankerMaxscore != nil {
		return *m.ApplyBankerMaxscore
	}
	return 0
}

func (m *BainiuTableInfo) GetBankerMaxTime() uint32 {
	if m != nil && m.BankerMaxTime != nil {
		return *m.BankerMaxTime
	}
	return 0
}

// 德州桌子信息
type TexasTableInfo struct {
	Tableid          *uint32 `protobuf:"varint,1,opt,name=tableid" json:"tableid,omitempty"`
	Tablename        []byte  `protobuf:"bytes,2,opt,name=tablename" json:"tablename,omitempty"`
	IsPasswd         *uint32 `protobuf:"varint,3,opt,name=is_passwd" json:"is_passwd,omitempty"`
	Basescore        *int64  `protobuf:"varint,4,opt,name=basescore" json:"basescore,omitempty"`
	Consume          *uint32 `protobuf:"varint,5,opt,name=consume" json:"consume,omitempty"`
	Entermin         *uint64 `protobuf:"varint,6,opt,name=entermin" json:"entermin,omitempty"`
	Duetime          *uint32 `protobuf:"varint,7,opt,name=duetime" json:"duetime,omitempty"`
	Feetype          *uint32 `protobuf:"varint,8,opt,name=feetype" json:"feetype,omitempty"`
	Feevalue         *int64  `protobuf:"varint,9,opt,name=feevalue" json:"feevalue,omitempty"`
	Hostname         []byte  `protobuf:"bytes,10,opt,name=hostname" json:"hostname,omitempty"`
	CardTime         *uint32 `protobuf:"varint,11,opt,name=card_time" json:"card_time,omitempty"`
	TableState       *uint32 `protobuf:"varint,12,opt,name=table_state" json:"table_state,omitempty"`
	Sitdown          *int64  `protobuf:"varint,13,opt,name=sitdown" json:"sitdown,omitempty"`
	PlayerNum        *uint32 `protobuf:"varint,14,opt,name=player_num" json:"player_num,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *TexasTableInfo) Reset()                    { *m = TexasTableInfo{} }
func (m *TexasTableInfo) String() string            { return proto.CompactTextString(m) }
func (*TexasTableInfo) ProtoMessage()               {}
func (*TexasTableInfo) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{12} }

func (m *TexasTableInfo) GetTableid() uint32 {
	if m != nil && m.Tableid != nil {
		return *m.Tableid
	}
	return 0
}

func (m *TexasTableInfo) GetTablename() []byte {
	if m != nil {
		return m.Tablename
	}
	return nil
}

func (m *TexasTableInfo) GetIsPasswd() uint32 {
	if m != nil && m.IsPasswd != nil {
		return *m.IsPasswd
	}
	return 0
}

func (m *TexasTableInfo) GetBasescore() int64 {
	if m != nil && m.Basescore != nil {
		return *m.Basescore
	}
	return 0
}

func (m *TexasTableInfo) GetConsume() uint32 {
	if m != nil && m.Consume != nil {
		return *m.Consume
	}
	return 0
}

func (m *TexasTableInfo) GetEntermin() uint64 {
	if m != nil && m.Entermin != nil {
		return *m.Entermin
	}
	return 0
}

func (m *TexasTableInfo) GetDuetime() uint32 {
	if m != nil && m.Duetime != nil {
		return *m.Duetime
	}
	return 0
}

func (m *TexasTableInfo) GetFeetype() uint32 {
	if m != nil && m.Feetype != nil {
		return *m.Feetype
	}
	return 0
}

func (m *TexasTableInfo) GetFeevalue() int64 {
	if m != nil && m.Feevalue != nil {
		return *m.Feevalue
	}
	return 0
}

func (m *TexasTableInfo) GetHostname() []byte {
	if m != nil {
		return m.Hostname
	}
	return nil
}

func (m *TexasTableInfo) GetCardTime() uint32 {
	if m != nil && m.CardTime != nil {
		return *m.CardTime
	}
	return 0
}

func (m *TexasTableInfo) GetTableState() uint32 {
	if m != nil && m.TableState != nil {
		return *m.TableState
	}
	return 0
}

func (m *TexasTableInfo) GetSitdown() int64 {
	if m != nil && m.Sitdown != nil {
		return *m.Sitdown
	}
	return 0
}

func (m *TexasTableInfo) GetPlayerNum() uint32 {
	if m != nil && m.PlayerNum != nil {
		return *m.PlayerNum
	}
	return 0
}

// 扎金花桌子信息
type ZajinhuaTableInfo struct {
	Tableid          *uint32  `protobuf:"varint,1,opt,name=tableid" json:"tableid,omitempty"`
	Tablename        []byte   `protobuf:"bytes,2,opt,name=tablename" json:"tablename,omitempty"`
	IsPasswd         *uint32  `protobuf:"varint,3,opt,name=is_passwd" json:"is_passwd,omitempty"`
	Basescore        *int64   `protobuf:"varint,4,opt,name=basescore" json:"basescore,omitempty"`
	Consume          *uint32  `protobuf:"varint,5,opt,name=consume" json:"consume,omitempty"`
	Entermin         *uint64  `protobuf:"varint,6,opt,name=entermin" json:"entermin,omitempty"`
	Duetime          *uint32  `protobuf:"varint,7,opt,name=duetime" json:"duetime,omitempty"`
	Feetype          *uint32  `protobuf:"varint,8,opt,name=feetype" json:"feetype,omitempty"`
	Feevalue         *int64   `protobuf:"varint,9,opt,name=feevalue" json:"feevalue,omitempty"`
	Hostname         []byte   `protobuf:"bytes,10,opt,name=hostname" json:"hostname,omitempty"`
	CardTime         *uint32  `protobuf:"varint,11,opt,name=card_time" json:"card_time,omitempty"`
	TableState       *uint32  `protobuf:"varint,12,opt,name=table_state" json:"table_state,omitempty"`
	CompareRound     *uint32  `protobuf:"varint,13,opt,name=compare_round" json:"compare_round,omitempty"`
	LookRound        *uint32  `protobuf:"varint,14,opt,name=look_round" json:"look_round,omitempty"`
	LimitRound       *uint32  `protobuf:"varint,15,opt,name=limit_round" json:"limit_round,omitempty"`
	MingMultip       []uint32 `protobuf:"varint,16,rep,name=ming_multip" json:"ming_multip,omitempty"`
	BlindMultip      []uint32 `protobuf:"varint,17,rep,name=blind_multip" json:"blind_multip,omitempty"`
	LimitType        *uint32  `protobuf:"varint,18,opt,name=limit_type" json:"limit_type,omitempty"`
	LimitBet         *int64   `protobuf:"varint,19,opt,name=limit_bet" json:"limit_bet,omitempty"`
	Passwd           []byte   `protobuf:"bytes,20,opt,name=passwd" json:"passwd,omitempty"`
	TotalRound       *int64   `protobuf:"varint,21,opt,name=total_round" json:"total_round,omitempty"`
	IsAa             *int32   `protobuf:"varint,22,opt,name=is_aa" json:"is_aa,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ZajinhuaTableInfo) Reset()                    { *m = ZajinhuaTableInfo{} }
func (m *ZajinhuaTableInfo) String() string            { return proto.CompactTextString(m) }
func (*ZajinhuaTableInfo) ProtoMessage()               {}
func (*ZajinhuaTableInfo) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{13} }

func (m *ZajinhuaTableInfo) GetTableid() uint32 {
	if m != nil && m.Tableid != nil {
		return *m.Tableid
	}
	return 0
}

func (m *ZajinhuaTableInfo) GetTablename() []byte {
	if m != nil {
		return m.Tablename
	}
	return nil
}

func (m *ZajinhuaTableInfo) GetIsPasswd() uint32 {
	if m != nil && m.IsPasswd != nil {
		return *m.IsPasswd
	}
	return 0
}

func (m *ZajinhuaTableInfo) GetBasescore() int64 {
	if m != nil && m.Basescore != nil {
		return *m.Basescore
	}
	return 0
}

func (m *ZajinhuaTableInfo) GetConsume() uint32 {
	if m != nil && m.Consume != nil {
		return *m.Consume
	}
	return 0
}

func (m *ZajinhuaTableInfo) GetEntermin() uint64 {
	if m != nil && m.Entermin != nil {
		return *m.Entermin
	}
	return 0
}

func (m *ZajinhuaTableInfo) GetDuetime() uint32 {
	if m != nil && m.Duetime != nil {
		return *m.Duetime
	}
	return 0
}

func (m *ZajinhuaTableInfo) GetFeetype() uint32 {
	if m != nil && m.Feetype != nil {
		return *m.Feetype
	}
	return 0
}

func (m *ZajinhuaTableInfo) GetFeevalue() int64 {
	if m != nil && m.Feevalue != nil {
		return *m.Feevalue
	}
	return 0
}

func (m *ZajinhuaTableInfo) GetHostname() []byte {
	if m != nil {
		return m.Hostname
	}
	return nil
}

func (m *ZajinhuaTableInfo) GetCardTime() uint32 {
	if m != nil && m.CardTime != nil {
		return *m.CardTime
	}
	return 0
}

func (m *ZajinhuaTableInfo) GetTableState() uint32 {
	if m != nil && m.TableState != nil {
		return *m.TableState
	}
	return 0
}

func (m *ZajinhuaTableInfo) GetCompareRound() uint32 {
	if m != nil && m.CompareRound != nil {
		return *m.CompareRound
	}
	return 0
}

func (m *ZajinhuaTableInfo) GetLookRound() uint32 {
	if m != nil && m.LookRound != nil {
		return *m.LookRound
	}
	return 0
}

func (m *ZajinhuaTableInfo) GetLimitRound() uint32 {
	if m != nil && m.LimitRound != nil {
		return *m.LimitRound
	}
	return 0
}

func (m *ZajinhuaTableInfo) GetMingMultip() []uint32 {
	if m != nil {
		return m.MingMultip
	}
	return nil
}

func (m *ZajinhuaTableInfo) GetBlindMultip() []uint32 {
	if m != nil {
		return m.BlindMultip
	}
	return nil
}

func (m *ZajinhuaTableInfo) GetLimitType() uint32 {
	if m != nil && m.LimitType != nil {
		return *m.LimitType
	}
	return 0
}

func (m *ZajinhuaTableInfo) GetLimitBet() int64 {
	if m != nil && m.LimitBet != nil {
		return *m.LimitBet
	}
	return 0
}

func (m *ZajinhuaTableInfo) GetPasswd() []byte {
	if m != nil {
		return m.Passwd
	}
	return nil
}

func (m *ZajinhuaTableInfo) GetTotalRound() int64 {
	if m != nil && m.TotalRound != nil {
		return *m.TotalRound
	}
	return 0
}

func (m *ZajinhuaTableInfo) GetIsAa() int32 {
	if m != nil && m.IsAa != nil {
		return *m.IsAa
	}
	return 0
}

// 牛牛桌子信息
type NiuniuTableInfo struct {
	Tableid          *uint32 `protobuf:"varint,1,opt,name=tableid" json:"tableid,omitempty"`
	Tablename        []byte  `protobuf:"bytes,2,opt,name=tablename" json:"tablename,omitempty"`
	IsPasswd         *uint32 `protobuf:"varint,3,opt,name=is_passwd" json:"is_passwd,omitempty"`
	Basescore        *int64  `protobuf:"varint,4,opt,name=basescore" json:"basescore,omitempty"`
	Consume          *uint32 `protobuf:"varint,5,opt,name=consume" json:"consume,omitempty"`
	Entermin         *uint64 `protobuf:"varint,6,opt,name=entermin" json:"entermin,omitempty"`
	Duetime          *uint32 `protobuf:"varint,7,opt,name=duetime" json:"duetime,omitempty"`
	Feetype          *uint32 `protobuf:"varint,8,opt,name=feetype" json:"feetype,omitempty"`
	Feevalue         *int64  `protobuf:"varint,9,opt,name=feevalue" json:"feevalue,omitempty"`
	Hostname         []byte  `protobuf:"bytes,10,opt,name=hostname" json:"hostname,omitempty"`
	TableState       *uint32 `protobuf:"varint,11,opt,name=table_state" json:"table_state,omitempty"`
	SeatNum          *uint32 `protobuf:"varint,12,opt,name=seat_num" json:"seat_num,omitempty"`
	CanBanker        *uint32 `protobuf:"varint,13,opt,name=can_banker" json:"can_banker,omitempty"`
	ApplyBankerTime  *uint32 `protobuf:"varint,14,opt,name=apply_banker_time" json:"apply_banker_time,omitempty"`
	CardTime         *uint32 `protobuf:"varint,15,opt,name=card_time" json:"card_time,omitempty"`
	ShowCardTime     *uint32 `protobuf:"varint,16,opt,name=show_card_time" json:"show_card_time,omitempty"`
	Passwd           []byte  `protobuf:"bytes,17,opt,name=passwd" json:"passwd,omitempty"`
	TotalRound       *int64  `protobuf:"varint,18,opt,name=total_round" json:"total_round,omitempty"`
	BeBankerMethod   *int64  `protobuf:"varint,19,opt,name=be_banker_method" json:"be_banker_method,omitempty"`
	AddCoreMultiple  *int64  `protobuf:"varint,20,opt,name=add_core_multiple" json:"add_core_multiple,omitempty"`
	IsAa             *int32  `protobuf:"varint,21,opt,name=is_aa" json:"is_aa,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *NiuniuTableInfo) Reset()                    { *m = NiuniuTableInfo{} }
func (m *NiuniuTableInfo) String() string            { return proto.CompactTextString(m) }
func (*NiuniuTableInfo) ProtoMessage()               {}
func (*NiuniuTableInfo) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{14} }

func (m *NiuniuTableInfo) GetTableid() uint32 {
	if m != nil && m.Tableid != nil {
		return *m.Tableid
	}
	return 0
}

func (m *NiuniuTableInfo) GetTablename() []byte {
	if m != nil {
		return m.Tablename
	}
	return nil
}

func (m *NiuniuTableInfo) GetIsPasswd() uint32 {
	if m != nil && m.IsPasswd != nil {
		return *m.IsPasswd
	}
	return 0
}

func (m *NiuniuTableInfo) GetBasescore() int64 {
	if m != nil && m.Basescore != nil {
		return *m.Basescore
	}
	return 0
}

func (m *NiuniuTableInfo) GetConsume() uint32 {
	if m != nil && m.Consume != nil {
		return *m.Consume
	}
	return 0
}

func (m *NiuniuTableInfo) GetEntermin() uint64 {
	if m != nil && m.Entermin != nil {
		return *m.Entermin
	}
	return 0
}

func (m *NiuniuTableInfo) GetDuetime() uint32 {
	if m != nil && m.Duetime != nil {
		return *m.Duetime
	}
	return 0
}

func (m *NiuniuTableInfo) GetFeetype() uint32 {
	if m != nil && m.Feetype != nil {
		return *m.Feetype
	}
	return 0
}

func (m *NiuniuTableInfo) GetFeevalue() int64 {
	if m != nil && m.Feevalue != nil {
		return *m.Feevalue
	}
	return 0
}

func (m *NiuniuTableInfo) GetHostname() []byte {
	if m != nil {
		return m.Hostname
	}
	return nil
}

func (m *NiuniuTableInfo) GetTableState() uint32 {
	if m != nil && m.TableState != nil {
		return *m.TableState
	}
	return 0
}

func (m *NiuniuTableInfo) GetSeatNum() uint32 {
	if m != nil && m.SeatNum != nil {
		return *m.SeatNum
	}
	return 0
}

func (m *NiuniuTableInfo) GetCanBanker() uint32 {
	if m != nil && m.CanBanker != nil {
		return *m.CanBanker
	}
	return 0
}

func (m *NiuniuTableInfo) GetApplyBankerTime() uint32 {
	if m != nil && m.ApplyBankerTime != nil {
		return *m.ApplyBankerTime
	}
	return 0
}

func (m *NiuniuTableInfo) GetCardTime() uint32 {
	if m != nil && m.CardTime != nil {
		return *m.CardTime
	}
	return 0
}

func (m *NiuniuTableInfo) GetShowCardTime() uint32 {
	if m != nil && m.ShowCardTime != nil {
		return *m.ShowCardTime
	}
	return 0
}

func (m *NiuniuTableInfo) GetPasswd() []byte {
	if m != nil {
		return m.Passwd
	}
	return nil
}

func (m *NiuniuTableInfo) GetTotalRound() int64 {
	if m != nil && m.TotalRound != nil {
		return *m.TotalRound
	}
	return 0
}

func (m *NiuniuTableInfo) GetBeBankerMethod() int64 {
	if m != nil && m.BeBankerMethod != nil {
		return *m.BeBankerMethod
	}
	return 0
}

func (m *NiuniuTableInfo) GetAddCoreMultiple() int64 {
	if m != nil && m.AddCoreMultiple != nil {
		return *m.AddCoreMultiple
	}
	return 0
}

func (m *NiuniuTableInfo) GetIsAa() int32 {
	if m != nil && m.IsAa != nil {
		return *m.IsAa
	}
	return 0
}

// 百家乐桌子信息
type BaccaratTableInfo struct {
	Tableid              *uint32 `protobuf:"varint,1,opt,name=tableid" json:"tableid,omitempty"`
	Tablename            []byte  `protobuf:"bytes,2,opt,name=tablename" json:"tablename,omitempty"`
	IsPasswd             *uint32 `protobuf:"varint,3,opt,name=is_passwd" json:"is_passwd,omitempty"`
	Basescore            *int64  `protobuf:"varint,4,opt,name=basescore" json:"basescore,omitempty"`
	Consume              *uint32 `protobuf:"varint,5,opt,name=consume" json:"consume,omitempty"`
	Entermin             *uint64 `protobuf:"varint,6,opt,name=entermin" json:"entermin,omitempty"`
	Duetime              *uint32 `protobuf:"varint,7,opt,name=duetime" json:"duetime,omitempty"`
	Feetype              *uint32 `protobuf:"varint,8,opt,name=feetype" json:"feetype,omitempty"`
	Feevalue             *int64  `protobuf:"varint,9,opt,name=feevalue" json:"feevalue,omitempty"`
	Hostname             []byte  `protobuf:"bytes,10,opt,name=hostname" json:"hostname,omitempty"`
	CardTime             *uint32 `protobuf:"varint,11,opt,name=card_time" json:"card_time,omitempty"`
	TableState           *uint32 `protobuf:"varint,12,opt,name=table_state" json:"table_state,omitempty"`
	Sitdown              *int64  `protobuf:"varint,13,opt,name=sitdown" json:"sitdown,omitempty"`
	ApplyBankerCondition *int64  `protobuf:"varint,14,opt,name=apply_banker_condition" json:"apply_banker_condition,omitempty"`
	ApplyBankerMaxscore  *int64  `protobuf:"varint,15,opt,name=apply_banker_maxscore" json:"apply_banker_maxscore,omitempty"`
	BankerMaxTime        *uint32 `protobuf:"varint,16,opt,name=banker_max_time" json:"banker_max_time,omitempty"`
	XXX_unrecognized     []byte  `json:"-"`
}

func (m *BaccaratTableInfo) Reset()                    { *m = BaccaratTableInfo{} }
func (m *BaccaratTableInfo) String() string            { return proto.CompactTextString(m) }
func (*BaccaratTableInfo) ProtoMessage()               {}
func (*BaccaratTableInfo) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{15} }

func (m *BaccaratTableInfo) GetTableid() uint32 {
	if m != nil && m.Tableid != nil {
		return *m.Tableid
	}
	return 0
}

func (m *BaccaratTableInfo) GetTablename() []byte {
	if m != nil {
		return m.Tablename
	}
	return nil
}

func (m *BaccaratTableInfo) GetIsPasswd() uint32 {
	if m != nil && m.IsPasswd != nil {
		return *m.IsPasswd
	}
	return 0
}

func (m *BaccaratTableInfo) GetBasescore() int64 {
	if m != nil && m.Basescore != nil {
		return *m.Basescore
	}
	return 0
}

func (m *BaccaratTableInfo) GetConsume() uint32 {
	if m != nil && m.Consume != nil {
		return *m.Consume
	}
	return 0
}

func (m *BaccaratTableInfo) GetEntermin() uint64 {
	if m != nil && m.Entermin != nil {
		return *m.Entermin
	}
	return 0
}

func (m *BaccaratTableInfo) GetDuetime() uint32 {
	if m != nil && m.Duetime != nil {
		return *m.Duetime
	}
	return 0
}

func (m *BaccaratTableInfo) GetFeetype() uint32 {
	if m != nil && m.Feetype != nil {
		return *m.Feetype
	}
	return 0
}

func (m *BaccaratTableInfo) GetFeevalue() int64 {
	if m != nil && m.Feevalue != nil {
		return *m.Feevalue
	}
	return 0
}

func (m *BaccaratTableInfo) GetHostname() []byte {
	if m != nil {
		return m.Hostname
	}
	return nil
}

func (m *BaccaratTableInfo) GetCardTime() uint32 {
	if m != nil && m.CardTime != nil {
		return *m.CardTime
	}
	return 0
}

func (m *BaccaratTableInfo) GetTableState() uint32 {
	if m != nil && m.TableState != nil {
		return *m.TableState
	}
	return 0
}

func (m *BaccaratTableInfo) GetSitdown() int64 {
	if m != nil && m.Sitdown != nil {
		return *m.Sitdown
	}
	return 0
}

func (m *BaccaratTableInfo) GetApplyBankerCondition() int64 {
	if m != nil && m.ApplyBankerCondition != nil {
		return *m.ApplyBankerCondition
	}
	return 0
}

func (m *BaccaratTableInfo) GetApplyBankerMaxscore() int64 {
	if m != nil && m.ApplyBankerMaxscore != nil {
		return *m.ApplyBankerMaxscore
	}
	return 0
}

func (m *BaccaratTableInfo) GetBankerMaxTime() uint32 {
	if m != nil && m.BankerMaxTime != nil {
		return *m.BankerMaxTime
	}
	return 0
}

// 三公桌子信息
type SangongTableInfo struct {
	Tableid          *uint32 `protobuf:"varint,1,opt,name=tableid" json:"tableid,omitempty"`
	Tablename        []byte  `protobuf:"bytes,2,opt,name=tablename" json:"tablename,omitempty"`
	IsPasswd         *uint32 `protobuf:"varint,3,opt,name=is_passwd" json:"is_passwd,omitempty"`
	Basescore        *int64  `protobuf:"varint,4,opt,name=basescore" json:"basescore,omitempty"`
	Consume          *uint32 `protobuf:"varint,5,opt,name=consume" json:"consume,omitempty"`
	Entermin         *uint64 `protobuf:"varint,6,opt,name=entermin" json:"entermin,omitempty"`
	Duetime          *uint32 `protobuf:"varint,7,opt,name=duetime" json:"duetime,omitempty"`
	Feetype          *uint32 `protobuf:"varint,8,opt,name=feetype" json:"feetype,omitempty"`
	Feevalue         *int64  `protobuf:"varint,9,opt,name=feevalue" json:"feevalue,omitempty"`
	Hostname         []byte  `protobuf:"bytes,10,opt,name=hostname" json:"hostname,omitempty"`
	TableState       *uint32 `protobuf:"varint,11,opt,name=table_state" json:"table_state,omitempty"`
	SeatNum          *uint32 `protobuf:"varint,12,opt,name=seat_num" json:"seat_num,omitempty"`
	CanBanker        *uint32 `protobuf:"varint,13,opt,name=can_banker" json:"can_banker,omitempty"`
	ApplyBankerTime  *uint32 `protobuf:"varint,14,opt,name=apply_banker_time" json:"apply_banker_time,omitempty"`
	CardTime         *uint32 `protobuf:"varint,15,opt,name=card_time" json:"card_time,omitempty"`
	ShowCardTime     *uint32 `protobuf:"varint,16,opt,name=show_card_time" json:"show_card_time,omitempty"`
	Passwd           []byte  `protobuf:"bytes,17,opt,name=passwd" json:"passwd,omitempty"`
	TotalRound       *int64  `protobuf:"varint,18,opt,name=total_round" json:"total_round,omitempty"`
	IsAa             *int32  `protobuf:"varint,19,opt,name=is_aa" json:"is_aa,omitempty"`
	BeBankerMethod   *int64  `protobuf:"varint,20,opt,name=be_banker_method" json:"be_banker_method,omitempty"`
	Multiple         *int64  `protobuf:"varint,21,opt,name=multiple" json:"multiple,omitempty"`
	QuitBanketTime   *int64  `protobuf:"varint,22,opt,name=quit_banket_time" json:"quit_banket_time,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SangongTableInfo) Reset()                    { *m = SangongTableInfo{} }
func (m *SangongTableInfo) String() string            { return proto.CompactTextString(m) }
func (*SangongTableInfo) ProtoMessage()               {}
func (*SangongTableInfo) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{16} }

func (m *SangongTableInfo) GetTableid() uint32 {
	if m != nil && m.Tableid != nil {
		return *m.Tableid
	}
	return 0
}

func (m *SangongTableInfo) GetTablename() []byte {
	if m != nil {
		return m.Tablename
	}
	return nil
}

func (m *SangongTableInfo) GetIsPasswd() uint32 {
	if m != nil && m.IsPasswd != nil {
		return *m.IsPasswd
	}
	return 0
}

func (m *SangongTableInfo) GetBasescore() int64 {
	if m != nil && m.Basescore != nil {
		return *m.Basescore
	}
	return 0
}

func (m *SangongTableInfo) GetConsume() uint32 {
	if m != nil && m.Consume != nil {
		return *m.Consume
	}
	return 0
}

func (m *SangongTableInfo) GetEntermin() uint64 {
	if m != nil && m.Entermin != nil {
		return *m.Entermin
	}
	return 0
}

func (m *SangongTableInfo) GetDuetime() uint32 {
	if m != nil && m.Duetime != nil {
		return *m.Duetime
	}
	return 0
}

func (m *SangongTableInfo) GetFeetype() uint32 {
	if m != nil && m.Feetype != nil {
		return *m.Feetype
	}
	return 0
}

func (m *SangongTableInfo) GetFeevalue() int64 {
	if m != nil && m.Feevalue != nil {
		return *m.Feevalue
	}
	return 0
}

func (m *SangongTableInfo) GetHostname() []byte {
	if m != nil {
		return m.Hostname
	}
	return nil
}

func (m *SangongTableInfo) GetTableState() uint32 {
	if m != nil && m.TableState != nil {
		return *m.TableState
	}
	return 0
}

func (m *SangongTableInfo) GetSeatNum() uint32 {
	if m != nil && m.SeatNum != nil {
		return *m.SeatNum
	}
	return 0
}

func (m *SangongTableInfo) GetCanBanker() uint32 {
	if m != nil && m.CanBanker != nil {
		return *m.CanBanker
	}
	return 0
}

func (m *SangongTableInfo) GetApplyBankerTime() uint32 {
	if m != nil && m.ApplyBankerTime != nil {
		return *m.ApplyBankerTime
	}
	return 0
}

func (m *SangongTableInfo) GetCardTime() uint32 {
	if m != nil && m.CardTime != nil {
		return *m.CardTime
	}
	return 0
}

func (m *SangongTableInfo) GetShowCardTime() uint32 {
	if m != nil && m.ShowCardTime != nil {
		return *m.ShowCardTime
	}
	return 0
}

func (m *SangongTableInfo) GetPasswd() []byte {
	if m != nil {
		return m.Passwd
	}
	return nil
}

func (m *SangongTableInfo) GetTotalRound() int64 {
	if m != nil && m.TotalRound != nil {
		return *m.TotalRound
	}
	return 0
}

func (m *SangongTableInfo) GetIsAa() int32 {
	if m != nil && m.IsAa != nil {
		return *m.IsAa
	}
	return 0
}

func (m *SangongTableInfo) GetBeBankerMethod() int64 {
	if m != nil && m.BeBankerMethod != nil {
		return *m.BeBankerMethod
	}
	return 0
}

func (m *SangongTableInfo) GetMultiple() int64 {
	if m != nil && m.Multiple != nil {
		return *m.Multiple
	}
	return 0
}

func (m *SangongTableInfo) GetQuitBanketTime() int64 {
	if m != nil && m.QuitBanketTime != nil {
		return *m.QuitBanketTime
	}
	return 0
}

// 牌九桌子信息
type PaijiuTableInfo struct {
	Tableid              *uint32 `protobuf:"varint,1,opt,name=tableid" json:"tableid,omitempty"`
	Tablename            []byte  `protobuf:"bytes,2,opt,name=tablename" json:"tablename,omitempty"`
	IsPasswd             *uint32 `protobuf:"varint,3,opt,name=is_passwd" json:"is_passwd,omitempty"`
	Basescore            *int64  `protobuf:"varint,4,opt,name=basescore" json:"basescore,omitempty"`
	Consume              *uint32 `protobuf:"varint,5,opt,name=consume" json:"consume,omitempty"`
	Entermin             *uint64 `protobuf:"varint,6,opt,name=entermin" json:"entermin,omitempty"`
	Duetime              *uint32 `protobuf:"varint,7,opt,name=duetime" json:"duetime,omitempty"`
	Feetype              *uint32 `protobuf:"varint,8,opt,name=feetype" json:"feetype,omitempty"`
	Feevalue             *int64  `protobuf:"varint,9,opt,name=feevalue" json:"feevalue,omitempty"`
	Hostname             []byte  `protobuf:"bytes,10,opt,name=hostname" json:"hostname,omitempty"`
	CardTime             *uint32 `protobuf:"varint,11,opt,name=card_time" json:"card_time,omitempty"`
	TableState           *uint32 `protobuf:"varint,12,opt,name=table_state" json:"table_state,omitempty"`
	Sitdown              *int64  `protobuf:"varint,13,opt,name=sitdown" json:"sitdown,omitempty"`
	ApplyBankerCondition *int64  `protobuf:"varint,14,opt,name=apply_banker_condition" json:"apply_banker_condition,omitempty"`
	ApplyBankerMaxscore  *int64  `protobuf:"varint,15,opt,name=apply_banker_maxscore" json:"apply_banker_maxscore,omitempty"`
	BankerMaxTime        *uint32 `protobuf:"varint,16,opt,name=banker_max_time" json:"banker_max_time,omitempty"`
	XXX_unrecognized     []byte  `json:"-"`
}

func (m *PaijiuTableInfo) Reset()                    { *m = PaijiuTableInfo{} }
func (m *PaijiuTableInfo) String() string            { return proto.CompactTextString(m) }
func (*PaijiuTableInfo) ProtoMessage()               {}
func (*PaijiuTableInfo) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{17} }

func (m *PaijiuTableInfo) GetTableid() uint32 {
	if m != nil && m.Tableid != nil {
		return *m.Tableid
	}
	return 0
}

func (m *PaijiuTableInfo) GetTablename() []byte {
	if m != nil {
		return m.Tablename
	}
	return nil
}

func (m *PaijiuTableInfo) GetIsPasswd() uint32 {
	if m != nil && m.IsPasswd != nil {
		return *m.IsPasswd
	}
	return 0
}

func (m *PaijiuTableInfo) GetBasescore() int64 {
	if m != nil && m.Basescore != nil {
		return *m.Basescore
	}
	return 0
}

func (m *PaijiuTableInfo) GetConsume() uint32 {
	if m != nil && m.Consume != nil {
		return *m.Consume
	}
	return 0
}

func (m *PaijiuTableInfo) GetEntermin() uint64 {
	if m != nil && m.Entermin != nil {
		return *m.Entermin
	}
	return 0
}

func (m *PaijiuTableInfo) GetDuetime() uint32 {
	if m != nil && m.Duetime != nil {
		return *m.Duetime
	}
	return 0
}

func (m *PaijiuTableInfo) GetFeetype() uint32 {
	if m != nil && m.Feetype != nil {
		return *m.Feetype
	}
	return 0
}

func (m *PaijiuTableInfo) GetFeevalue() int64 {
	if m != nil && m.Feevalue != nil {
		return *m.Feevalue
	}
	return 0
}

func (m *PaijiuTableInfo) GetHostname() []byte {
	if m != nil {
		return m.Hostname
	}
	return nil
}

func (m *PaijiuTableInfo) GetCardTime() uint32 {
	if m != nil && m.CardTime != nil {
		return *m.CardTime
	}
	return 0
}

func (m *PaijiuTableInfo) GetTableState() uint32 {
	if m != nil && m.TableState != nil {
		return *m.TableState
	}
	return 0
}

func (m *PaijiuTableInfo) GetSitdown() int64 {
	if m != nil && m.Sitdown != nil {
		return *m.Sitdown
	}
	return 0
}

func (m *PaijiuTableInfo) GetApplyBankerCondition() int64 {
	if m != nil && m.ApplyBankerCondition != nil {
		return *m.ApplyBankerCondition
	}
	return 0
}

func (m *PaijiuTableInfo) GetApplyBankerMaxscore() int64 {
	if m != nil && m.ApplyBankerMaxscore != nil {
		return *m.ApplyBankerMaxscore
	}
	return 0
}

func (m *PaijiuTableInfo) GetBankerMaxTime() uint32 {
	if m != nil && m.BankerMaxTime != nil {
		return *m.BankerMaxTime
	}
	return 0
}

// 锄大地桌子信息
type BigtwoTableInfo struct {
	Tableid          *uint32 `protobuf:"varint,1,opt,name=tableid" json:"tableid,omitempty"`
	Tablename        []byte  `protobuf:"bytes,2,opt,name=tablename" json:"tablename,omitempty"`
	IsPasswd         *uint32 `protobuf:"varint,3,opt,name=is_passwd" json:"is_passwd,omitempty"`
	Deal             *uint32 `protobuf:"varint,4,opt,name=deal" json:"deal,omitempty"`
	Basescore        *int64  `protobuf:"varint,5,opt,name=basescore" json:"basescore,omitempty"`
	Consume          *uint32 `protobuf:"varint,6,opt,name=consume" json:"consume,omitempty"`
	Entermin         *uint64 `protobuf:"varint,7,opt,name=entermin" json:"entermin,omitempty"`
	Duetime          *uint32 `protobuf:"varint,8,opt,name=duetime" json:"duetime,omitempty"`
	Feetype          *uint32 `protobuf:"varint,9,opt,name=feetype" json:"feetype,omitempty"`
	Feevalue         *int64  `protobuf:"varint,10,opt,name=feevalue" json:"feevalue,omitempty"`
	Hostname         []byte  `protobuf:"bytes,11,opt,name=hostname" json:"hostname,omitempty"`
	ShowHandNum      *uint32 `protobuf:"varint,12,opt,name=show_hand_num" json:"show_hand_num,omitempty"`
	CardTime         *uint32 `protobuf:"varint,13,opt,name=card_time" json:"card_time,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BigtwoTableInfo) Reset()                    { *m = BigtwoTableInfo{} }
func (m *BigtwoTableInfo) String() string            { return proto.CompactTextString(m) }
func (*BigtwoTableInfo) ProtoMessage()               {}
func (*BigtwoTableInfo) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{18} }

func (m *BigtwoTableInfo) GetTableid() uint32 {
	if m != nil && m.Tableid != nil {
		return *m.Tableid
	}
	return 0
}

func (m *BigtwoTableInfo) GetTablename() []byte {
	if m != nil {
		return m.Tablename
	}
	return nil
}

func (m *BigtwoTableInfo) GetIsPasswd() uint32 {
	if m != nil && m.IsPasswd != nil {
		return *m.IsPasswd
	}
	return 0
}

func (m *BigtwoTableInfo) GetDeal() uint32 {
	if m != nil && m.Deal != nil {
		return *m.Deal
	}
	return 0
}

func (m *BigtwoTableInfo) GetBasescore() int64 {
	if m != nil && m.Basescore != nil {
		return *m.Basescore
	}
	return 0
}

func (m *BigtwoTableInfo) GetConsume() uint32 {
	if m != nil && m.Consume != nil {
		return *m.Consume
	}
	return 0
}

func (m *BigtwoTableInfo) GetEntermin() uint64 {
	if m != nil && m.Entermin != nil {
		return *m.Entermin
	}
	return 0
}

func (m *BigtwoTableInfo) GetDuetime() uint32 {
	if m != nil && m.Duetime != nil {
		return *m.Duetime
	}
	return 0
}

func (m *BigtwoTableInfo) GetFeetype() uint32 {
	if m != nil && m.Feetype != nil {
		return *m.Feetype
	}
	return 0
}

func (m *BigtwoTableInfo) GetFeevalue() int64 {
	if m != nil && m.Feevalue != nil {
		return *m.Feevalue
	}
	return 0
}

func (m *BigtwoTableInfo) GetHostname() []byte {
	if m != nil {
		return m.Hostname
	}
	return nil
}

func (m *BigtwoTableInfo) GetShowHandNum() uint32 {
	if m != nil && m.ShowHandNum != nil {
		return *m.ShowHandNum
	}
	return 0
}

func (m *BigtwoTableInfo) GetCardTime() uint32 {
	if m != nil && m.CardTime != nil {
		return *m.CardTime
	}
	return 0
}

// 十三水桌子信息
type ThirteenTableInfo struct {
	Tableid          *uint32 `protobuf:"varint,1,opt,name=tableid" json:"tableid,omitempty"`
	Tablename        []byte  `protobuf:"bytes,2,opt,name=tablename" json:"tablename,omitempty"`
	IsPasswd         *uint32 `protobuf:"varint,3,opt,name=is_passwd" json:"is_passwd,omitempty"`
	Basescore        *int64  `protobuf:"varint,4,opt,name=basescore" json:"basescore,omitempty"`
	Consume          *uint32 `protobuf:"varint,5,opt,name=consume" json:"consume,omitempty"`
	Entermin         *uint64 `protobuf:"varint,6,opt,name=entermin" json:"entermin,omitempty"`
	Duetime          *uint32 `protobuf:"varint,7,opt,name=duetime" json:"duetime,omitempty"`
	Feetype          *uint32 `protobuf:"varint,8,opt,name=feetype" json:"feetype,omitempty"`
	Feevalue         *int64  `protobuf:"varint,9,opt,name=feevalue" json:"feevalue,omitempty"`
	Hostname         []byte  `protobuf:"bytes,10,opt,name=hostname" json:"hostname,omitempty"`
	TableState       *uint32 `protobuf:"varint,11,opt,name=table_state" json:"table_state,omitempty"`
	SeatNum          *uint32 `protobuf:"varint,12,opt,name=seat_num" json:"seat_num,omitempty"`
	ShowCardTime     *uint32 `protobuf:"varint,13,opt,name=show_card_time" json:"show_card_time,omitempty"`
	DueRound         *uint32 `protobuf:"varint,14,opt,name=due_round" json:"due_round,omitempty"`
	Passwd           []byte  `protobuf:"bytes,15,opt,name=passwd" json:"passwd,omitempty"`
	PlayType         *uint32 `protobuf:"varint,16,opt,name=play_type" json:"play_type,omitempty"`
	PlayParam1       *int32  `protobuf:"varint,17,opt,name=play_param1" json:"play_param1,omitempty"`
	PlayParam2       *int32  `protobuf:"varint,18,opt,name=play_param2" json:"play_param2,omitempty"`
	PlayParam3       *int32  `protobuf:"varint,19,opt,name=play_param3" json:"play_param3,omitempty"`
	Hostid           *uint32 `protobuf:"varint,20,opt,name=hostid" json:"hostid,omitempty"`
	IsAgent          *uint32 `protobuf:"varint,21,opt,name=is_agent" json:"is_agent,omitempty"`
	IsStart          *uint32 `protobuf:"varint,22,opt,name=is_start" json:"is_start,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ThirteenTableInfo) Reset()                    { *m = ThirteenTableInfo{} }
func (m *ThirteenTableInfo) String() string            { return proto.CompactTextString(m) }
func (*ThirteenTableInfo) ProtoMessage()               {}
func (*ThirteenTableInfo) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{19} }

func (m *ThirteenTableInfo) GetTableid() uint32 {
	if m != nil && m.Tableid != nil {
		return *m.Tableid
	}
	return 0
}

func (m *ThirteenTableInfo) GetTablename() []byte {
	if m != nil {
		return m.Tablename
	}
	return nil
}

func (m *ThirteenTableInfo) GetIsPasswd() uint32 {
	if m != nil && m.IsPasswd != nil {
		return *m.IsPasswd
	}
	return 0
}

func (m *ThirteenTableInfo) GetBasescore() int64 {
	if m != nil && m.Basescore != nil {
		return *m.Basescore
	}
	return 0
}

func (m *ThirteenTableInfo) GetConsume() uint32 {
	if m != nil && m.Consume != nil {
		return *m.Consume
	}
	return 0
}

func (m *ThirteenTableInfo) GetEntermin() uint64 {
	if m != nil && m.Entermin != nil {
		return *m.Entermin
	}
	return 0
}

func (m *ThirteenTableInfo) GetDuetime() uint32 {
	if m != nil && m.Duetime != nil {
		return *m.Duetime
	}
	return 0
}

func (m *ThirteenTableInfo) GetFeetype() uint32 {
	if m != nil && m.Feetype != nil {
		return *m.Feetype
	}
	return 0
}

func (m *ThirteenTableInfo) GetFeevalue() int64 {
	if m != nil && m.Feevalue != nil {
		return *m.Feevalue
	}
	return 0
}

func (m *ThirteenTableInfo) GetHostname() []byte {
	if m != nil {
		return m.Hostname
	}
	return nil
}

func (m *ThirteenTableInfo) GetTableState() uint32 {
	if m != nil && m.TableState != nil {
		return *m.TableState
	}
	return 0
}

func (m *ThirteenTableInfo) GetSeatNum() uint32 {
	if m != nil && m.SeatNum != nil {
		return *m.SeatNum
	}
	return 0
}

func (m *ThirteenTableInfo) GetShowCardTime() uint32 {
	if m != nil && m.ShowCardTime != nil {
		return *m.ShowCardTime
	}
	return 0
}

func (m *ThirteenTableInfo) GetDueRound() uint32 {
	if m != nil && m.DueRound != nil {
		return *m.DueRound
	}
	return 0
}

func (m *ThirteenTableInfo) GetPasswd() []byte {
	if m != nil {
		return m.Passwd
	}
	return nil
}

func (m *ThirteenTableInfo) GetPlayType() uint32 {
	if m != nil && m.PlayType != nil {
		return *m.PlayType
	}
	return 0
}

func (m *ThirteenTableInfo) GetPlayParam1() int32 {
	if m != nil && m.PlayParam1 != nil {
		return *m.PlayParam1
	}
	return 0
}

func (m *ThirteenTableInfo) GetPlayParam2() int32 {
	if m != nil && m.PlayParam2 != nil {
		return *m.PlayParam2
	}
	return 0
}

func (m *ThirteenTableInfo) GetPlayParam3() int32 {
	if m != nil && m.PlayParam3 != nil {
		return *m.PlayParam3
	}
	return 0
}

func (m *ThirteenTableInfo) GetHostid() uint32 {
	if m != nil && m.Hostid != nil {
		return *m.Hostid
	}
	return 0
}

func (m *ThirteenTableInfo) GetIsAgent() uint32 {
	if m != nil && m.IsAgent != nil {
		return *m.IsAgent
	}
	return 0
}

func (m *ThirteenTableInfo) GetIsStart() uint32 {
	if m != nil && m.IsStart != nil {
		return *m.IsStart
	}
	return 0
}

// 桌子信息
type TableFaceInfo struct {
	Land             *LandTableInfo     `protobuf:"bytes,1,opt,name=land" json:"land,omitempty"`
	Showhand         *ShowhandTableInfo `protobuf:"bytes,2,opt,name=showhand" json:"showhand,omitempty"`
	Bainiu           *BainiuTableInfo   `protobuf:"bytes,3,opt,name=bainiu" json:"bainiu,omitempty"`
	Texas            *TexasTableInfo    `protobuf:"bytes,4,opt,name=texas" json:"texas,omitempty"`
	Zajinhua         *ZajinhuaTableInfo `protobuf:"bytes,5,opt,name=zajinhua" json:"zajinhua,omitempty"`
	Niuniu           *NiuniuTableInfo   `protobuf:"bytes,6,opt,name=niuniu" json:"niuniu,omitempty"`
	Baccarat         *BaccaratTableInfo `protobuf:"bytes,7,opt,name=baccarat" json:"baccarat,omitempty"`
	Sangong          *SangongTableInfo  `protobuf:"bytes,8,opt,name=sangong" json:"sangong,omitempty"`
	Paijiu           *PaijiuTableInfo   `protobuf:"bytes,9,opt,name=paijiu" json:"paijiu,omitempty"`
	Bigtwo           *BigtwoTableInfo   `protobuf:"bytes,10,opt,name=bigtwo" json:"bigtwo,omitempty"`
	Thirteen         *ThirteenTableInfo `protobuf:"bytes,11,opt,name=thirteen" json:"thirteen,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *TableFaceInfo) Reset()                    { *m = TableFaceInfo{} }
func (m *TableFaceInfo) String() string            { return proto.CompactTextString(m) }
func (*TableFaceInfo) ProtoMessage()               {}
func (*TableFaceInfo) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{20} }

func (m *TableFaceInfo) GetLand() *LandTableInfo {
	if m != nil {
		return m.Land
	}
	return nil
}

func (m *TableFaceInfo) GetShowhand() *ShowhandTableInfo {
	if m != nil {
		return m.Showhand
	}
	return nil
}

func (m *TableFaceInfo) GetBainiu() *BainiuTableInfo {
	if m != nil {
		return m.Bainiu
	}
	return nil
}

func (m *TableFaceInfo) GetTexas() *TexasTableInfo {
	if m != nil {
		return m.Texas
	}
	return nil
}

func (m *TableFaceInfo) GetZajinhua() *ZajinhuaTableInfo {
	if m != nil {
		return m.Zajinhua
	}
	return nil
}

func (m *TableFaceInfo) GetNiuniu() *NiuniuTableInfo {
	if m != nil {
		return m.Niuniu
	}
	return nil
}

func (m *TableFaceInfo) GetBaccarat() *BaccaratTableInfo {
	if m != nil {
		return m.Baccarat
	}
	return nil
}

func (m *TableFaceInfo) GetSangong() *SangongTableInfo {
	if m != nil {
		return m.Sangong
	}
	return nil
}

func (m *TableFaceInfo) GetPaijiu() *PaijiuTableInfo {
	if m != nil {
		return m.Paijiu
	}
	return nil
}

func (m *TableFaceInfo) GetBigtwo() *BigtwoTableInfo {
	if m != nil {
		return m.Bigtwo
	}
	return nil
}

func (m *TableFaceInfo) GetThirteen() *ThirteenTableInfo {
	if m != nil {
		return m.Thirteen
	}
	return nil
}

// 任务数据
type MissionData struct {
	Msid             *uint32 `protobuf:"varint,1,opt,name=msid" json:"msid,omitempty"`
	Rtimes           *uint32 `protobuf:"varint,2,opt,name=rtimes" json:"rtimes,omitempty"`
	Ctimes           *uint32 `protobuf:"varint,3,opt,name=ctimes" json:"ctimes,omitempty"`
	Cptime           *uint32 `protobuf:"varint,4,opt,name=cptime" json:"cptime,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MissionData) Reset()                    { *m = MissionData{} }
func (m *MissionData) String() string            { return proto.CompactTextString(m) }
func (*MissionData) ProtoMessage()               {}
func (*MissionData) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{21} }

func (m *MissionData) GetMsid() uint32 {
	if m != nil && m.Msid != nil {
		return *m.Msid
	}
	return 0
}

func (m *MissionData) GetRtimes() uint32 {
	if m != nil && m.Rtimes != nil {
		return *m.Rtimes
	}
	return 0
}

func (m *MissionData) GetCtimes() uint32 {
	if m != nil && m.Ctimes != nil {
		return *m.Ctimes
	}
	return 0
}

func (m *MissionData) GetCptime() uint32 {
	if m != nil && m.Cptime != nil {
		return *m.Cptime
	}
	return 0
}

// 物品
type Item struct {
	ItemId           *uint32 `protobuf:"varint,1,opt,name=item_id" json:"item_id,omitempty"`
	ItemNum          *uint32 `protobuf:"varint,2,opt,name=item_num" json:"item_num,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Item) Reset()                    { *m = Item{} }
func (m *Item) String() string            { return proto.CompactTextString(m) }
func (*Item) ProtoMessage()               {}
func (*Item) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{22} }

func (m *Item) GetItemId() uint32 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *Item) GetItemNum() uint32 {
	if m != nil && m.ItemNum != nil {
		return *m.ItemNum
	}
	return 0
}

// 背包
type ItemBag struct {
	Items            []*Item `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ItemBag) Reset()                    { *m = ItemBag{} }
func (m *ItemBag) String() string            { return proto.CompactTextString(m) }
func (*ItemBag) ProtoMessage()               {}
func (*ItemBag) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{23} }

func (m *ItemBag) GetItems() []*Item {
	if m != nil {
		return m.Items
	}
	return nil
}

type MsgCards struct {
	Cards            []int32 `protobuf:"varint,1,rep,name=cards" json:"cards,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgCards) Reset()                    { *m = MsgCards{} }
func (m *MsgCards) String() string            { return proto.CompactTextString(m) }
func (*MsgCards) ProtoMessage()               {}
func (*MsgCards) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{24} }

func (m *MsgCards) GetCards() []int32 {
	if m != nil {
		return m.Cards
	}
	return nil
}

// 整型数组
type MsgShuzu struct {
	Num              []int32 `protobuf:"varint,1,rep,name=num" json:"num,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgShuzu) Reset()                    { *m = MsgShuzu{} }
func (m *MsgShuzu) String() string            { return proto.CompactTextString(m) }
func (*MsgShuzu) ProtoMessage()               {}
func (*MsgShuzu) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{25} }

func (m *MsgShuzu) GetNum() []int32 {
	if m != nil {
		return m.Num
	}
	return nil
}

// ! 私人房玩法kv结构
type PrivateKvParam struct {
	ParamKey         *uint32 `protobuf:"varint,1,opt,name=param_key" json:"param_key,omitempty"`
	ParamVal         *uint32 `protobuf:"varint,2,opt,name=param_val" json:"param_val,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PrivateKvParam) Reset()                    { *m = PrivateKvParam{} }
func (m *PrivateKvParam) String() string            { return proto.CompactTextString(m) }
func (*PrivateKvParam) ProtoMessage()               {}
func (*PrivateKvParam) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{26} }

func (m *PrivateKvParam) GetParamKey() uint32 {
	if m != nil && m.ParamKey != nil {
		return *m.ParamKey
	}
	return 0
}

func (m *PrivateKvParam) GetParamVal() uint32 {
	if m != nil && m.ParamVal != nil {
		return *m.ParamVal
	}
	return 0
}

type PlayerGameInfo struct {
	Uid              *uint32 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	Score            *int64  `protobuf:"varint,2,opt,name=score" json:"score,omitempty"`
	Name             []byte  `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Win              *uint32 `protobuf:"varint,4,opt,name=win" json:"win,omitempty"`
	Lose             *uint32 `protobuf:"varint,5,opt,name=lose" json:"lose,omitempty"`
	Draw             *uint32 `protobuf:"varint,6,opt,name=draw" json:"draw,omitempty"`
	MaxWin           *int64  `protobuf:"varint,7,opt,name=max_win" json:"max_win,omitempty"`
	MaxLose          *int64  `protobuf:"varint,8,opt,name=max_lose" json:"max_lose,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PlayerGameInfo) Reset()                    { *m = PlayerGameInfo{} }
func (m *PlayerGameInfo) String() string            { return proto.CompactTextString(m) }
func (*PlayerGameInfo) ProtoMessage()               {}
func (*PlayerGameInfo) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{27} }

func (m *PlayerGameInfo) GetUid() uint32 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *PlayerGameInfo) GetScore() int64 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *PlayerGameInfo) GetName() []byte {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *PlayerGameInfo) GetWin() uint32 {
	if m != nil && m.Win != nil {
		return *m.Win
	}
	return 0
}

func (m *PlayerGameInfo) GetLose() uint32 {
	if m != nil && m.Lose != nil {
		return *m.Lose
	}
	return 0
}

func (m *PlayerGameInfo) GetDraw() uint32 {
	if m != nil && m.Draw != nil {
		return *m.Draw
	}
	return 0
}

func (m *PlayerGameInfo) GetMaxWin() int64 {
	if m != nil && m.MaxWin != nil {
		return *m.MaxWin
	}
	return 0
}

func (m *PlayerGameInfo) GetMaxLose() int64 {
	if m != nil && m.MaxLose != nil {
		return *m.MaxLose
	}
	return 0
}

// 私人房结束结果
type PrivateGameInfo struct {
	Tableid          *uint32           `protobuf:"varint,1,opt,name=tableid" json:"tableid,omitempty"`
	Hostname         []byte            `protobuf:"bytes,2,opt,name=hostname" json:"hostname,omitempty"`
	DueRound         *uint32           `protobuf:"varint,3,opt,name=due_round" json:"due_round,omitempty"`
	Basescore        *int64            `protobuf:"varint,4,opt,name=basescore" json:"basescore,omitempty"`
	Deal             *uint32           `protobuf:"varint,5,opt,name=deal" json:"deal,omitempty"`
	GameType         *uint32           `protobuf:"varint,6,opt,name=game_type" json:"game_type,omitempty"`
	SeatNum          *uint32           `protobuf:"varint,7,opt,name=seat_num" json:"seat_num,omitempty"`
	CreateTime       *uint32           `protobuf:"varint,8,opt,name=create_time" json:"create_time,omitempty"`
	UserInfo         []*PlayerGameInfo `protobuf:"bytes,9,rep,name=user_info" json:"user_info,omitempty"`
	Passwd           []byte            `protobuf:"bytes,10,opt,name=passwd" json:"passwd,omitempty"`
	Hostid           *uint32           `protobuf:"varint,11,opt,name=hostid" json:"hostid,omitempty"`
	Params           []*PrivateKvParam `protobuf:"bytes,12,rep,name=params" json:"params,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *PrivateGameInfo) Reset()                    { *m = PrivateGameInfo{} }
func (m *PrivateGameInfo) String() string            { return proto.CompactTextString(m) }
func (*PrivateGameInfo) ProtoMessage()               {}
func (*PrivateGameInfo) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{28} }

func (m *PrivateGameInfo) GetTableid() uint32 {
	if m != nil && m.Tableid != nil {
		return *m.Tableid
	}
	return 0
}

func (m *PrivateGameInfo) GetHostname() []byte {
	if m != nil {
		return m.Hostname
	}
	return nil
}

func (m *PrivateGameInfo) GetDueRound() uint32 {
	if m != nil && m.DueRound != nil {
		return *m.DueRound
	}
	return 0
}

func (m *PrivateGameInfo) GetBasescore() int64 {
	if m != nil && m.Basescore != nil {
		return *m.Basescore
	}
	return 0
}

func (m *PrivateGameInfo) GetDeal() uint32 {
	if m != nil && m.Deal != nil {
		return *m.Deal
	}
	return 0
}

func (m *PrivateGameInfo) GetGameType() uint32 {
	if m != nil && m.GameType != nil {
		return *m.GameType
	}
	return 0
}

func (m *PrivateGameInfo) GetSeatNum() uint32 {
	if m != nil && m.SeatNum != nil {
		return *m.SeatNum
	}
	return 0
}

func (m *PrivateGameInfo) GetCreateTime() uint32 {
	if m != nil && m.CreateTime != nil {
		return *m.CreateTime
	}
	return 0
}

func (m *PrivateGameInfo) GetUserInfo() []*PlayerGameInfo {
	if m != nil {
		return m.UserInfo
	}
	return nil
}

func (m *PrivateGameInfo) GetPasswd() []byte {
	if m != nil {
		return m.Passwd
	}
	return nil
}

func (m *PrivateGameInfo) GetHostid() uint32 {
	if m != nil && m.Hostid != nil {
		return *m.Hostid
	}
	return 0
}

func (m *PrivateGameInfo) GetParams() []*PrivateKvParam {
	if m != nil {
		return m.Params
	}
	return nil
}

// !私人房简要信息
type PrivateTableInfo struct {
	GameType         *uint32           `protobuf:"varint,1,opt,name=game_type" json:"game_type,omitempty"`
	Passwd           []byte            `protobuf:"bytes,2,opt,name=passwd" json:"passwd,omitempty"`
	CreateTime       *uint32           `protobuf:"varint,3,opt,name=create_time" json:"create_time,omitempty"`
	TotalRound       *uint32           `protobuf:"varint,4,opt,name=total_round" json:"total_round,omitempty"`
	CurRound         *uint32           `protobuf:"varint,5,opt,name=cur_round" json:"cur_round,omitempty"`
	BaseScore        *int64            `protobuf:"varint,6,opt,name=base_score" json:"base_score,omitempty"`
	Params           []*PrivateKvParam `protobuf:"bytes,7,rep,name=params" json:"params,omitempty"`
	IsAa             *int32            `protobuf:"varint,8,opt,name=is_aa" json:"is_aa,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *PrivateTableInfo) Reset()                    { *m = PrivateTableInfo{} }
func (m *PrivateTableInfo) String() string            { return proto.CompactTextString(m) }
func (*PrivateTableInfo) ProtoMessage()               {}
func (*PrivateTableInfo) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{29} }

func (m *PrivateTableInfo) GetGameType() uint32 {
	if m != nil && m.GameType != nil {
		return *m.GameType
	}
	return 0
}

func (m *PrivateTableInfo) GetPasswd() []byte {
	if m != nil {
		return m.Passwd
	}
	return nil
}

func (m *PrivateTableInfo) GetCreateTime() uint32 {
	if m != nil && m.CreateTime != nil {
		return *m.CreateTime
	}
	return 0
}

func (m *PrivateTableInfo) GetTotalRound() uint32 {
	if m != nil && m.TotalRound != nil {
		return *m.TotalRound
	}
	return 0
}

func (m *PrivateTableInfo) GetCurRound() uint32 {
	if m != nil && m.CurRound != nil {
		return *m.CurRound
	}
	return 0
}

func (m *PrivateTableInfo) GetBaseScore() int64 {
	if m != nil && m.BaseScore != nil {
		return *m.BaseScore
	}
	return 0
}

func (m *PrivateTableInfo) GetParams() []*PrivateKvParam {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *PrivateTableInfo) GetIsAa() int32 {
	if m != nil && m.IsAa != nil {
		return *m.IsAa
	}
	return 0
}

func init() {
	proto.RegisterType((*BaseInfo)(nil), "net.base_info")
	proto.RegisterType((*LandInfo)(nil), "net.land_info")
	proto.RegisterType((*GameDataInfo)(nil), "net.game_data_info")
	proto.RegisterType((*SvrInfo)(nil), "net.svr_info")
	proto.RegisterType((*RoomInfo)(nil), "net.room_info")
	proto.RegisterType((*SeatInfo)(nil), "net.seat_info")
	proto.RegisterType((*SeatValueInfo)(nil), "net.seat_value_info")
	proto.RegisterType((*SeatFace)(nil), "net.seat_face")
	proto.RegisterType((*LookerInfo)(nil), "net.looker_info")
	proto.RegisterType((*LandTableInfo)(nil), "net.land_table_info")
	proto.RegisterType((*ShowhandTableInfo)(nil), "net.showhand_table_info")
	proto.RegisterType((*BainiuTableInfo)(nil), "net.bainiu_table_info")
	proto.RegisterType((*TexasTableInfo)(nil), "net.texas_table_info")
	proto.RegisterType((*ZajinhuaTableInfo)(nil), "net.zajinhua_table_info")
	proto.RegisterType((*NiuniuTableInfo)(nil), "net.niuniu_table_info")
	proto.RegisterType((*BaccaratTableInfo)(nil), "net.baccarat_table_info")
	proto.RegisterType((*SangongTableInfo)(nil), "net.sangong_table_info")
	proto.RegisterType((*PaijiuTableInfo)(nil), "net.paijiu_table_info")
	proto.RegisterType((*BigtwoTableInfo)(nil), "net.bigtwo_table_info")
	proto.RegisterType((*ThirteenTableInfo)(nil), "net.thirteen_table_info")
	proto.RegisterType((*TableFaceInfo)(nil), "net.table_face_info")
	proto.RegisterType((*MissionData)(nil), "net.mission_data")
	proto.RegisterType((*Item)(nil), "net.item")
	proto.RegisterType((*ItemBag)(nil), "net.item_bag")
	proto.RegisterType((*MsgCards)(nil), "net.msg_cards")
	proto.RegisterType((*MsgShuzu)(nil), "net.msg_shuzu")
	proto.RegisterType((*PrivateKvParam)(nil), "net.private_kv_param")
	proto.RegisterType((*PlayerGameInfo)(nil), "net.player_game_info")
	proto.RegisterType((*PrivateGameInfo)(nil), "net.private_game_info")
	proto.RegisterType((*PrivateTableInfo)(nil), "net.private_table_info")
	proto.RegisterEnum("net.PRIVATE_PARAM_KEY", PRIVATE_PARAM_KEY_name, PRIVATE_PARAM_KEY_value)
}

func init() { proto.RegisterFile("base_msg_struct.proto", fileDescriptor11) }

var fileDescriptor11 = []byte{
	// 1927 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xec, 0x59, 0xcd, 0x8e, 0xe4, 0x48,
	0x11, 0x56, 0x95, 0xeb, 0x37, 0xea, 0xcf, 0xe5, 0xfe, 0x19, 0xef, 0xa0, 0x59, 0x1a, 0x6b, 0x19,
	0x35, 0x7d, 0x18, 0x89, 0xe6, 0xc2, 0xb5, 0x77, 0xa7, 0x61, 0x1a, 0xa6, 0x67, 0x86, 0xde, 0x9e,
	0x15, 0x0b, 0x07, 0x2b, 0xcb, 0xce, 0xae, 0xca, 0x6d, 0x3b, 0x5d, 0xd8, 0xe9, 0xae, 0xae, 0x7d,
	0x01, 0xb8, 0x02, 0xe2, 0x05, 0x38, 0x70, 0xe6, 0xc4, 0x91, 0x03, 0x4f, 0xc0, 0x05, 0x21, 0x1e,
	0x86, 0x15, 0xca, 0xc8, 0x4c, 0xbb, 0x5c, 0x2e, 0x16, 0x21, 0x8d, 0x90, 0x50, 0xcf, 0xa9, 0x3b,
	0x23, 0x9d, 0x91, 0x91, 0x5f, 0x44, 0x7c, 0x19, 0x19, 0x05, 0x07, 0x33, 0x92, 0x51, 0x3f, 0xce,
	0xe6, 0x7e, 0x26, 0xd2, 0x3c, 0x10, 0xcf, 0x96, 0x69, 0x22, 0x12, 0xc7, 0xe2, 0x54, 0x78, 0x7f,
	0x68, 0x42, 0x1f, 0xa7, 0x19, 0xbf, 0x49, 0x9c, 0x01, 0x58, 0x39, 0x0b, 0xdd, 0xc6, 0x51, 0xe3,
	0x78, 0xe4, 0x0c, 0xa1, 0xc5, 0x49, 0x4c, 0xdd, 0xe6, 0x51, 0xe3, 0x78, 0x28, 0xa7, 0x32, 0x7a,
	0xef, 0x5a, 0x38, 0x35, 0x81, 0x6e, 0xc8, 0x48, 0x9c, 0xf0, 0xd0, 0x6d, 0x1d, 0x35, 0x8e, 0x2d,
	0xf9, 0x6d, 0x90, 0x30, 0xee, 0xb6, 0x71, 0x34, 0x82, 0x76, 0x16, 0x24, 0x29, 0x75, 0x3b, 0x66,
	0xc8, 0xf8, 0x3c, 0x11, 0x6e, 0x17, 0x87, 0x63, 0xe8, 0x04, 0x77, 0x24, 0xca, 0xa9, 0xdb, 0xc3,
	0xf1, 0x14, 0xfa, 0x19, 0xb9, 0xa1, 0x3e, 0x2a, 0xe8, 0xa3, 0x68, 0x00, 0xd6, 0x1d, 0x5b, 0xba,
	0x80, 0x9b, 0xed, 0xc3, 0x50, 0xce, 0xcf, 0x92, 0xfb, 0x4c, 0x10, 0x41, 0xdd, 0x01, 0x4a, 0xa5,
	0x96, 0x28, 0x99, 0x33, 0xee, 0x0e, 0x71, 0x3c, 0x85, 0xfe, 0x8a, 0xd2, 0x5b, 0x25, 0x1a, 0x99,
	0x4f, 0x52, 0xba, 0x22, 0x69, 0xe8, 0x8e, 0x71, 0x6c, 0x43, 0x6f, 0x46, 0xf8, 0x6d, 0x9a, 0x2f,
	0x85, 0x3b, 0x31, 0x8b, 0x16, 0x94, 0x84, 0x3e, 0x0b, 0x12, 0xee, 0xda, 0x28, 0x3a, 0x84, 0x71,
	0x48, 0xd6, 0xfe, 0x9c, 0xc4, 0xd2, 0xa2, 0x9c, 0x0b, 0x77, 0x2a, 0xe5, 0xde, 0xef, 0x1b, 0xd0,
	0x8f, 0x08, 0x0f, 0x0b, 0xa0, 0x56, 0x8c, 0x97, 0x40, 0x45, 0x49, 0xa6, 0x80, 0x52, 0x23, 0xc2,
	0x43, 0x8d, 0xd4, 0x18, 0x3a, 0xd9, 0x32, 0x65, 0x7c, 0x8e, 0x40, 0xe1, 0x38, 0x26, 0xf7, 0xab,
	0x02, 0xaa, 0x21, 0xb4, 0x56, 0x8c, 0x07, 0x88, 0xd4, 0x48, 0x22, 0x25, 0x35, 0x05, 0x88, 0x94,
	0x1a, 0x12, 0x1e, 0x06, 0x08, 0x14, 0xa2, 0xae, 0xd6, 0x06, 0x1a, 0xa6, 0x09, 0x74, 0x95, 0xf2,
	0x40, 0x41, 0xe5, 0x7d, 0xd5, 0x80, 0x31, 0x5a, 0x1e, 0x12, 0x41, 0x94, 0xa5, 0x53, 0xe8, 0xa3,
	0x44, 0xac, 0x97, 0x54, 0xdb, 0xab, 0x8d, 0x6f, 0x56, 0x8c, 0xb7, 0xb6, 0xcc, 0x6b, 0x55, 0xcc,
	0x6b, 0x57, 0xcd, 0xeb, 0x6c, 0xdb, 0xd3, 0x35, 0xf6, 0xc4, 0xe4, 0x3e, 0x90, 0x88, 0xf7, 0x8e,
	0x2c, 0x85, 0xb8, 0x16, 0x48, 0x93, 0x2d, 0xb5, 0x41, 0x48, 0xd6, 0x72, 0x03, 0x30, 0x4b, 0xd4,
	0x38, 0x40, 0xbf, 0x5a, 0x05, 0x7c, 0xc3, 0x2d, 0xf8, 0x46, 0x55, 0x44, 0xc6, 0xc6, 0x02, 0x03,
	0x00, 0x3a, 0xd4, 0xfb, 0x09, 0xf4, 0xb2, 0xbb, 0x54, 0x9d, 0x5c, 0x46, 0xe1, 0x5d, 0x5a, 0x84,
	0xb3, 0x1c, 0x62, 0xfc, 0x34, 0x8d, 0xeb, 0x4b, 0x5c, 0x2c, 0x13, 0x68, 0x28, 0xca, 0xf2, 0x19,
	0x4a, 0xd1, 0x63, 0xde, 0x5f, 0x1b, 0xd0, 0x4f, 0x93, 0x24, 0x56, 0x4a, 0x01, 0x9a, 0x85, 0xc6,
	0x09, 0x74, 0x83, 0x84, 0x67, 0x79, 0xbc, 0xe1, 0xfa, 0x90, 0x92, 0x48, 0xab, 0x9b, 0x42, 0x9f,
	0x72, 0x41, 0x53, 0x3f, 0xd6, 0x70, 0xb6, 0x36, 0x44, 0xe4, 0x1e, 0x31, 0x6d, 0x39, 0x0e, 0xc0,
	0x32, 0x22, 0x6b, 0x9a, 0xfa, 0x3c, 0x8f, 0x35, 0xb0, 0x53, 0x95, 0x93, 0x2a, 0x87, 0xba, 0xc6,
	0xb6, 0x20, 0xa5, 0x44, 0x50, 0x5f, 0x90, 0x59, 0x44, 0x75, 0x44, 0xc8, 0xd4, 0x59, 0x24, 0x2b,
	0x75, 0x88, 0xbe, 0x09, 0x72, 0x14, 0x2d, 0x99, 0x0e, 0x0a, 0x15, 0xf6, 0x19, 0xf5, 0x67, 0x54,
	0xa8, 0xdc, 0xf1, 0x7e, 0xdb, 0x80, 0x7e, 0x46, 0x89, 0xf8, 0xef, 0x92, 0xde, 0xe4, 0x78, 0xab,
	0x9a, 0xe3, 0xed, 0xad, 0xa4, 0xee, 0x18, 0xbf, 0x06, 0x0b, 0xc2, 0x24, 0xfc, 0xdd, 0x7a, 0xaa,
	0xf5, 0x8c, 0x47, 0x66, 0xf9, 0xda, 0x24, 0xbd, 0xf7, 0x73, 0x98, 0xa0, 0x51, 0xa8, 0x66, 0xb7,
	0x69, 0xb8, 0x7f, 0x73, 0x7b, 0x03, 0xab, 0xaa, 0x6d, 0x97, 0x7d, 0xde, 0xe7, 0xfa, 0xc4, 0x37,
	0x24, 0xa0, 0x5f, 0x77, 0xe2, 0x8a, 0x99, 0x85, 0xe2, 0x94, 0x92, 0x70, 0xad, 0x33, 0x78, 0x63,
	0x63, 0xcc, 0x0a, 0x8f, 0xc2, 0x20, 0x4a, 0x92, 0x5b, 0x9a, 0xfe, 0x47, 0x38, 0x77, 0x28, 0xd7,
	0x08, 0xb7, 0x8a, 0x10, 0xdd, 0xc0, 0xd4, 0x1c, 0x18, 0x11, 0xf5, 0xfe, 0xd9, 0x84, 0x09, 0x12,
	0x10, 0x06, 0x80, 0xda, 0x6b, 0x02, 0x5d, 0x1c, 0x15, 0xfb, 0x4d, 0xa1, 0x8f, 0x82, 0xea, 0xa6,
	0x2c, 0xf3, 0x97, 0x24, 0xcb, 0x56, 0x61, 0xe9, 0x49, 0x8c, 0xd3, 0x56, 0x3d, 0xda, 0xda, 0x05,
	0xb8, 0x3a, 0xb2, 0x3b, 0x26, 0x86, 0x30, 0x70, 0x65, 0x28, 0x77, 0x31, 0x6e, 0x65, 0xe2, 0xe6,
	0x54, 0xb0, 0x98, 0x96, 0xec, 0x74, 0x43, 0x69, 0x35, 0x12, 0x6f, 0x28, 0x55, 0x41, 0xa1, 0x92,
	0xdd, 0x86, 0xde, 0x22, 0xc9, 0x04, 0x1a, 0x37, 0x40, 0xe3, 0x0e, 0x60, 0x84, 0xd1, 0xba, 0x90,
	0x07, 0x93, 0x09, 0x50, 0x90, 0x79, 0x40, 0xa2, 0xc8, 0x47, 0xf5, 0xa3, 0x52, 0x94, 0x86, 0x4a,
	0x34, 0xae, 0x05, 0xf6, 0xc4, 0xd0, 0x85, 0x3e, 0xa8, 0x8d, 0xea, 0xf7, 0x60, 0x20, 0x12, 0x41,
	0x22, 0x3f, 0x4d, 0x72, 0x1e, 0x22, 0x93, 0xab, 0xeb, 0x28, 0xf3, 0x09, 0x71, 0x9d, 0xa3, 0xc6,
	0x71, 0xdb, 0x18, 0xe5, 0x4b, 0xa7, 0xed, 0xa1, 0x64, 0x1f, 0x86, 0xb3, 0x24, 0x9e, 0xc9, 0x24,
	0x45, 0x9b, 0xf6, 0xa5, 0xd4, 0xfb, 0x75, 0x13, 0xf6, 0xa4, 0xad, 0x8b, 0x77, 0xe3, 0x83, 0x0a,
	0xea, 0xad, 0x6d, 0xd4, 0xdb, 0x35, 0xd4, 0x3b, 0xdb, 0xa8, 0x77, 0xb7, 0x51, 0xef, 0xd5, 0x50,
	0xef, 0xd7, 0x50, 0x07, 0x63, 0x4e, 0x89, 0xa5, 0xba, 0x4e, 0x25, 0x52, 0x78, 0x26, 0xc5, 0x91,
	0xca, 0x0d, 0xdf, 0x84, 0xae, 0xe2, 0xa6, 0xcc, 0x1d, 0x1d, 0x59, 0xc7, 0x83, 0xd3, 0xf1, 0x33,
	0x4e, 0xc5, 0xb3, 0x22, 0x91, 0xbc, 0xbf, 0x37, 0x61, 0x3a, 0x23, 0x8c, 0xb3, 0xfc, 0x81, 0x20,
	0x22, 0x2f, 0x1c, 0x26, 0xc2, 0x64, 0xa5, 0x6a, 0x0c, 0xcb, 0xf9, 0x10, 0x0e, 0xc9, 0x72, 0x19,
	0xad, 0x7d, 0x59, 0x59, 0xd0, 0xd4, 0x0f, 0x12, 0x1e, 0x32, 0xc1, 0x12, 0x8e, 0x31, 0x6a, 0x39,
	0x4f, 0xe0, 0xa0, 0x32, 0x1f, 0x93, 0x7b, 0x75, 0xc0, 0x09, 0x4e, 0x3f, 0x82, 0x49, 0x39, 0xa1,
	0x76, 0xc7, 0x32, 0xc4, 0xfb, 0x4d, 0x13, 0x6c, 0x41, 0xef, 0x49, 0xf6, 0x50, 0x81, 0xad, 0xde,
	0x8b, 0x98, 0xf0, 0xde, 0x9f, 0x2c, 0xd8, 0xfb, 0x92, 0x7c, 0xc1, 0xf8, 0x22, 0x27, 0x0f, 0x04,
	0x97, 0x03, 0x18, 0x05, 0x49, 0xbc, 0x24, 0x29, 0xd5, 0x1c, 0xa6, 0xd8, 0xd0, 0x01, 0x90, 0x77,
	0x8e, 0x96, 0x8d, 0xcd, 0xfa, 0x88, 0xc5, 0x4c, 0x68, 0xe1, 0xc4, 0x08, 0x63, 0xc6, 0xe7, 0x7e,
	0x9c, 0x47, 0x82, 0x2d, 0x5d, 0x1b, 0x8b, 0x30, 0x49, 0x70, 0x11, 0xe3, 0xa1, 0x91, 0x4e, 0x51,
	0x2a, 0x75, 0xe2, 0x7a, 0x3c, 0x8a, 0x63, 0x20, 0x52, 0x32, 0xc9, 0xb1, 0x7b, 0xe6, 0xa6, 0xd7,
	0x28, 0xee, 0xef, 0xe2, 0xd8, 0x83, 0x2a, 0xc7, 0x1e, 0x22, 0x77, 0xfe, 0xd1, 0x82, 0x29, 0x67,
	0xf9, 0xff, 0x3f, 0x4f, 0x6c, 0xf9, 0x68, 0x50, 0x94, 0x5c, 0x92, 0x12, 0xcb, 0xfb, 0xcb, 0x01,
	0x08, 0x08, 0xd7, 0x39, 0xaf, 0x5d, 0xf6, 0x01, 0x4c, 0x2b, 0x4c, 0xb0, 0x71, 0x91, 0x55, 0x82,
	0x61, 0x62, 0x9e, 0x21, 0x78, 0x31, 0x96, 0x72, 0x7b, 0xeb, 0x86, 0x9b, 0xee, 0x42, 0xdf, 0x41,
	0xbb, 0x5d, 0xb0, 0x67, 0xb4, 0x60, 0x1c, 0x2a, 0x16, 0x49, 0xa8, 0x9d, 0x27, 0x8d, 0x08, 0x43,
	0x5f, 0x42, 0xa7, 0x9d, 0x1f, 0x51, 0xf4, 0xe3, 0x86, 0xcb, 0x0e, 0xd0, 0x65, 0xff, 0x68, 0xc2,
	0xde, 0x8c, 0x04, 0x01, 0x49, 0x89, 0x78, 0x4f, 0xee, 0xef, 0x96, 0xdc, 0xff, 0x62, 0x81, 0x93,
	0x11, 0x3e, 0x4f, 0xf8, 0xfc, 0x7d, 0x3e, 0xfc, 0x0f, 0xf2, 0xa1, 0x08, 0x6d, 0x55, 0xdf, 0xed,
	0x4a, 0x8f, 0x7d, 0x73, 0xc0, 0x22, 0x2b, 0x0e, 0x4c, 0x2a, 0xfd, 0x22, 0x97, 0xfc, 0x27, 0xbf,
	0x16, 0x6a, 0xe7, 0x43, 0xac, 0xc7, 0x65, 0xed, 0xb3, 0x24, 0xec, 0x8b, 0xf7, 0xb5, 0xcf, 0xbb,
	0x4e, 0x8f, 0xaf, 0x1a, 0x30, 0x9d, 0xb1, 0xb9, 0x58, 0x25, 0x0f, 0xe6, 0xad, 0x63, 0xe0, 0xc7,
	0xd4, 0x90, 0xd7, 0xe5, 0x9e, 0x58, 0xb0, 0x54, 0x50, 0xca, 0x1f, 0x06, 0x41, 0xd4, 0xd3, 0xbb,
	0x78, 0xf5, 0x85, 0x39, 0xad, 0x94, 0x39, 0x65, 0xc6, 0x4f, 0xcc, 0x81, 0x65, 0xa1, 0xa8, 0xaa,
	0x16, 0xdb, 0x84, 0x2f, 0x8a, 0x96, 0x24, 0x25, 0xf1, 0x77, 0x91, 0x19, 0xda, 0x55, 0xe1, 0xa9,
	0x7e, 0xfc, 0x55, 0x84, 0xdf, 0xd3, 0xfc, 0x30, 0x86, 0x8e, 0x3c, 0x05, 0x53, 0xac, 0x80, 0xe6,
	0x4a, 0xfa, 0x98, 0x53, 0x2e, 0x90, 0x15, 0x8c, 0x24, 0x13, 0x24, 0x15, 0xc8, 0x06, 0x23, 0xef,
	0x6f, 0x16, 0x4c, 0xd4, 0x41, 0xe5, 0xc3, 0x48, 0xb9, 0xcb, 0xd3, 0xad, 0x2c, 0xe9, 0xab, 0xc1,
	0xe9, 0x3e, 0xbe, 0x9d, 0xb6, 0x5f, 0xf0, 0x27, 0xaa, 0x5d, 0x23, 0x63, 0x02, 0x1d, 0x38, 0x38,
	0x75, 0xd5, 0x1b, 0x6b, 0xc7, 0x4b, 0xf3, 0x29, 0x74, 0xd4, 0x63, 0x0b, 0xfd, 0x3a, 0x38, 0x3d,
	0xc4, 0x2f, 0xeb, 0xef, 0xaf, 0x8f, 0xa0, 0x8d, 0x4f, 0x07, 0xf4, 0xf5, 0xe0, 0xf4, 0x00, 0x3f,
	0xab, 0x3d, 0x26, 0x4e, 0xa0, 0x67, 0x6a, 0x69, 0x8c, 0x01, 0xb3, 0xf3, 0xae, 0x02, 0xfb, 0x29,
	0x74, 0x54, 0xf9, 0x86, 0xb1, 0x61, 0x76, 0xae, 0x57, 0x74, 0x27, 0xf2, 0x45, 0xae, 0x6a, 0x06,
	0x0c, 0x1a, 0xa3, 0x73, 0x57, 0x21, 0x71, 0x0c, 0x5d, 0x7d, 0x07, 0x62, 0x38, 0x0d, 0x4e, 0x1f,
	0xa9, 0x83, 0xd7, 0xef, 0xc5, 0xa7, 0xd2, 0xe3, 0x92, 0x68, 0x31, 0xca, 0xcc, 0xee, 0x75, 0xee,
	0x95, 0xf8, 0x20, 0x6d, 0x60, 0xec, 0x15, 0xf8, 0xd4, 0x98, 0xe4, 0x04, 0x7a, 0x26, 0xbb, 0x30,
	0x20, 0x8d, 0x95, 0x3b, 0x52, 0xce, 0x7b, 0x09, 0xc3, 0x98, 0x65, 0x19, 0x4b, 0x38, 0xf6, 0x54,
	0x25, 0x9d, 0xc4, 0x59, 0x91, 0x7f, 0x63, 0xe8, 0xa4, 0x32, 0x5a, 0x33, 0xdd, 0x00, 0x1c, 0x43,
	0x27, 0x50, 0xe3, 0xa2, 0x9d, 0x1a, 0x2c, 0x31, 0x9c, 0x55, 0x2f, 0xf1, 0x3b, 0xd0, 0x62, 0x82,
	0xc6, 0x32, 0x95, 0xe4, 0x5f, 0xbf, 0x50, 0x24, 0x03, 0x4a, 0x0a, 0x64, 0x46, 0xa0, 0x2a, 0xef,
	0x23, 0x2d, 0x99, 0x91, 0xb9, 0xe3, 0x42, 0x5b, 0xfe, 0x9f, 0xb9, 0x0d, 0x7c, 0x85, 0xf7, 0xd1,
	0x5a, 0x29, 0xf1, 0x1e, 0x43, 0x3f, 0xce, 0xe6, 0x98, 0x36, 0x99, 0xbc, 0xe6, 0xf0, 0x1f, 0xfc,
	0xac, 0xed, 0xb9, 0x6a, 0x2e, 0x5b, 0xe4, 0x5f, 0xe6, 0xce, 0x00, 0x2c, 0xa9, 0x5b, 0xcd, 0x7c,
	0x1f, 0xec, 0x65, 0xca, 0xee, 0x88, 0xa0, 0xfe, 0xed, 0x9d, 0x8a, 0x7d, 0x4c, 0x23, 0xf9, 0x8f,
	0x7f, 0x4b, 0xd7, 0x25, 0xbb, 0x28, 0xd1, 0x1d, 0x89, 0xb4, 0x55, 0xbf, 0x6a, 0x80, 0xad, 0x9f,
	0x65, 0xd8, 0x2a, 0xad, 0x77, 0xbc, 0x8a, 0x1e, 0x56, 0xd3, 0xf4, 0xb0, 0x90, 0x0d, 0x2c, 0xd3,
	0x4f, 0x34, 0xbd, 0xe5, 0xb2, 0xf3, 0xdc, 0x2e, 0x78, 0x3a, 0x25, 0xab, 0x4a, 0x6b, 0xd9, 0x5f,
	0x69, 0x0a, 0xb6, 0x74, 0x27, 0xd9, 0xc7, 0x05, 0xf8, 0xb3, 0x81, 0xf7, 0x3b, 0x79, 0xff, 0xea,
	0x53, 0x94, 0xb6, 0xd4, 0x28, 0x72, 0x93, 0x92, 0x0a, 0x86, 0x2c, 0x39, 0xe5, 0xdf, 0x32, 0xa4,
	0xb9, 0x37, 0xda, 0xf5, 0x6e, 0x71, 0xa7, 0x46, 0x62, 0x5d, 0x43, 0x3b, 0xa6, 0x47, 0x5b, 0x5e,
	0x15, 0xc7, 0xd0, 0xcf, 0x33, 0xdd, 0x1b, 0xc4, 0x1e, 0xb8, 0x49, 0xc8, 0x1a, 0x8c, 0x25, 0xb1,
	0x29, 0xea, 0x2c, 0x69, 0x48, 0xb1, 0xe6, 0xb7, 0xe5, 0x7c, 0x4a, 0xe2, 0xcc, 0x1d, 0x6e, 0xaa,
	0xd9, 0x72, 0xa4, 0xf7, 0xe7, 0x06, 0x38, 0x46, 0xb8, 0x11, 0xf4, 0x3b, 0x7e, 0x07, 0x28, 0x37,
	0x6c, 0x1a, 0xae, 0xde, 0xb4, 0xdf, 0x2a, 0x4a, 0x81, 0x8d, 0x82, 0xaa, 0xb8, 0x46, 0x83, 0x3c,
	0xd5, 0xa2, 0xb6, 0x29, 0xf1, 0xb0, 0x19, 0xb7, 0xf9, 0xc3, 0x4f, 0x69, 0x71, 0xf7, 0x6b, 0x2c,
	0x2e, 0xcb, 0x33, 0x89, 0x58, 0xfb, 0xe4, 0x97, 0x4d, 0x98, 0xbe, 0xb9, 0xba, 0xf8, 0xec, 0xec,
	0xfa, 0xdc, 0x7f, 0x73, 0x76, 0x75, 0x76, 0xe9, 0xff, 0xf8, 0xfc, 0x73, 0xe7, 0x09, 0x7c, 0x50,
	0x15, 0x5e, 0xbd, 0x7e, 0xfb, 0xea, 0xb9, 0xff, 0xf2, 0xe2, 0xf2, 0xe2, 0xda, 0x6e, 0x38, 0xdf,
	0x80, 0x47, 0xd5, 0xe9, 0x8f, 0xcf, 0xaf, 0xf5, 0x64, 0xb3, 0x3e, 0x79, 0x79, 0xfe, 0x4a, 0xad,
	0xb7, 0xad, 0xba, 0xe2, 0x4f, 0xcf, 0xaf, 0x3e, 0xbb, 0xf8, 0xe4, 0xdc, 0xff, 0xc1, 0xd5, 0x95,
	0xdd, 0xaa, 0xaf, 0xfd, 0xd9, 0x8b, 0xb7, 0x67, 0xaf, 0x7e, 0xf8, 0xa3, 0x8b, 0x33, 0xbb, 0xed,
	0x3c, 0x86, 0xc3, 0x2d, 0xc5, 0x6f, 0x5f, 0x5e, 0x5f, 0xbc, 0x79, 0x79, 0x6e, 0x77, 0x9c, 0x0f,
	0xe1, 0xf1, 0x96, 0x45, 0xaf, 0x2f, 0x3f, 0xf6, 0x2f, 0xcf, 0x7e, 0xea, 0xbf, 0x7a, 0x7b, 0x69,
	0x77, 0x9d, 0x6f, 0xc1, 0x93, 0xea, 0xfc, 0xf3, 0x8b, 0x4f, 0xdf, 0x9c, 0x5d, 0x7f, 0xf2, 0xc2,
	0xbf, 0x3c, 0xbf, 0x7e, 0xf1, 0xfa, 0xb9, 0xdd, 0xfb, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0x52,
	0x83, 0x65, 0xd5, 0xb9, 0x1b, 0x00, 0x00,
}

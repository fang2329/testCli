// Code generated by protoc-gen-go. DO NOT EDIT.
// source: servers_msg.proto

package net

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 注册服务器
type MsgRegisterSvr struct {
	Svrid            *uint32 `protobuf:"varint,1,opt,name=svrid" json:"svrid,omitempty"`
	GameType         *uint32 `protobuf:"varint,2,opt,name=game_type" json:"game_type,omitempty"`
	Robot            *uint32 `protobuf:"varint,3,opt,name=robot" json:"robot,omitempty"`
	GameSubtype      *uint32 `protobuf:"varint,4,opt,name=game_subtype" json:"game_subtype,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgRegisterSvr) Reset()                    { *m = MsgRegisterSvr{} }
func (m *MsgRegisterSvr) String() string            { return proto.CompactTextString(m) }
func (*MsgRegisterSvr) ProtoMessage()               {}
func (*MsgRegisterSvr) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{0} }

func (m *MsgRegisterSvr) GetSvrid() uint32 {
	if m != nil && m.Svrid != nil {
		return *m.Svrid
	}
	return 0
}

func (m *MsgRegisterSvr) GetGameType() uint32 {
	if m != nil && m.GameType != nil {
		return *m.GameType
	}
	return 0
}

func (m *MsgRegisterSvr) GetRobot() uint32 {
	if m != nil && m.Robot != nil {
		return *m.Robot
	}
	return 0
}

func (m *MsgRegisterSvr) GetGameSubtype() uint32 {
	if m != nil && m.GameSubtype != nil {
		return *m.GameSubtype
	}
	return 0
}

// 注册返回
type MsgRegisterSvrRep struct {
	Result           *uint32 `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgRegisterSvrRep) Reset()                    { *m = MsgRegisterSvrRep{} }
func (m *MsgRegisterSvrRep) String() string            { return proto.CompactTextString(m) }
func (*MsgRegisterSvrRep) ProtoMessage()               {}
func (*MsgRegisterSvrRep) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{1} }

func (m *MsgRegisterSvrRep) GetResult() uint32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

// 游戏服务器上报大厅信息
type MsgReportSvrInfo struct {
	Onlines          *uint32 `protobuf:"varint,1,opt,name=onlines" json:"onlines,omitempty"`
	Robots           *uint32 `protobuf:"varint,2,opt,name=robots" json:"robots,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgReportSvrInfo) Reset()                    { *m = MsgReportSvrInfo{} }
func (m *MsgReportSvrInfo) String() string            { return proto.CompactTextString(m) }
func (*MsgReportSvrInfo) ProtoMessage()               {}
func (*MsgReportSvrInfo) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{2} }

func (m *MsgReportSvrInfo) GetOnlines() uint32 {
	if m != nil && m.Onlines != nil {
		return *m.Onlines
	}
	return 0
}

func (m *MsgReportSvrInfo) GetRobots() uint32 {
	if m != nil && m.Robots != nil {
		return *m.Robots
	}
	return 0
}

// 返回大厅
type MsgLeaveSvr struct {
	Uid              *uint32 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	GotoSvr          *uint32 `protobuf:"varint,2,opt,name=goto_svr" json:"goto_svr,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgLeaveSvr) Reset()                    { *m = MsgLeaveSvr{} }
func (m *MsgLeaveSvr) String() string            { return proto.CompactTextString(m) }
func (*MsgLeaveSvr) ProtoMessage()               {}
func (*MsgLeaveSvr) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{3} }

func (m *MsgLeaveSvr) GetUid() uint32 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *MsgLeaveSvr) GetGotoSvr() uint32 {
	if m != nil && m.GotoSvr != nil {
		return *m.GotoSvr
	}
	return 0
}

// 通知网络状态
type MsgNotifyNetState struct {
	Uid              *uint32 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	State            *uint32 `protobuf:"varint,2,opt,name=state" json:"state,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgNotifyNetState) Reset()                    { *m = MsgNotifyNetState{} }
func (m *MsgNotifyNetState) String() string            { return proto.CompactTextString(m) }
func (*MsgNotifyNetState) ProtoMessage()               {}
func (*MsgNotifyNetState) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{4} }

func (m *MsgNotifyNetState) GetUid() uint32 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *MsgNotifyNetState) GetState() uint32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

// 进入游戏服务器
type MsgEnterIntoGameSvr struct {
	PlayerType       *uint32       `protobuf:"varint,1,opt,name=player_type" json:"player_type,omitempty"`
	BaseData         *BaseInfo     `protobuf:"bytes,2,opt,name=base_data" json:"base_data,omitempty"`
	GameData         *GameDataInfo `protobuf:"bytes,3,opt,name=game_data" json:"game_data,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *MsgEnterIntoGameSvr) Reset()                    { *m = MsgEnterIntoGameSvr{} }
func (m *MsgEnterIntoGameSvr) String() string            { return proto.CompactTextString(m) }
func (*MsgEnterIntoGameSvr) ProtoMessage()               {}
func (*MsgEnterIntoGameSvr) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{5} }

func (m *MsgEnterIntoGameSvr) GetPlayerType() uint32 {
	if m != nil && m.PlayerType != nil {
		return *m.PlayerType
	}
	return 0
}

func (m *MsgEnterIntoGameSvr) GetBaseData() *BaseInfo {
	if m != nil {
		return m.BaseData
	}
	return nil
}

func (m *MsgEnterIntoGameSvr) GetGameData() *GameDataInfo {
	if m != nil {
		return m.GameData
	}
	return nil
}

// 创建私人房
type InnerMsgCreateTable struct {
	Deal             *uint32           `protobuf:"varint,1,opt,name=deal" json:"deal,omitempty"`
	BaseScore        *int64            `protobuf:"varint,2,opt,name=base_score" json:"base_score,omitempty"`
	OpenRound        *uint32           `protobuf:"varint,3,opt,name=open_round" json:"open_round,omitempty"`
	SeatNum          *uint32           `protobuf:"varint,4,opt,name=seat_num" json:"seat_num,omitempty"`
	ServerId         *uint32           `protobuf:"varint,5,opt,name=server_id" json:"server_id,omitempty"`
	IsAa             *uint32           `protobuf:"varint,6,opt,name=is_aa" json:"is_aa,omitempty"`
	Params           []*PrivateKvParam `protobuf:"bytes,7,rep,name=params" json:"params,omitempty"`
	BaseData         *BaseInfo         `protobuf:"bytes,8,opt,name=base_data" json:"base_data,omitempty"`
	GameData         *GameDataInfo     `protobuf:"bytes,9,opt,name=game_data" json:"game_data,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *InnerMsgCreateTable) Reset()                    { *m = InnerMsgCreateTable{} }
func (m *InnerMsgCreateTable) String() string            { return proto.CompactTextString(m) }
func (*InnerMsgCreateTable) ProtoMessage()               {}
func (*InnerMsgCreateTable) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{6} }

func (m *InnerMsgCreateTable) GetDeal() uint32 {
	if m != nil && m.Deal != nil {
		return *m.Deal
	}
	return 0
}

func (m *InnerMsgCreateTable) GetBaseScore() int64 {
	if m != nil && m.BaseScore != nil {
		return *m.BaseScore
	}
	return 0
}

func (m *InnerMsgCreateTable) GetOpenRound() uint32 {
	if m != nil && m.OpenRound != nil {
		return *m.OpenRound
	}
	return 0
}

func (m *InnerMsgCreateTable) GetSeatNum() uint32 {
	if m != nil && m.SeatNum != nil {
		return *m.SeatNum
	}
	return 0
}

func (m *InnerMsgCreateTable) GetServerId() uint32 {
	if m != nil && m.ServerId != nil {
		return *m.ServerId
	}
	return 0
}

func (m *InnerMsgCreateTable) GetIsAa() uint32 {
	if m != nil && m.IsAa != nil {
		return *m.IsAa
	}
	return 0
}

func (m *InnerMsgCreateTable) GetParams() []*PrivateKvParam {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *InnerMsgCreateTable) GetBaseData() *BaseInfo {
	if m != nil {
		return m.BaseData
	}
	return nil
}

func (m *InnerMsgCreateTable) GetGameData() *GameDataInfo {
	if m != nil {
		return m.GameData
	}
	return nil
}

// 修改游戏数值
type MsgNotifyChangeAccountData struct {
	Uid              *uint32 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	Diamond          *int64  `protobuf:"varint,2,opt,name=diamond" json:"diamond,omitempty"`
	Coin             *int64  `protobuf:"varint,3,opt,name=coin" json:"coin,omitempty"`
	Score            *int64  `protobuf:"varint,4,opt,name=score" json:"score,omitempty"`
	Ingot            *int64  `protobuf:"varint,5,opt,name=ingot" json:"ingot,omitempty"`
	Cvalue           *int64  `protobuf:"varint,6,opt,name=cvalue" json:"cvalue,omitempty"`
	OperType         *uint32 `protobuf:"varint,7,opt,name=oper_type" json:"oper_type,omitempty"`
	SubType          *uint32 `protobuf:"varint,8,opt,name=sub_type" json:"sub_type,omitempty"`
	SafeCoin         *int64  `protobuf:"varint,9,opt,name=safe_coin" json:"safe_coin,omitempty"`
	Chessid          []byte  `protobuf:"bytes,10,opt,name=chessid" json:"chessid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgNotifyChangeAccountData) Reset()                    { *m = MsgNotifyChangeAccountData{} }
func (m *MsgNotifyChangeAccountData) String() string            { return proto.CompactTextString(m) }
func (*MsgNotifyChangeAccountData) ProtoMessage()               {}
func (*MsgNotifyChangeAccountData) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{7} }

func (m *MsgNotifyChangeAccountData) GetUid() uint32 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *MsgNotifyChangeAccountData) GetDiamond() int64 {
	if m != nil && m.Diamond != nil {
		return *m.Diamond
	}
	return 0
}

func (m *MsgNotifyChangeAccountData) GetCoin() int64 {
	if m != nil && m.Coin != nil {
		return *m.Coin
	}
	return 0
}

func (m *MsgNotifyChangeAccountData) GetScore() int64 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *MsgNotifyChangeAccountData) GetIngot() int64 {
	if m != nil && m.Ingot != nil {
		return *m.Ingot
	}
	return 0
}

func (m *MsgNotifyChangeAccountData) GetCvalue() int64 {
	if m != nil && m.Cvalue != nil {
		return *m.Cvalue
	}
	return 0
}

func (m *MsgNotifyChangeAccountData) GetOperType() uint32 {
	if m != nil && m.OperType != nil {
		return *m.OperType
	}
	return 0
}

func (m *MsgNotifyChangeAccountData) GetSubType() uint32 {
	if m != nil && m.SubType != nil {
		return *m.SubType
	}
	return 0
}

func (m *MsgNotifyChangeAccountData) GetSafeCoin() int64 {
	if m != nil && m.SafeCoin != nil {
		return *m.SafeCoin
	}
	return 0
}

func (m *MsgNotifyChangeAccountData) GetChessid() []byte {
	if m != nil {
		return m.Chessid
	}
	return nil
}

// 修改信息通知
type MsgNotifyChangePlayerinfo struct {
	Safebox          *uint32 `protobuf:"varint,1,opt,name=safebox" json:"safebox,omitempty"`
	Name             []byte  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgNotifyChangePlayerinfo) Reset()                    { *m = MsgNotifyChangePlayerinfo{} }
func (m *MsgNotifyChangePlayerinfo) String() string            { return proto.CompactTextString(m) }
func (*MsgNotifyChangePlayerinfo) ProtoMessage()               {}
func (*MsgNotifyChangePlayerinfo) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{8} }

func (m *MsgNotifyChangePlayerinfo) GetSafebox() uint32 {
	if m != nil && m.Safebox != nil {
		return *m.Safebox
	}
	return 0
}

func (m *MsgNotifyChangePlayerinfo) GetName() []byte {
	if m != nil {
		return m.Name
	}
	return nil
}

// 通知停服
type MsgNotifyStopService struct {
	Btime            *uint32 `protobuf:"varint,1,opt,name=btime" json:"btime,omitempty"`
	Etime            *uint32 `protobuf:"varint,2,opt,name=etime" json:"etime,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgNotifyStopService) Reset()                    { *m = MsgNotifyStopService{} }
func (m *MsgNotifyStopService) String() string            { return proto.CompactTextString(m) }
func (*MsgNotifyStopService) ProtoMessage()               {}
func (*MsgNotifyStopService) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{9} }

func (m *MsgNotifyStopService) GetBtime() uint32 {
	if m != nil && m.Btime != nil {
		return *m.Btime
	}
	return 0
}

func (m *MsgNotifyStopService) GetEtime() uint32 {
	if m != nil && m.Etime != nil {
		return *m.Etime
	}
	return 0
}

// 上报斗地主游戏战报
type LandGameResult struct {
	IsSpring         *uint32 `protobuf:"varint,1,opt,name=is_spring" json:"is_spring,omitempty"`
	IsLand           *uint32 `protobuf:"varint,2,opt,name=is_land" json:"is_land,omitempty"`
	Deal             *uint32 `protobuf:"varint,3,opt,name=deal" json:"deal,omitempty"`
	EnterMin         *uint64 `protobuf:"varint,4,opt,name=enter_min" json:"enter_min,omitempty"`
	Basescore        *uint32 `protobuf:"varint,5,opt,name=basescore" json:"basescore,omitempty"`
	PressCount       *uint32 `protobuf:"varint,6,opt,name=press_count" json:"press_count,omitempty"`
	BankruptCount    *uint32 `protobuf:"varint,7,opt,name=bankrupt_count" json:"bankrupt_count,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LandGameResult) Reset()                    { *m = LandGameResult{} }
func (m *LandGameResult) String() string            { return proto.CompactTextString(m) }
func (*LandGameResult) ProtoMessage()               {}
func (*LandGameResult) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{10} }

func (m *LandGameResult) GetIsSpring() uint32 {
	if m != nil && m.IsSpring != nil {
		return *m.IsSpring
	}
	return 0
}

func (m *LandGameResult) GetIsLand() uint32 {
	if m != nil && m.IsLand != nil {
		return *m.IsLand
	}
	return 0
}

func (m *LandGameResult) GetDeal() uint32 {
	if m != nil && m.Deal != nil {
		return *m.Deal
	}
	return 0
}

func (m *LandGameResult) GetEnterMin() uint64 {
	if m != nil && m.EnterMin != nil {
		return *m.EnterMin
	}
	return 0
}

func (m *LandGameResult) GetBasescore() uint32 {
	if m != nil && m.Basescore != nil {
		return *m.Basescore
	}
	return 0
}

func (m *LandGameResult) GetPressCount() uint32 {
	if m != nil && m.PressCount != nil {
		return *m.PressCount
	}
	return 0
}

func (m *LandGameResult) GetBankruptCount() uint32 {
	if m != nil && m.BankruptCount != nil {
		return *m.BankruptCount
	}
	return 0
}

type MsgReportGameResult struct {
	Uid              *uint32         `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	Consume          *uint32         `protobuf:"varint,2,opt,name=consume" json:"consume,omitempty"`
	GameType         *uint32         `protobuf:"varint,3,opt,name=game_type" json:"game_type,omitempty"`
	WinScore         *int64          `protobuf:"varint,4,opt,name=win_score" json:"win_score,omitempty"`
	Land             *LandGameResult `protobuf:"bytes,5,opt,name=land" json:"land,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *MsgReportGameResult) Reset()                    { *m = MsgReportGameResult{} }
func (m *MsgReportGameResult) String() string            { return proto.CompactTextString(m) }
func (*MsgReportGameResult) ProtoMessage()               {}
func (*MsgReportGameResult) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{11} }

func (m *MsgReportGameResult) GetUid() uint32 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *MsgReportGameResult) GetConsume() uint32 {
	if m != nil && m.Consume != nil {
		return *m.Consume
	}
	return 0
}

func (m *MsgReportGameResult) GetGameType() uint32 {
	if m != nil && m.GameType != nil {
		return *m.GameType
	}
	return 0
}

func (m *MsgReportGameResult) GetWinScore() int64 {
	if m != nil && m.WinScore != nil {
		return *m.WinScore
	}
	return 0
}

func (m *MsgReportGameResult) GetLand() *LandGameResult {
	if m != nil {
		return m.Land
	}
	return nil
}

type MsgReportFeeLog struct {
	Uid              *uint32 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	FeeWin           *int64  `protobuf:"varint,2,opt,name=fee_win" json:"fee_win,omitempty"`
	FeeLose          *int64  `protobuf:"varint,3,opt,name=fee_lose" json:"fee_lose,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgReportFeeLog) Reset()                    { *m = MsgReportFeeLog{} }
func (m *MsgReportFeeLog) String() string            { return proto.CompactTextString(m) }
func (*MsgReportFeeLog) ProtoMessage()               {}
func (*MsgReportFeeLog) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{12} }

func (m *MsgReportFeeLog) GetUid() uint32 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *MsgReportFeeLog) GetFeeWin() int64 {
	if m != nil && m.FeeWin != nil {
		return *m.FeeWin
	}
	return 0
}

func (m *MsgReportFeeLog) GetFeeLose() int64 {
	if m != nil && m.FeeLose != nil {
		return *m.FeeLose
	}
	return 0
}

type MsgLeaveRobot struct {
	Uid              *uint32 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgLeaveRobot) Reset()                    { *m = MsgLeaveRobot{} }
func (m *MsgLeaveRobot) String() string            { return proto.CompactTextString(m) }
func (*MsgLeaveRobot) ProtoMessage()               {}
func (*MsgLeaveRobot) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{13} }

func (m *MsgLeaveRobot) GetUid() uint32 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

// 刷新数值
type MsgFlushChangeAccountData struct {
	Uid              *uint32 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	Diamond          *int64  `protobuf:"varint,2,opt,name=diamond" json:"diamond,omitempty"`
	Coin             *int64  `protobuf:"varint,3,opt,name=coin" json:"coin,omitempty"`
	Score            *int64  `protobuf:"varint,4,opt,name=score" json:"score,omitempty"`
	Ingot            *int64  `protobuf:"varint,5,opt,name=ingot" json:"ingot,omitempty"`
	Cvalue           *int64  `protobuf:"varint,6,opt,name=cvalue" json:"cvalue,omitempty"`
	SafeCoin         *int64  `protobuf:"varint,7,opt,name=safe_coin" json:"safe_coin,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgFlushChangeAccountData) Reset()                    { *m = MsgFlushChangeAccountData{} }
func (m *MsgFlushChangeAccountData) String() string            { return proto.CompactTextString(m) }
func (*MsgFlushChangeAccountData) ProtoMessage()               {}
func (*MsgFlushChangeAccountData) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{14} }

func (m *MsgFlushChangeAccountData) GetUid() uint32 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *MsgFlushChangeAccountData) GetDiamond() int64 {
	if m != nil && m.Diamond != nil {
		return *m.Diamond
	}
	return 0
}

func (m *MsgFlushChangeAccountData) GetCoin() int64 {
	if m != nil && m.Coin != nil {
		return *m.Coin
	}
	return 0
}

func (m *MsgFlushChangeAccountData) GetScore() int64 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *MsgFlushChangeAccountData) GetIngot() int64 {
	if m != nil && m.Ingot != nil {
		return *m.Ingot
	}
	return 0
}

func (m *MsgFlushChangeAccountData) GetCvalue() int64 {
	if m != nil && m.Cvalue != nil {
		return *m.Cvalue
	}
	return 0
}

func (m *MsgFlushChangeAccountData) GetSafeCoin() int64 {
	if m != nil && m.SafeCoin != nil {
		return *m.SafeCoin
	}
	return 0
}

func init() {
	proto.RegisterType((*MsgRegisterSvr)(nil), "net.msg_register_svr")
	proto.RegisterType((*MsgRegisterSvrRep)(nil), "net.msg_register_svr_rep")
	proto.RegisterType((*MsgReportSvrInfo)(nil), "net.msg_report_svr_info")
	proto.RegisterType((*MsgLeaveSvr)(nil), "net.msg_leave_svr")
	proto.RegisterType((*MsgNotifyNetState)(nil), "net.msg_notify_net_state")
	proto.RegisterType((*MsgEnterIntoGameSvr)(nil), "net.msg_enter_into_game_svr")
	proto.RegisterType((*InnerMsgCreateTable)(nil), "net.inner_msg_create_table")
	proto.RegisterType((*MsgNotifyChangeAccountData)(nil), "net.msg_notify_change_account_data")
	proto.RegisterType((*MsgNotifyChangePlayerinfo)(nil), "net.msg_notify_change_playerinfo")
	proto.RegisterType((*MsgNotifyStopService)(nil), "net.msg_notify_stop_service")
	proto.RegisterType((*LandGameResult)(nil), "net.land_game_result")
	proto.RegisterType((*MsgReportGameResult)(nil), "net.msg_report_game_result")
	proto.RegisterType((*MsgReportFeeLog)(nil), "net.msg_report_fee_log")
	proto.RegisterType((*MsgLeaveRobot)(nil), "net.msg_leave_robot")
	proto.RegisterType((*MsgFlushChangeAccountData)(nil), "net.msg_flush_change_account_data")
}

func init() { proto.RegisterFile("servers_msg.proto", fileDescriptor15) }

var fileDescriptor15 = []byte{
	// 715 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xbc, 0x54, 0xcb, 0x6e, 0xdb, 0x3a,
	0x10, 0x85, 0xae, 0xe4, 0xd8, 0x1e, 0xdb, 0xb1, 0xa3, 0x3c, 0xae, 0x10, 0xdc, 0x1b, 0xa4, 0x2a,
	0x1a, 0x64, 0xe5, 0x45, 0x16, 0xed, 0xaa, 0xbb, 0xfe, 0x44, 0x57, 0x04, 0x25, 0x8d, 0x15, 0x22,
	0x12, 0x29, 0x90, 0x94, 0x52, 0x2f, 0xbb, 0xef, 0xbe, 0x1f, 0xd4, 0x5f, 0xea, 0x07, 0x14, 0x1c,
	0x4a, 0x7e, 0x24, 0x28, 0xba, 0xeb, 0x92, 0xa3, 0x33, 0xc3, 0x39, 0x0f, 0x0a, 0xce, 0x0c, 0xea,
	0x0e, 0xb5, 0x61, 0xb5, 0x29, 0xd7, 0x8d, 0x56, 0x56, 0xc5, 0xa1, 0x44, 0x7b, 0x7d, 0x99, 0x71,
	0x83, 0xae, 0xc8, 0x8c, 0xd5, 0x6d, 0x6e, 0xfd, 0xb7, 0xeb, 0x15, 0x6a, 0xad, 0x34, 0xcb, 0x55,
	0x81, 0xbe, 0x92, 0x7e, 0x86, 0x95, 0x43, 0x69, 0x2c, 0x85, 0xb1, 0xa8, 0x99, 0xe9, 0x74, 0xbc,
	0x80, 0x91, 0xe9, 0xb4, 0x28, 0x92, 0xe0, 0x36, 0xb8, 0x5f, 0xc4, 0x67, 0x30, 0x2d, 0x79, 0x8d,
	0xcc, 0x6e, 0x1b, 0x4c, 0xfe, 0xa1, 0xd2, 0x02, 0x46, 0x5a, 0x65, 0xca, 0x26, 0x21, 0x1d, 0x2f,
	0x60, 0x4e, 0x08, 0xd3, 0x66, 0x04, 0x8a, 0x5c, 0x35, 0xbd, 0x83, 0x8b, 0x97, 0xa3, 0x99, 0xc6,
	0x26, 0x3e, 0x85, 0x13, 0x8d, 0xa6, 0xad, 0xac, 0x9f, 0x9f, 0xbe, 0x87, 0x73, 0x8f, 0x6b, 0x94,
	0xb6, 0x84, 0x12, 0x72, 0xa3, 0xe2, 0x25, 0x8c, 0x95, 0xac, 0x84, 0x44, 0xd3, 0xef, 0xe1, 0xfa,
	0xdc, 0xa5, 0xc6, 0x2f, 0x91, 0xae, 0x61, 0xe1, 0xfa, 0x2a, 0xe4, 0x1d, 0xd2, 0xde, 0x33, 0x08,
	0xdb, 0xdd, 0xd6, 0x2b, 0x98, 0x94, 0xca, 0x2a, 0xf7, 0xa1, 0xc7, 0x3f, 0xf8, 0x7d, 0xa4, 0xb2,
	0x62, 0xb3, 0x65, 0x12, 0x2d, 0x33, 0x96, 0x5b, 0x3c, 0x6e, 0x73, 0xdc, 0x5d, 0xb5, 0xef, 0xd9,
	0xc2, 0xbf, 0xae, 0x07, 0xa5, 0x23, 0x20, 0xa4, 0x55, 0xcc, 0x13, 0xed, 0x74, 0x7c, 0x0e, 0xb3,
	0xa6, 0xe2, 0x5b, 0xd4, 0x5e, 0x18, 0xdf, 0xfe, 0x06, 0xa6, 0xa4, 0x7c, 0xc1, 0x2d, 0xa7, 0x11,
	0xb3, 0x87, 0xd3, 0xb5, 0x44, 0xbb, 0xa6, 0x2a, 0xf1, 0xba, 0xeb, 0xe5, 0x24, 0x48, 0x48, 0x90,
	0x73, 0x82, 0xec, 0xaa, 0x84, 0x4b, 0x7f, 0x06, 0x70, 0x25, 0xa4, 0x44, 0x4d, 0x36, 0xe6, 0x1a,
	0xb9, 0x45, 0x66, 0x79, 0x56, 0x61, 0x3c, 0x87, 0xa8, 0x40, 0x5e, 0xf5, 0x77, 0xc6, 0x00, 0x34,
	0xdd, 0xe4, 0x4a, 0xfb, 0xbd, 0x43, 0x57, 0x53, 0x0d, 0x4a, 0xa6, 0x55, 0x2b, 0x8b, 0xde, 0xa5,
	0x15, 0x4c, 0x0c, 0x72, 0xcb, 0x64, 0x5b, 0x7b, 0x87, 0x9c, 0xb3, 0x3e, 0x3f, 0x4c, 0x14, 0xc9,
	0x68, 0xe0, 0x2f, 0x0c, 0xe3, 0x3c, 0x39, 0xa1, 0xe3, 0x3b, 0x38, 0x69, 0xb8, 0xe6, 0xb5, 0x49,
	0xc6, 0xb7, 0xe1, 0xfd, 0xec, 0xe1, 0x92, 0x36, 0x6d, 0xb4, 0xe8, 0xdc, 0x36, 0x4f, 0x1d, 0xa3,
	0xaf, 0xc7, 0xb4, 0x27, 0x7f, 0xa6, 0x3d, 0xfd, 0x3d, 0xed, 0x1f, 0x01, 0xdc, 0x1c, 0xd8, 0x94,
	0x3f, 0x72, 0x59, 0x22, 0xe3, 0x79, 0xae, 0x5a, 0x69, 0x09, 0x77, 0x6c, 0xd8, 0x12, 0xc6, 0x85,
	0xe0, 0xb5, 0x92, 0x45, 0x4f, 0x7d, 0x0e, 0x51, 0xae, 0x84, 0x24, 0xd2, 0x21, 0xf9, 0x49, 0xba,
	0x44, 0xc3, 0x51, 0xc8, 0x52, 0x59, 0x62, 0x1b, 0xba, 0x48, 0xe5, 0x1d, 0xaf, 0x5a, 0x24, 0xba,
	0xa1, 0x13, 0x44, 0x35, 0x83, 0xa3, 0xe3, 0x9d, 0x6a, 0x6d, 0xe6, 0x2b, 0x93, 0x9d, 0x6a, 0x7c,
	0x83, 0x8c, 0x6e, 0x99, 0x52, 0xdf, 0x12, 0xc6, 0xf9, 0x23, 0x1a, 0x23, 0x8a, 0x04, 0x6e, 0x83,
	0xfb, 0x79, 0xfa, 0x11, 0xfe, 0x7b, 0x4d, 0xc2, 0xc7, 0x65, 0x08, 0xb7, 0x9b, 0x91, 0xa9, 0x2f,
	0x3d, 0x8d, 0x39, 0x44, 0x92, 0xd7, 0xde, 0xbe, 0x79, 0xfa, 0xc1, 0xc7, 0xae, 0x6f, 0x37, 0x56,
	0x35, 0xcc, 0x19, 0x25, 0x72, 0x74, 0x0c, 0x32, 0x2b, 0x6a, 0xdc, 0xe7, 0x15, 0xe9, 0xe8, 0xf3,
	0xfa, 0x3d, 0x80, 0x55, 0xc5, 0x65, 0xe1, 0x63, 0xea, 0x9f, 0x99, 0x5b, 0x58, 0x18, 0x66, 0x1a,
	0x2d, 0x64, 0xb9, 0x57, 0x4d, 0x18, 0xe6, 0x90, 0xfd, 0x8b, 0x1e, 0x22, 0x15, 0x0e, 0x14, 0x7d,
	0xe4, 0x6b, 0x21, 0x49, 0xb9, 0xc8, 0x95, 0x9c, 0x99, 0x5e, 0x4c, 0x9f, 0x15, 0xf7, 0x02, 0x34,
	0x1a, 0xc3, 0xc8, 0x9b, 0x3e, 0x31, 0x57, 0x70, 0x9a, 0x71, 0xf9, 0xa4, 0xdb, 0xc6, 0xf6, 0x75,
	0xd2, 0x31, 0xfd, 0x1a, 0xc0, 0xd5, 0xc1, 0x33, 0x3f, 0xdc, 0xef, 0xa5, 0x9f, 0xb9, 0x92, 0xa6,
	0x1d, 0x28, 0x1d, 0xff, 0x7e, 0x76, 0xeb, 0x3d, 0x0b, 0xc9, 0x0e, 0x8d, 0x7d, 0x0b, 0x11, 0xb1,
	0x19, 0x51, 0xb2, 0x7c, 0x4c, 0x5f, 0x0a, 0x91, 0x7e, 0x82, 0xf8, 0x60, 0x85, 0x0d, 0x22, 0xab,
	0x54, 0xf9, 0xea, 0x7a, 0x57, 0x7f, 0x16, 0xb2, 0x8f, 0xd3, 0x0a, 0x26, 0x1e, 0x68, 0xfc, 0xed,
	0x61, 0x7a, 0x03, 0xcb, 0xfd, 0x7f, 0x87, 0xfe, 0x48, 0x47, 0x23, 0xd2, 0x6f, 0x01, 0xfc, 0xef,
	0x00, 0x9b, 0xaa, 0x35, 0x8f, 0x7f, 0x3f, 0xc0, 0xfb, 0x6c, 0x3a, 0xe1, 0xc3, 0x5f, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x19, 0xf6, 0x77, 0x68, 0x23, 0x06, 0x00, 0x00,
}

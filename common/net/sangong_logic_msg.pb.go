// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sangong_logic_msg.proto

package net

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 游戏状态
type MsgSangongGameInfoFreeRep struct {
	TimeLeave        *uint32 `protobuf:"varint,1,opt,name=time_leave" json:"time_leave,omitempty"`
	BankerId         *uint32 `protobuf:"varint,2,opt,name=banker_id" json:"banker_id,omitempty"`
	CurRound         *uint32 `protobuf:"varint,3,opt,name=cur_round" json:"cur_round,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgSangongGameInfoFreeRep) Reset()                    { *m = MsgSangongGameInfoFreeRep{} }
func (m *MsgSangongGameInfoFreeRep) String() string            { return proto.CompactTextString(m) }
func (*MsgSangongGameInfoFreeRep) ProtoMessage()               {}
func (*MsgSangongGameInfoFreeRep) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{0} }

func (m *MsgSangongGameInfoFreeRep) GetTimeLeave() uint32 {
	if m != nil && m.TimeLeave != nil {
		return *m.TimeLeave
	}
	return 0
}

func (m *MsgSangongGameInfoFreeRep) GetBankerId() uint32 {
	if m != nil && m.BankerId != nil {
		return *m.BankerId
	}
	return 0
}

func (m *MsgSangongGameInfoFreeRep) GetCurRound() uint32 {
	if m != nil && m.CurRound != nil {
		return *m.CurRound
	}
	return 0
}

type MsgSangongGameInfoPlayRep struct {
	AllJettonScore   []int64     `protobuf:"varint,1,rep,name=all_jetton_score" json:"all_jetton_score,omitempty"`
	TableCards       []*MsgCards `protobuf:"bytes,2,rep,name=table_cards" json:"table_cards,omitempty"`
	BankerId         *uint32     `protobuf:"varint,3,opt,name=banker_id" json:"banker_id,omitempty"`
	GameStatus       *uint32     `protobuf:"varint,4,opt,name=game_status" json:"game_status,omitempty"`
	ShowCards        []uint32    `protobuf:"varint,5,rep,name=show_cards" json:"show_cards,omitempty"`
	PlayerStatus     []uint32    `protobuf:"varint,6,rep,name=player_status" json:"player_status,omitempty"`
	TimeLeave        *uint32     `protobuf:"varint,7,opt,name=time_leave" json:"time_leave,omitempty"`
	ApplyList        []uint32    `protobuf:"varint,8,rep,name=apply_list" json:"apply_list,omitempty"`
	TurnMaxScore     []int64     `protobuf:"varint,9,rep,name=turn_max_score" json:"turn_max_score,omitempty"`
	CardTypes        []uint32    `protobuf:"varint,10,rep,name=card_types" json:"card_types,omitempty"`
	CurRound         *uint32     `protobuf:"varint,11,opt,name=cur_round" json:"cur_round,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *MsgSangongGameInfoPlayRep) Reset()                    { *m = MsgSangongGameInfoPlayRep{} }
func (m *MsgSangongGameInfoPlayRep) String() string            { return proto.CompactTextString(m) }
func (*MsgSangongGameInfoPlayRep) ProtoMessage()               {}
func (*MsgSangongGameInfoPlayRep) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{1} }

func (m *MsgSangongGameInfoPlayRep) GetAllJettonScore() []int64 {
	if m != nil {
		return m.AllJettonScore
	}
	return nil
}

func (m *MsgSangongGameInfoPlayRep) GetTableCards() []*MsgCards {
	if m != nil {
		return m.TableCards
	}
	return nil
}

func (m *MsgSangongGameInfoPlayRep) GetBankerId() uint32 {
	if m != nil && m.BankerId != nil {
		return *m.BankerId
	}
	return 0
}

func (m *MsgSangongGameInfoPlayRep) GetGameStatus() uint32 {
	if m != nil && m.GameStatus != nil {
		return *m.GameStatus
	}
	return 0
}

func (m *MsgSangongGameInfoPlayRep) GetShowCards() []uint32 {
	if m != nil {
		return m.ShowCards
	}
	return nil
}

func (m *MsgSangongGameInfoPlayRep) GetPlayerStatus() []uint32 {
	if m != nil {
		return m.PlayerStatus
	}
	return nil
}

func (m *MsgSangongGameInfoPlayRep) GetTimeLeave() uint32 {
	if m != nil && m.TimeLeave != nil {
		return *m.TimeLeave
	}
	return 0
}

func (m *MsgSangongGameInfoPlayRep) GetApplyList() []uint32 {
	if m != nil {
		return m.ApplyList
	}
	return nil
}

func (m *MsgSangongGameInfoPlayRep) GetTurnMaxScore() []int64 {
	if m != nil {
		return m.TurnMaxScore
	}
	return nil
}

func (m *MsgSangongGameInfoPlayRep) GetCardTypes() []uint32 {
	if m != nil {
		return m.CardTypes
	}
	return nil
}

func (m *MsgSangongGameInfoPlayRep) GetCurRound() uint32 {
	if m != nil && m.CurRound != nil {
		return *m.CurRound
	}
	return 0
}

// 游戏开始
type MsgSangongStartRep struct {
	CanApplyBanker   *uint32 `protobuf:"varint,1,opt,name=can_apply_banker" json:"can_apply_banker,omitempty"`
	BankerId         *uint32 `protobuf:"varint,2,opt,name=banker_id" json:"banker_id,omitempty"`
	CurRound         *uint32 `protobuf:"varint,3,opt,name=cur_round" json:"cur_round,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgSangongStartRep) Reset()                    { *m = MsgSangongStartRep{} }
func (m *MsgSangongStartRep) String() string            { return proto.CompactTextString(m) }
func (*MsgSangongStartRep) ProtoMessage()               {}
func (*MsgSangongStartRep) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{2} }

func (m *MsgSangongStartRep) GetCanApplyBanker() uint32 {
	if m != nil && m.CanApplyBanker != nil {
		return *m.CanApplyBanker
	}
	return 0
}

func (m *MsgSangongStartRep) GetBankerId() uint32 {
	if m != nil && m.BankerId != nil {
		return *m.BankerId
	}
	return 0
}

func (m *MsgSangongStartRep) GetCurRound() uint32 {
	if m != nil && m.CurRound != nil {
		return *m.CurRound
	}
	return 0
}

// 申请庄家
type MsgSangongApplyBanker struct {
	Score            *uint32 `protobuf:"varint,1,opt,name=score" json:"score,omitempty"`
	Operation        *uint32 `protobuf:"varint,2,opt,name=operation" json:"operation,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgSangongApplyBanker) Reset()                    { *m = MsgSangongApplyBanker{} }
func (m *MsgSangongApplyBanker) String() string            { return proto.CompactTextString(m) }
func (*MsgSangongApplyBanker) ProtoMessage()               {}
func (*MsgSangongApplyBanker) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{3} }

func (m *MsgSangongApplyBanker) GetScore() uint32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *MsgSangongApplyBanker) GetOperation() uint32 {
	if m != nil && m.Operation != nil {
		return *m.Operation
	}
	return 0
}

type MsgSangongApplyBankerRep struct {
	Chairid          *uint32 `protobuf:"varint,1,opt,name=chairid" json:"chairid,omitempty"`
	Score            *uint32 `protobuf:"varint,2,opt,name=score" json:"score,omitempty"`
	Result           *uint32 `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgSangongApplyBankerRep) Reset()                    { *m = MsgSangongApplyBankerRep{} }
func (m *MsgSangongApplyBankerRep) String() string            { return proto.CompactTextString(m) }
func (*MsgSangongApplyBankerRep) ProtoMessage()               {}
func (*MsgSangongApplyBankerRep) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{4} }

func (m *MsgSangongApplyBankerRep) GetChairid() uint32 {
	if m != nil && m.Chairid != nil {
		return *m.Chairid
	}
	return 0
}

func (m *MsgSangongApplyBankerRep) GetScore() uint32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *MsgSangongApplyBankerRep) GetResult() uint32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

type MsgSangongBankerResultRep struct {
	BankerId         *uint32  `protobuf:"varint,1,opt,name=banker_id" json:"banker_id,omitempty"`
	ApplyList        []uint32 `protobuf:"varint,2,rep,name=apply_list" json:"apply_list,omitempty"`
	TurnMaxScore     []int64  `protobuf:"varint,3,rep,name=turn_max_score" json:"turn_max_score,omitempty"`
	IsApply          *uint32  `protobuf:"varint,4,opt,name=is_apply" json:"is_apply,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *MsgSangongBankerResultRep) Reset()                    { *m = MsgSangongBankerResultRep{} }
func (m *MsgSangongBankerResultRep) String() string            { return proto.CompactTextString(m) }
func (*MsgSangongBankerResultRep) ProtoMessage()               {}
func (*MsgSangongBankerResultRep) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{5} }

func (m *MsgSangongBankerResultRep) GetBankerId() uint32 {
	if m != nil && m.BankerId != nil {
		return *m.BankerId
	}
	return 0
}

func (m *MsgSangongBankerResultRep) GetApplyList() []uint32 {
	if m != nil {
		return m.ApplyList
	}
	return nil
}

func (m *MsgSangongBankerResultRep) GetTurnMaxScore() []int64 {
	if m != nil {
		return m.TurnMaxScore
	}
	return nil
}

func (m *MsgSangongBankerResultRep) GetIsApply() uint32 {
	if m != nil && m.IsApply != nil {
		return *m.IsApply
	}
	return 0
}

type MsgSangongQuitBankerResp struct {
	Result           *uint32 `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgSangongQuitBankerResp) Reset()                    { *m = MsgSangongQuitBankerResp{} }
func (m *MsgSangongQuitBankerResp) String() string            { return proto.CompactTextString(m) }
func (*MsgSangongQuitBankerResp) ProtoMessage()               {}
func (*MsgSangongQuitBankerResp) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{6} }

func (m *MsgSangongQuitBankerResp) GetResult() uint32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

type MsgSangongQuitBankerBroadcast struct {
	Uid              *uint32 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgSangongQuitBankerBroadcast) Reset()                    { *m = MsgSangongQuitBankerBroadcast{} }
func (m *MsgSangongQuitBankerBroadcast) String() string            { return proto.CompactTextString(m) }
func (*MsgSangongQuitBankerBroadcast) ProtoMessage()               {}
func (*MsgSangongQuitBankerBroadcast) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{7} }

func (m *MsgSangongQuitBankerBroadcast) GetUid() uint32 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

// 用户下注
type MsgSangongPlaceJettonReq struct {
	JettonScore      *int64 `protobuf:"varint,1,opt,name=jetton_score" json:"jetton_score,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *MsgSangongPlaceJettonReq) Reset()                    { *m = MsgSangongPlaceJettonReq{} }
func (m *MsgSangongPlaceJettonReq) String() string            { return proto.CompactTextString(m) }
func (*MsgSangongPlaceJettonReq) ProtoMessage()               {}
func (*MsgSangongPlaceJettonReq) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{8} }

func (m *MsgSangongPlaceJettonReq) GetJettonScore() int64 {
	if m != nil && m.JettonScore != nil {
		return *m.JettonScore
	}
	return 0
}

type MsgSangongPlaceJettonRep struct {
	JettonScore      *int64  `protobuf:"varint,1,opt,name=jetton_score" json:"jetton_score,omitempty"`
	Result           *uint32 `protobuf:"varint,2,opt,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgSangongPlaceJettonRep) Reset()                    { *m = MsgSangongPlaceJettonRep{} }
func (m *MsgSangongPlaceJettonRep) String() string            { return proto.CompactTextString(m) }
func (*MsgSangongPlaceJettonRep) ProtoMessage()               {}
func (*MsgSangongPlaceJettonRep) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{9} }

func (m *MsgSangongPlaceJettonRep) GetJettonScore() int64 {
	if m != nil && m.JettonScore != nil {
		return *m.JettonScore
	}
	return 0
}

func (m *MsgSangongPlaceJettonRep) GetResult() uint32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

type MsgSangongPlaceJettonBroadcast struct {
	Chairid          *uint32 `protobuf:"varint,1,opt,name=chairid" json:"chairid,omitempty"`
	JettonScore      *int64  `protobuf:"varint,2,opt,name=jetton_score" json:"jetton_score,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgSangongPlaceJettonBroadcast) Reset()         { *m = MsgSangongPlaceJettonBroadcast{} }
func (m *MsgSangongPlaceJettonBroadcast) String() string { return proto.CompactTextString(m) }
func (*MsgSangongPlaceJettonBroadcast) ProtoMessage()    {}
func (*MsgSangongPlaceJettonBroadcast) Descriptor() ([]byte, []int) {
	return fileDescriptor12, []int{10}
}

func (m *MsgSangongPlaceJettonBroadcast) GetChairid() uint32 {
	if m != nil && m.Chairid != nil {
		return *m.Chairid
	}
	return 0
}

func (m *MsgSangongPlaceJettonBroadcast) GetJettonScore() int64 {
	if m != nil && m.JettonScore != nil {
		return *m.JettonScore
	}
	return 0
}

// 发牌
type MsgSangongSendCardRep struct {
	Cards            []uint32 `protobuf:"varint,1,rep,name=cards" json:"cards,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *MsgSangongSendCardRep) Reset()                    { *m = MsgSangongSendCardRep{} }
func (m *MsgSangongSendCardRep) String() string            { return proto.CompactTextString(m) }
func (*MsgSangongSendCardRep) ProtoMessage()               {}
func (*MsgSangongSendCardRep) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{11} }

func (m *MsgSangongSendCardRep) GetCards() []uint32 {
	if m != nil {
		return m.Cards
	}
	return nil
}

// 摆牌
type MsgSangongChangeCard struct {
	Cards            []uint32 `protobuf:"varint,1,rep,name=cards" json:"cards,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *MsgSangongChangeCard) Reset()                    { *m = MsgSangongChangeCard{} }
func (m *MsgSangongChangeCard) String() string            { return proto.CompactTextString(m) }
func (*MsgSangongChangeCard) ProtoMessage()               {}
func (*MsgSangongChangeCard) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{12} }

func (m *MsgSangongChangeCard) GetCards() []uint32 {
	if m != nil {
		return m.Cards
	}
	return nil
}

type MsgSangongChangeCardRep struct {
	OperId           *uint32  `protobuf:"varint,1,opt,name=oper_id" json:"oper_id,omitempty"`
	Result           *uint32  `protobuf:"varint,2,opt,name=result" json:"result,omitempty"`
	Cards            []uint32 `protobuf:"varint,3,rep,name=cards" json:"cards,omitempty"`
	CardType         *uint32  `protobuf:"varint,4,opt,name=card_type" json:"card_type,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *MsgSangongChangeCardRep) Reset()                    { *m = MsgSangongChangeCardRep{} }
func (m *MsgSangongChangeCardRep) String() string            { return proto.CompactTextString(m) }
func (*MsgSangongChangeCardRep) ProtoMessage()               {}
func (*MsgSangongChangeCardRep) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{13} }

func (m *MsgSangongChangeCardRep) GetOperId() uint32 {
	if m != nil && m.OperId != nil {
		return *m.OperId
	}
	return 0
}

func (m *MsgSangongChangeCardRep) GetResult() uint32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *MsgSangongChangeCardRep) GetCards() []uint32 {
	if m != nil {
		return m.Cards
	}
	return nil
}

func (m *MsgSangongChangeCardRep) GetCardType() uint32 {
	if m != nil && m.CardType != nil {
		return *m.CardType
	}
	return 0
}

// 游戏结束
type MsgSangongGameEnd struct {
	TimeLeave        *uint32     `protobuf:"varint,1,opt,name=time_leave" json:"time_leave,omitempty"`
	TableCards       []*MsgCards `protobuf:"bytes,2,rep,name=table_cards" json:"table_cards,omitempty"`
	CardTypes        []uint32    `protobuf:"varint,3,rep,name=card_types" json:"card_types,omitempty"`
	PlayerScore      []int64     `protobuf:"varint,4,rep,name=player_score" json:"player_score,omitempty"`
	WinMultiple      []int32     `protobuf:"varint,5,rep,name=win_multiple" json:"win_multiple,omitempty"`
	CurRound         *uint32     `protobuf:"varint,6,opt,name=cur_round" json:"cur_round,omitempty"`
	BeBankerMethod   *uint32     `protobuf:"varint,7,opt,name=beBankerMethod" json:"beBankerMethod,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *MsgSangongGameEnd) Reset()                    { *m = MsgSangongGameEnd{} }
func (m *MsgSangongGameEnd) String() string            { return proto.CompactTextString(m) }
func (*MsgSangongGameEnd) ProtoMessage()               {}
func (*MsgSangongGameEnd) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{14} }

func (m *MsgSangongGameEnd) GetTimeLeave() uint32 {
	if m != nil && m.TimeLeave != nil {
		return *m.TimeLeave
	}
	return 0
}

func (m *MsgSangongGameEnd) GetTableCards() []*MsgCards {
	if m != nil {
		return m.TableCards
	}
	return nil
}

func (m *MsgSangongGameEnd) GetCardTypes() []uint32 {
	if m != nil {
		return m.CardTypes
	}
	return nil
}

func (m *MsgSangongGameEnd) GetPlayerScore() []int64 {
	if m != nil {
		return m.PlayerScore
	}
	return nil
}

func (m *MsgSangongGameEnd) GetWinMultiple() []int32 {
	if m != nil {
		return m.WinMultiple
	}
	return nil
}

func (m *MsgSangongGameEnd) GetCurRound() uint32 {
	if m != nil && m.CurRound != nil {
		return *m.CurRound
	}
	return 0
}

func (m *MsgSangongGameEnd) GetBeBankerMethod() uint32 {
	if m != nil && m.BeBankerMethod != nil {
		return *m.BeBankerMethod
	}
	return 0
}

func init() {
	proto.RegisterType((*MsgSangongGameInfoFreeRep)(nil), "net.msg_sangong_game_info_free_rep")
	proto.RegisterType((*MsgSangongGameInfoPlayRep)(nil), "net.msg_sangong_game_info_play_rep")
	proto.RegisterType((*MsgSangongStartRep)(nil), "net.msg_sangong_start_rep")
	proto.RegisterType((*MsgSangongApplyBanker)(nil), "net.msg_sangong_apply_banker")
	proto.RegisterType((*MsgSangongApplyBankerRep)(nil), "net.msg_sangong_apply_banker_rep")
	proto.RegisterType((*MsgSangongBankerResultRep)(nil), "net.msg_sangong_banker_result_rep")
	proto.RegisterType((*MsgSangongQuitBankerResp)(nil), "net.msg_sangong_quit_banker_resp")
	proto.RegisterType((*MsgSangongQuitBankerBroadcast)(nil), "net.msg_sangong_quit_banker_broadcast")
	proto.RegisterType((*MsgSangongPlaceJettonReq)(nil), "net.msg_sangong_place_jetton_req")
	proto.RegisterType((*MsgSangongPlaceJettonRep)(nil), "net.msg_sangong_place_jetton_rep")
	proto.RegisterType((*MsgSangongPlaceJettonBroadcast)(nil), "net.msg_sangong_place_jetton_broadcast")
	proto.RegisterType((*MsgSangongSendCardRep)(nil), "net.msg_sangong_send_card_rep")
	proto.RegisterType((*MsgSangongChangeCard)(nil), "net.msg_sangong_change_card")
	proto.RegisterType((*MsgSangongChangeCardRep)(nil), "net.msg_sangong_change_card_rep")
	proto.RegisterType((*MsgSangongGameEnd)(nil), "net.msg_sangong_game_end")
}

func init() { proto.RegisterFile("sangong_logic_msg.proto", fileDescriptor12) }

var fileDescriptor12 = []byte{
	// 597 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x54, 0xcd, 0x72, 0xd3, 0x3c,
	0x14, 0x9d, 0xc4, 0x4d, 0x7f, 0x6e, 0xea, 0x7c, 0xfd, 0x44, 0xda, 0x9a, 0xf2, 0x33, 0xc5, 0x6c,
	0x3c, 0x2c, 0x32, 0x0c, 0xc3, 0x92, 0x15, 0xc3, 0x8e, 0x81, 0x2d, 0x33, 0x6c, 0x84, 0x62, 0xdf,
	0x3a, 0x02, 0x45, 0x52, 0x25, 0x99, 0xd2, 0x47, 0xe1, 0x55, 0x78, 0x3a, 0xc6, 0x92, 0xdd, 0xd8,
	0x69, 0xcc, 0xc0, 0xf6, 0xea, 0xea, 0x9c, 0x73, 0xcf, 0xfd, 0x81, 0x73, 0xcb, 0x64, 0xa9, 0x64,
	0x49, 0x85, 0x2a, 0x79, 0x4e, 0xd7, 0xb6, 0x5c, 0x68, 0xa3, 0x9c, 0x22, 0x91, 0x44, 0x77, 0x71,
	0xba, 0x64, 0x16, 0xeb, 0x20, 0xb5, 0xce, 0x54, 0xb9, 0x0b, 0x6f, 0x17, 0x27, 0x68, 0x8c, 0x32,
	0x34, 0x57, 0x05, 0x86, 0x48, 0xfa, 0x19, 0x9e, 0xfa, 0xac, 0x06, 0xac, 0x64, 0x6b, 0xa4, 0x5c,
	0x5e, 0x29, 0x7a, 0x65, 0x10, 0xa9, 0x41, 0x4d, 0x08, 0x80, 0xe3, 0x6b, 0xa4, 0x02, 0xd9, 0x77,
	0x4c, 0x46, 0x97, 0xa3, 0x2c, 0x26, 0xff, 0xc3, 0xd1, 0x92, 0xc9, 0x6f, 0x68, 0x28, 0x2f, 0x92,
	0x71, 0x1b, 0xca, 0x2b, 0x43, 0x8d, 0xaa, 0x64, 0x91, 0x44, 0x75, 0x28, 0xfd, 0x39, 0x1e, 0x02,
	0xd7, 0x82, 0xdd, 0x7a, 0xf0, 0x04, 0x4e, 0x98, 0x10, 0xf4, 0x2b, 0x3a, 0xa7, 0x24, 0xb5, 0xb9,
	0x32, 0x35, 0x45, 0x94, 0x45, 0xe4, 0x39, 0x4c, 0x1d, 0x5b, 0x0a, 0xa4, 0x39, 0x33, 0x85, 0x4d,
	0xc6, 0x97, 0x51, 0x36, 0x7d, 0x35, 0x5b, 0x48, 0x74, 0x8b, 0x1a, 0xd3, 0x47, 0xfb, 0x3a, 0x3c,
	0x29, 0x79, 0x00, 0x53, 0xcf, 0x63, 0x1d, 0x73, 0x95, 0x4d, 0xf6, 0x7c, 0x90, 0x00, 0xd8, 0x95,
	0xba, 0x69, 0xb0, 0x26, 0x97, 0x51, 0x16, 0x93, 0x53, 0x88, 0x6b, 0x19, 0x68, 0xda, 0xd4, 0x7d,
	0x1f, 0xee, 0x97, 0x7b, 0xd0, 0x7e, 0x67, 0x5a, 0x8b, 0x5b, 0x2a, 0xb8, 0x75, 0xc9, 0xa1, 0xcf,
	0x3b, 0x83, 0x99, 0xab, 0x8c, 0xa4, 0x6b, 0xf6, 0xa3, 0xd1, 0x7d, 0xe4, 0x75, 0x13, 0x80, 0x9a,
	0x85, 0xba, 0x5b, 0x8d, 0x36, 0x01, 0x9f, 0xdb, 0xf3, 0x66, 0xea, 0xbd, 0xf9, 0x04, 0xa7, 0x5d,
	0x6b, 0xac, 0x63, 0xc6, 0xb5, 0x8e, 0xe4, 0x4c, 0xd2, 0xc0, 0x17, 0x8a, 0xfb, 0x27, 0xd3, 0xdf,
	0x40, 0xd2, 0x05, 0xee, 0xe2, 0x90, 0x18, 0x26, 0xad, 0xc5, 0xcd, 0x6f, 0xa5, 0xd1, 0x30, 0xc7,
	0x95, 0x0c, 0x80, 0xe9, 0x47, 0x78, 0x3c, 0xf4, 0xdb, 0xab, 0xfb, 0x0f, 0x0e, 0xf2, 0x15, 0xe3,
	0x86, 0x17, 0x0d, 0xc6, 0x1d, 0x64, 0x10, 0x34, 0x83, 0x7d, 0x83, 0xb6, 0x12, 0xae, 0x51, 0xa3,
	0xe1, 0x49, 0x17, 0xef, 0x0e, 0xa9, 0x4e, 0xf1, 0x80, 0xbd, 0xa2, 0x46, 0x3b, 0xdc, 0x1e, 0x0f,
	0xb8, 0x1d, 0x79, 0xb7, 0x4f, 0xe0, 0x90, 0xdb, 0x20, 0x33, 0xb4, 0x3a, 0x5d, 0xf4, 0x2b, 0xb8,
	0xae, 0xb8, 0xeb, 0xd0, 0xea, 0x8e, 0x42, 0xcf, 0x96, 0xbe, 0x84, 0x67, 0x43, 0xf9, 0x4b, 0xa3,
	0x58, 0x91, 0x33, 0xeb, 0xc8, 0x14, 0xa2, 0xaa, 0xd5, 0x97, 0xbe, 0xee, 0x33, 0x68, 0xc1, 0x72,
	0x6c, 0x27, 0xd8, 0xe0, 0x35, 0x99, 0xc3, 0xf1, 0xd6, 0x3c, 0x8f, 0xb2, 0x28, 0x7d, 0xf7, 0xc7,
	0x5f, 0x7a, 0xf7, 0xaf, 0x8e, 0xda, 0xd0, 0x9f, 0xf7, 0x90, 0x0e, 0xa2, 0x6c, 0xe4, 0xde, 0xeb,
	0xd2, 0x36, 0xf8, 0xd8, 0x4b, 0x7a, 0x01, 0x0f, 0x7b, 0x33, 0x88, 0xb2, 0xf0, 0x1b, 0xe2, 0xf5,
	0xc4, 0x30, 0x09, 0xdb, 0x52, 0xaf, 0x63, 0x9c, 0x66, 0x70, 0xde, 0xcd, 0xcd, 0x57, 0x4c, 0x96,
	0x61, 0x37, 0xb7, 0x33, 0xbf, 0xc0, 0xa3, 0x81, 0xcc, 0x76, 0x82, 0xea, 0xa1, 0xdb, 0xb4, 0x7b,
	0xab, 0xc4, 0x0d, 0x5c, 0x74, 0xb7, 0x3b, 0xed, 0x3e, 0x35, 0x2d, 0xfe, 0x35, 0x82, 0xf9, 0xbd,
	0xbb, 0x82, 0xb2, 0xd8, 0x79, 0xaa, 0xfe, 0xea, 0x8e, 0xf4, 0x97, 0x36, 0x10, 0xcf, 0xe1, 0xb8,
	0xbd, 0x0f, 0xde, 0xb3, 0x3d, 0x3f, 0x70, 0x73, 0x38, 0xbe, 0xe1, 0x92, 0xae, 0x2b, 0xe1, 0xb8,
	0x16, 0xe8, 0x6f, 0xc9, 0xa4, 0xbf, 0x87, 0xfb, 0x9e, 0xf7, 0x0c, 0x66, 0x4b, 0x7c, 0xeb, 0x07,
	0xe9, 0x03, 0xba, 0x95, 0x2a, 0xc2, 0x2d, 0xf9, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x66, 0xd2, 0x92,
	0xd1, 0xb8, 0x05, 0x00, 0x00,
}
